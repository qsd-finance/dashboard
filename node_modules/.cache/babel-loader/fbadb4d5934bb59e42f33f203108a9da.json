{"ast":null,"code":"import { GOVERNANCE_PROPOSAL_THRESHOLD, GOVERNANCE_QUORUM } from \"../constants/values\";\nexport function proposalStatus(epoch, start, period, initialized, approve, reject, total) {\n  if (start === 0) {\n    return \"N/A\";\n  }\n\n  if (epoch < start) {\n    return \"Unknown\";\n  }\n\n  if (epoch < start + period) {\n    return \"Voting\";\n  }\n\n  if (initialized) {\n    return \"Committed\";\n  }\n\n  if (epoch < start + period) {\n    return \"Rejected\"; // Not ended\n  }\n\n  if (approve.plus(reject).dividedBy(total).comparedTo(GOVERNANCE_QUORUM) < 0) {\n    return \"Rejected\"; // Didn't meet quorum\n  }\n\n  return approve.comparedTo(reject) > 0 ? \"Approved\" : \"Rejected\";\n}\nexport function canPropose(stake, totalStake) {\n  return stake.div(totalStake).comparedTo(GOVERNANCE_PROPOSAL_THRESHOLD) >= 0;\n}","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/utils/gov.ts"],"names":["GOVERNANCE_PROPOSAL_THRESHOLD","GOVERNANCE_QUORUM","proposalStatus","epoch","start","period","initialized","approve","reject","total","plus","dividedBy","comparedTo","canPropose","stake","totalStake","div"],"mappings":"AAAA,SAAQA,6BAAR,EAAuCC,iBAAvC,QAA+D,qBAA/D;AAGA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8CC,WAA9C,EAA2DC,OAA3D,EAAoEC,MAApE,EAA4EC,KAA5E,EAA2F;AAChG,MAAIL,KAAK,KAAK,CAAd,EAAiB;AACf,WAAO,KAAP;AACD;;AACD,MAAID,KAAK,GAAGC,KAAZ,EAAmB;AACjB,WAAO,SAAP;AACD;;AACD,MAAID,KAAK,GAAIC,KAAK,GAAGC,MAArB,EAA8B;AAC5B,WAAO,QAAP;AACD;;AACD,MAAIC,WAAJ,EAAiB;AACf,WAAO,WAAP;AACD;;AAED,MAAIH,KAAK,GAAIC,KAAK,GAAGC,MAArB,EAA8B;AAC5B,WAAO,UAAP,CAD4B,CACT;AACpB;;AACD,MAAIE,OAAO,CAACG,IAAR,CAAaF,MAAb,EAAqBG,SAArB,CAA+BF,KAA/B,EAAsCG,UAAtC,CAAiDX,iBAAjD,IAAsE,CAA1E,EAA6E;AAC3E,WAAO,UAAP,CAD2E,CACxD;AACpB;;AACD,SAAOM,OAAO,CAACK,UAAR,CAAmBJ,MAAnB,IAA6B,CAA7B,GAAiC,UAAjC,GAA8C,UAArD;AACD;AAED,OAAO,SAASK,UAAT,CAAoBC,KAApB,EAAsCC,UAAtC,EAAsE;AAC3E,SAAOD,KAAK,CAACE,GAAN,CAAUD,UAAV,EAAsBH,UAAtB,CAAiCZ,6BAAjC,KAAmE,CAA1E;AACD","sourcesContent":["import {GOVERNANCE_PROPOSAL_THRESHOLD, GOVERNANCE_QUORUM} from \"../constants/values\";\nimport BigNumber from \"bignumber.js\";\n\nexport function proposalStatus(epoch, start, period, initialized, approve, reject, total): string {\n  if (start === 0) {\n    return \"N/A\";\n  }\n  if (epoch < start) {\n    return \"Unknown\";\n  }\n  if (epoch < (start + period)) {\n    return \"Voting\"\n  }\n  if (initialized) {\n    return \"Committed\"\n  }\n\n  if (epoch < (start + period)) {\n    return \"Rejected\"; // Not ended\n  }\n  if (approve.plus(reject).dividedBy(total).comparedTo(GOVERNANCE_QUORUM) < 0) {\n    return \"Rejected\"; // Didn't meet quorum\n  }\n  return approve.comparedTo(reject) > 0 ? \"Approved\" : \"Rejected\";\n}\n\nexport function canPropose(stake: BigNumber, totalStake: BigNumber): boolean {\n  return stake.div(totalStake).comparedTo(GOVERNANCE_PROPOSAL_THRESHOLD) >= 0;\n}"]},"metadata":{},"sourceType":"module"}