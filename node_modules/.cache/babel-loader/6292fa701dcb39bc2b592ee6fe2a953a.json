{"ast":null,"code":"import _regeneratorRuntime from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Header,Layout}from'@aragon/ui';import{getDaoIsBootstrapping,getPoolTotalBonded,getTotalClaimable,getTotalRewarded,getPoolTotalStaged,getTokenBalance,getTokenTotalSupply,getTotalBonded,getTotalStaged}from'../../utils/infura';import{QSD,QSDS,UNI}from'../../constants/tokens';import{toTokenUnitsBN}from'../../utils/number';import BigNumber from'bignumber.js';import RegulationHeader from'./Header';import RegulationHistory from'./RegulationHistory';import IconHeader from'../common/IconHeader';import{getPoolBondingAddress,getPoolLPAddress}from'../../utils/pool';function Regulation(_ref){var user=_ref.user,hideHistory=_ref.hideHistory;var _useState=useState(new BigNumber(0)),_useState2=_slicedToArray(_useState,2),totalSupply=_useState2[0],setTotalSupply=_useState2[1];var _useState3=useState(new BigNumber(0)),_useState4=_slicedToArray(_useState3,2),daoBonded=_useState4[0],setTotalBonded=_useState4[1];var _useState5=useState(new BigNumber(0)),_useState6=_slicedToArray(_useState5,2),daoStaged=_useState6[0],setTotalStaged=_useState6[1];var _useState7=useState(new BigNumber(0)),_useState8=_slicedToArray(_useState7,2),poolLPLiquidity=_useState8[0],setPoolLiquidity=_useState8[1];var _useState9=useState(new BigNumber(0)),_useState10=_slicedToArray(_useState9,2),poolTotalRewarded=_useState10[0],setPoolTotalRewarded=_useState10[1];var _useState11=useState(new BigNumber(0)),_useState12=_slicedToArray(_useState11,2),poolTotalClaimable=_useState12[0],setPoolTotalClaimable=_useState12[1];useEffect(function(){var isCancelled=false;function updateUserInfo(){return _updateUserInfo.apply(this,arguments);}function _updateUserInfo(){_updateUserInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var poolBondingAddress,poolLpAddress,_yield$Promise$all,_yield$Promise$all2,totalSupplyStr,totalBondedStr,totalStagedStr,poolLiquidityStr,poolTotalBondedStr,poolTotalStagedStr,poolTotalRewardedStr,poolTotalClaimableStr,bootstrapping;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getPoolBondingAddress();case 2:poolBondingAddress=_context.sent;_context.next=5;return getPoolLPAddress();case 5:poolLpAddress=_context.sent;_context.next=8;return Promise.all([getTokenTotalSupply(QSD.addr),getTotalBonded(QSDS.addr),getTotalStaged(QSDS.addr),getTokenBalance(QSD.addr,UNI.addr),getPoolTotalBonded(poolBondingAddress),getPoolTotalStaged(poolBondingAddress),getTotalRewarded(poolLpAddress),getTotalClaimable(poolLpAddress),getDaoIsBootstrapping()]);case 8:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,9);totalSupplyStr=_yield$Promise$all2[0];totalBondedStr=_yield$Promise$all2[1];totalStagedStr=_yield$Promise$all2[2];poolLiquidityStr=_yield$Promise$all2[3];poolTotalBondedStr=_yield$Promise$all2[4];poolTotalStagedStr=_yield$Promise$all2[5];poolTotalRewardedStr=_yield$Promise$all2[6];poolTotalClaimableStr=_yield$Promise$all2[7];bootstrapping=_yield$Promise$all2[8];if(!isCancelled){setTotalSupply(toTokenUnitsBN(totalSupplyStr,QSD.decimals));if(bootstrapping){setTotalBonded(toTokenUnitsBN(totalBondedStr,QSD.decimals));setTotalStaged(toTokenUnitsBN(totalStagedStr,QSD.decimals));}else{setTotalBonded(toTokenUnitsBN(poolTotalBondedStr,QSD.decimals));setTotalStaged(toTokenUnitsBN(poolTotalStagedStr,QSD.decimals));}setPoolLiquidity(toTokenUnitsBN(poolLiquidityStr,QSD.decimals));setPoolTotalRewarded(toTokenUnitsBN(poolTotalRewardedStr,QSD.decimals));setPoolTotalClaimable(toTokenUnitsBN(poolTotalClaimableStr,QSD.decimals));}case 20:case\"end\":return _context.stop();}}},_callee);}));return _updateUserInfo.apply(this,arguments);}updateUserInfo();var id=setInterval(updateUserInfo,15000);// eslint-disable-next-line consistent-return\nreturn function(){isCancelled=true;clearInterval(id);};},[user]);return/*#__PURE__*/React.createElement(Layout,null,/*#__PURE__*/React.createElement(IconHeader,{icon:/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-chart-area\"}),text:\"Supply Regulation\"}),/*#__PURE__*/React.createElement(RegulationHeader,{totalSupply:totalSupply,daoBonded:daoBonded,daoStaged:daoStaged,poolLPLiquidity:poolLPLiquidity,poolLPRewarded:poolTotalRewarded,poolLPClaimable:poolTotalClaimable}),!hideHistory&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,{primary:\"Regulation History\"}),/*#__PURE__*/React.createElement(RegulationHistory,{user:user})));}export default Regulation;","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/Regulation/index.tsx"],"names":["React","useState","useEffect","Header","Layout","getDaoIsBootstrapping","getPoolTotalBonded","getTotalClaimable","getTotalRewarded","getPoolTotalStaged","getTokenBalance","getTokenTotalSupply","getTotalBonded","getTotalStaged","QSD","QSDS","UNI","toTokenUnitsBN","BigNumber","RegulationHeader","RegulationHistory","IconHeader","getPoolBondingAddress","getPoolLPAddress","Regulation","user","hideHistory","totalSupply","setTotalSupply","daoBonded","setTotalBonded","daoStaged","setTotalStaged","poolLPLiquidity","setPoolLiquidity","poolTotalRewarded","setPoolTotalRewarded","poolTotalClaimable","setPoolTotalClaimable","isCancelled","updateUserInfo","poolBondingAddress","poolLpAddress","Promise","all","addr","totalSupplyStr","totalBondedStr","totalStagedStr","poolLiquidityStr","poolTotalBondedStr","poolTotalStagedStr","poolTotalRewardedStr","poolTotalClaimableStr","bootstrapping","decimals","id","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Header, Layout } from '@aragon/ui';\n\nimport {\n  getDaoIsBootstrapping,\n  getPoolTotalBonded,\n  getTotalClaimable,\n  getTotalRewarded,\n  getPoolTotalStaged,\n  getTokenBalance,\n  getTokenTotalSupply,\n  getTotalBonded,\n  getTotalStaged,\n} from '../../utils/infura';\nimport { QSD, QSDS, UNI } from '../../constants/tokens';\nimport { toTokenUnitsBN } from '../../utils/number';\nimport BigNumber from 'bignumber.js';\nimport RegulationHeader from './Header';\nimport RegulationHistory from './RegulationHistory';\nimport IconHeader from '../common/IconHeader';\nimport { getPoolBondingAddress, getPoolLPAddress } from '../../utils/pool';\n\nfunction Regulation({\n  user,\n  hideHistory,\n}: {\n  user: string;\n  hideHistory?: boolean;\n}) {\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n  const [daoBonded, setTotalBonded] = useState(new BigNumber(0));\n  const [daoStaged, setTotalStaged] = useState(new BigNumber(0));\n  const [poolLPLiquidity, setPoolLiquidity] = useState(new BigNumber(0));\n  const [poolTotalRewarded, setPoolTotalRewarded] = useState(new BigNumber(0));\n  const [poolTotalClaimable, setPoolTotalClaimable] = useState(\n    new BigNumber(0)\n  );\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const poolBondingAddress = await getPoolBondingAddress();\n      const poolLpAddress = await getPoolLPAddress()\n\n      const [\n        totalSupplyStr,\n        totalBondedStr,\n        totalStagedStr,\n        poolLiquidityStr,\n        poolTotalBondedStr,\n        poolTotalStagedStr,\n        poolTotalRewardedStr,\n        poolTotalClaimableStr,\n        bootstrapping,\n      ] = await Promise.all([\n        getTokenTotalSupply(QSD.addr),\n\n        getTotalBonded(QSDS.addr),\n        getTotalStaged(QSDS.addr),\n\n        getTokenBalance(QSD.addr, UNI.addr),\n\n        getPoolTotalBonded(poolBondingAddress),\n        getPoolTotalStaged(poolBondingAddress),\n\n        getTotalRewarded(poolLpAddress),\n        getTotalClaimable(poolLpAddress),\n\n        getDaoIsBootstrapping(),\n      ]);\n\n      if (!isCancelled) {\n        setTotalSupply(toTokenUnitsBN(totalSupplyStr, QSD.decimals));\n\n        if (bootstrapping) {\n          setTotalBonded(toTokenUnitsBN(totalBondedStr, QSD.decimals));\n          setTotalStaged(toTokenUnitsBN(totalStagedStr, QSD.decimals));\n        } else {\n          setTotalBonded(toTokenUnitsBN(poolTotalBondedStr, QSD.decimals));\n          setTotalStaged(toTokenUnitsBN(poolTotalStagedStr, QSD.decimals));\n        }\n\n        setPoolLiquidity(toTokenUnitsBN(poolLiquidityStr, QSD.decimals));\n        setPoolTotalRewarded(\n          toTokenUnitsBN(poolTotalRewardedStr, QSD.decimals)\n        );\n        setPoolTotalClaimable(\n          toTokenUnitsBN(poolTotalClaimableStr, QSD.decimals)\n        );\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <Layout>\n      <IconHeader\n        icon={<i className='fas fa-chart-area' />}\n        text='Supply Regulation'\n      />\n\n      <RegulationHeader\n        totalSupply={totalSupply}\n        daoBonded={daoBonded}\n        daoStaged={daoStaged}\n        poolLPLiquidity={poolLPLiquidity}\n        poolLPRewarded={poolTotalRewarded}\n        poolLPClaimable={poolTotalClaimable}\n      />\n\n      {!hideHistory && (\n        <>\n          <Header primary='Regulation History' />\n          <RegulationHistory user={user} />\n        </>\n      )}\n    </Layout>\n  );\n}\n\nexport default Regulation;\n"]},"metadata":{},"sourceType":"module"}