{"ast":null,"code":"import React,{useEffect}from'react';import{Modal,Button,Header}from'@aragon/ui';import{useWallet}from'use-wallet';function ConnectModal(_ref){var visible=_ref.visible,onClose=_ref.onClose,onConnect=_ref.onConnect;var wallet=useWallet();var connectMetamask=function connectMetamask(){wallet.connect(\"injected\");};var connectWalletConnect=function connectWalletConnect(){wallet.connect(\"walletconnect\");};var connectCoinbase=function connectCoinbase(){wallet.connect(\"walletlink\");};useEffect(function(){if(wallet.account){onConnect&&onConnect(wallet);onClose&&onClose();}},[wallet,onConnect,onClose]);return/*#__PURE__*/React.createElement(Modal,{visible:visible,onClose:onClose},/*#__PURE__*/React.createElement(Header,{primary:\"Select a wallet provider\"}),/*#__PURE__*/React.createElement(\"div\",{style:{width:'50%',margin:'auto',padding:'1%'}},/*#__PURE__*/React.createElement(Button,{wide:true,label:'Metamask',icon:/*#__PURE__*/React.createElement(\"img\",{src:\"./wallets/metamask-fox.svg\",style:{height:24},alt:\"Metamask\"}),onClick:connectMetamask})),/*#__PURE__*/React.createElement(\"div\",{style:{width:'50%',margin:'auto',padding:'1%'}},/*#__PURE__*/React.createElement(Button,{wide:true,label:'WalletConnect',icon:/*#__PURE__*/React.createElement(\"img\",{src:\"./wallets/wallet-connect.svg\",style:{height:24},alt:\"WalletConnect\"}),onClick:connectWalletConnect})),/*#__PURE__*/React.createElement(\"div\",{style:{width:'50%',margin:'auto',padding:'1%'}},/*#__PURE__*/React.createElement(Button,{wide:true,label:'Coinbase Wallet',icon:/*#__PURE__*/React.createElement(\"img\",{src:\"./wallets/coinbase-wallet.png\",style:{height:24},alt:\"Coinbase Wallet\"}),onClick:connectCoinbase})));}export default ConnectModal;","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/NavBar/ConnectModal.tsx"],"names":["React","useEffect","Modal","Button","Header","useWallet","ConnectModal","visible","onClose","onConnect","wallet","connectMetamask","connect","connectWalletConnect","connectCoinbase","account","width","margin","padding","height"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,MAAxB,KAAsC,YAAtC,CACA,OAASC,SAAT,KAA0B,YAA1B,CAQA,QAASC,CAAAA,YAAT,MAEqB,IADnBC,CAAAA,OACmB,MADnBA,OACmB,CADVC,OACU,MADVA,OACU,CADDC,SACC,MADDA,SACC,CACnB,GAAMC,CAAAA,MAAM,CAAGL,SAAS,EAAxB,CAEA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BD,MAAM,CAACE,OAAP,CAAe,UAAf,EACD,CAFD,CAIA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjCH,MAAM,CAACE,OAAP,CAAe,eAAf,EACD,CAFD,CAIA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BJ,MAAM,CAACE,OAAP,CAAe,YAAf,EACD,CAFD,CAIAX,SAAS,CAAC,UAAM,CACd,GAAIS,MAAM,CAACK,OAAX,CAAoB,CAClBN,SAAS,EAAIA,SAAS,CAACC,MAAD,CAAtB,CACAF,OAAO,EAAIA,OAAO,EAAlB,CACD,CACF,CALQ,CAKN,CAACE,MAAD,CAASD,SAAT,CAAoBD,OAApB,CALM,CAAT,CAOA,mBACE,oBAAC,KAAD,EAAO,OAAO,CAAED,OAAhB,CAAyB,OAAO,CAAEC,OAAlC,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,0BAAhB,EADF,cAGE,2BAAK,KAAK,CAAE,CAACQ,KAAK,CAAE,KAAR,CAAeC,MAAM,CAAE,MAAvB,CAA+BC,OAAO,CAAE,IAAxC,CAAZ,eACE,oBAAC,MAAD,EACE,IAAI,KADN,CAEE,KAAK,CAAE,UAFT,CAGE,IAAI,cAAE,2BAAK,GAAG,6BAAR,CAAwC,KAAK,CAAE,CAAEC,MAAM,CAAE,EAAV,CAA/C,CAA+D,GAAG,CAAC,UAAnE,EAHR,CAIE,OAAO,CAAER,eAJX,EADF,CAHF,cAWE,2BAAK,KAAK,CAAE,CAACK,KAAK,CAAE,KAAR,CAAeC,MAAM,CAAE,MAAvB,CAA+BC,OAAO,CAAE,IAAxC,CAAZ,eACE,oBAAC,MAAD,EACE,IAAI,KADN,CAEE,KAAK,CAAE,eAFT,CAGE,IAAI,cAAE,2BAAK,GAAG,+BAAR,CAA0C,KAAK,CAAE,CAAEC,MAAM,CAAE,EAAV,CAAjD,CAAiE,GAAG,CAAC,eAArE,EAHR,CAIE,OAAO,CAAEN,oBAJX,EADF,CAXF,cAmBE,2BAAK,KAAK,CAAE,CAACG,KAAK,CAAE,KAAR,CAAeC,MAAM,CAAE,MAAvB,CAA+BC,OAAO,CAAE,IAAxC,CAAZ,eACE,oBAAC,MAAD,EACE,IAAI,KADN,CAEE,KAAK,CAAE,iBAFT,CAGE,IAAI,cAAE,2BAAK,GAAG,gCAAR,CAA2C,KAAK,CAAE,CAAEC,MAAM,CAAE,EAAV,CAAlD,CAAkE,GAAG,CAAC,iBAAtE,EAHR,CAIE,OAAO,CAAEL,eAJX,EADF,CAnBF,CADF,CA8BD,CAED,cAAeR,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Modal, Button, Header } from '@aragon/ui';\nimport { useWallet } from 'use-wallet';\n\ntype ConnectModalProps = {\n  visible: boolean,\n  onClose: Function,\n  onConnect: Function\n};\n\nfunction ConnectModal({\n  visible, onClose, onConnect\n}:ConnectModalProps) {\n  const wallet = useWallet();\n\n  const connectMetamask = () => {\n    wallet.connect(\"injected\");\n  };\n\n  const connectWalletConnect = () => {\n    wallet.connect(\"walletconnect\");\n  };\n\n  const connectCoinbase = () => {\n    wallet.connect(\"walletlink\");\n  };\n\n  useEffect(() => {\n    if (wallet.account) {\n      onConnect && onConnect(wallet);\n      onClose && onClose();\n    }\n  }, [wallet, onConnect, onClose]);\n\n  return (\n    <Modal visible={visible} onClose={onClose}>\n      <Header primary=\"Select a wallet provider\" />\n\n      <div style={{width: '50%', margin: 'auto', padding: '1%'}}>\n        <Button\n          wide\n          label={'Metamask'}\n          icon={<img src={`./wallets/metamask-fox.svg`} style={{ height: 24 }} alt=\"Metamask\"/>}\n          onClick={connectMetamask}\n        />\n      </div>\n      <div style={{width: '50%', margin: 'auto', padding: '1%'}}>\n        <Button\n          wide\n          label={'WalletConnect'}\n          icon={<img src={`./wallets/wallet-connect.svg`} style={{ height: 24 }} alt=\"WalletConnect\"/>}\n          onClick={connectWalletConnect}\n        />\n      </div>\n      <div style={{width: '50%', margin: 'auto', padding: '1%'}}>\n        <Button\n          wide\n          label={'Coinbase Wallet'}\n          icon={<img src={`./wallets/coinbase-wallet.png`} style={{ height: 24 }} alt=\"Coinbase Wallet\"/>}\n          onClick={connectCoinbase}\n        />\n      </div>\n    </Modal>\n  );\n}\n\nexport default ConnectModal;\n"]},"metadata":{},"sourceType":"module"}