{"ast":null,"code":"var _jsxFileName = \"/Users/J/crypto/dashboard/src/components/common/Row.tsx\";\nimport React from 'react';\nexport const Row = ({\n  style,\n  ...props\n}) => {\n  const childrenCount = Array.isArray(props.children) ? props.children.length : 1;\n  const gapsCount = childrenCount - 1;\n  const columnWidth = (100 - gapsCount * 6) / childrenCount;\n  const gridTemplateColumns = new Array(childrenCount).fill(columnWidth + '%').join(' ');\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      display: 'grid',\n      gridTemplateColumns,\n      justifyContent: 'space-between',\n      ...style\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/common/Row.tsx"],"names":["React","Row","style","props","childrenCount","Array","isArray","children","length","gapsCount","columnWidth","gridTemplateColumns","fill","join","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAMA,OAAO,MAAMC,GAAuB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAC9D,QAAMC,aAAa,GAAGC,KAAK,CAACC,OAAN,CAAcH,KAAK,CAACI,QAApB,IAClBJ,KAAK,CAACI,QAAN,CAAeC,MADG,GAElB,CAFJ;AAGA,QAAMC,SAAS,GAAGL,aAAa,GAAG,CAAlC;AACA,QAAMM,WAAW,GAAG,CAAC,MAAMD,SAAS,GAAG,CAAnB,IAAwBL,aAA5C;AACA,QAAMO,mBAAmB,GAAG,IAAIN,KAAJ,CAAUD,aAAV,EACzBQ,IADyB,CACpBF,WAAW,GAAG,GADM,EAEzBG,IAFyB,CAEpB,GAFoB,CAA5B;AAIA,sBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELH,MAAAA,mBAFK;AAGLI,MAAAA,cAAc,EAAE,eAHX;AAIL,SAAGb;AAJE;AADT,KAOMC,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAWD,CArBM","sourcesContent":["import React from 'react';\n\ninterface RowProps {\n  style?: React.CSSProperties;\n}\n\nexport const Row: React.FC<RowProps> = ({ style, ...props }) => {\n  const childrenCount = Array.isArray(props.children)\n    ? props.children.length\n    : 1;\n  const gapsCount = childrenCount - 1;\n  const columnWidth = (100 - gapsCount * 6) / childrenCount;\n  const gridTemplateColumns = new Array(childrenCount)\n    .fill(columnWidth + '%')\n    .join(' ');\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns,\n        justifyContent: 'space-between',\n        ...style,\n      }}\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}