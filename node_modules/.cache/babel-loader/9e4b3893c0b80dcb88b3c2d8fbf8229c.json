{"ast":null,"code":"/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */export function getPreference(key,defaultValue){return localStorage.getItem(key)||defaultValue;}/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */export function storePreference(key,value){localStorage.setItem(key,value);}","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/utils/storage.ts"],"names":["getPreference","key","defaultValue","localStorage","getItem","storePreference","value","setItem"],"mappings":"AAAA;;;;GAKA,MAAO,SAASA,CAAAA,aAAT,CAAuBC,GAAvB,CAAmCC,YAAnC,CAAgE,CACrE,MAAOC,CAAAA,YAAY,CAACC,OAAb,CAAqBH,GAArB,GAA6BC,YAApC,CACD,CAED;;;;GAKA,MAAO,SAASG,CAAAA,eAAT,CAAyBJ,GAAzB,CAAqCK,KAArC,CAAwD,CAC7DH,YAAY,CAACI,OAAb,CAAqBN,GAArB,CAA0BK,KAA1B,EACD","sourcesContent":["/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key:string, defaultValue:string): string {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key:string, value:string):void {\n  localStorage.setItem(key, value);\n}\n"]},"metadata":{},"sourceType":"module"}