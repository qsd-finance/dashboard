{"ast":null,"code":"import{GOVERNANCE_PROPOSAL_THRESHOLD,GOVERNANCE_QUORUM}from\"../constants/values\";export function proposalStatus(epoch,start,period,initialized,approve,reject,total){if(start===0){return\"N/A\";}if(epoch<start){return\"Unknown\";}if(epoch<start+period){return\"Voting\";}if(initialized){return\"Committed\";}if(epoch<start+period){return\"Rejected\";// Not ended\n}if(approve.plus(reject).dividedBy(total).comparedTo(GOVERNANCE_QUORUM)<0){return\"Rejected\";// Didn't meet quorum\n}return approve.comparedTo(reject)>0?\"Approved\":\"Rejected\";}export function canPropose(stake,totalStake){return stake.div(totalStake).comparedTo(GOVERNANCE_PROPOSAL_THRESHOLD)>=0;}","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/utils/gov.ts"],"names":["GOVERNANCE_PROPOSAL_THRESHOLD","GOVERNANCE_QUORUM","proposalStatus","epoch","start","period","initialized","approve","reject","total","plus","dividedBy","comparedTo","canPropose","stake","totalStake","div"],"mappings":"AAAA,OAAQA,6BAAR,CAAuCC,iBAAvC,KAA+D,qBAA/D,CAGA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+BC,KAA/B,CAAsCC,MAAtC,CAA8CC,WAA9C,CAA2DC,OAA3D,CAAoEC,MAApE,CAA4EC,KAA5E,CAA2F,CAChG,GAAIL,KAAK,GAAK,CAAd,CAAiB,CACf,MAAO,KAAP,CACD,CACD,GAAID,KAAK,CAAGC,KAAZ,CAAmB,CACjB,MAAO,SAAP,CACD,CACD,GAAID,KAAK,CAAIC,KAAK,CAAGC,MAArB,CAA8B,CAC5B,MAAO,QAAP,CACD,CACD,GAAIC,WAAJ,CAAiB,CACf,MAAO,WAAP,CACD,CAED,GAAIH,KAAK,CAAIC,KAAK,CAAGC,MAArB,CAA8B,CAC5B,MAAO,UAAP,CAAmB;AACpB,CACD,GAAIE,OAAO,CAACG,IAAR,CAAaF,MAAb,EAAqBG,SAArB,CAA+BF,KAA/B,EAAsCG,UAAtC,CAAiDX,iBAAjD,EAAsE,CAA1E,CAA6E,CAC3E,MAAO,UAAP,CAAmB;AACpB,CACD,MAAOM,CAAAA,OAAO,CAACK,UAAR,CAAmBJ,MAAnB,EAA6B,CAA7B,CAAiC,UAAjC,CAA8C,UAArD,CACD,CAED,MAAO,SAASK,CAAAA,UAAT,CAAoBC,KAApB,CAAsCC,UAAtC,CAAsE,CAC3E,MAAOD,CAAAA,KAAK,CAACE,GAAN,CAAUD,UAAV,EAAsBH,UAAtB,CAAiCZ,6BAAjC,GAAmE,CAA1E,CACD","sourcesContent":["import {GOVERNANCE_PROPOSAL_THRESHOLD, GOVERNANCE_QUORUM} from \"../constants/values\";\nimport BigNumber from \"bignumber.js\";\n\nexport function proposalStatus(epoch, start, period, initialized, approve, reject, total): string {\n  if (start === 0) {\n    return \"N/A\";\n  }\n  if (epoch < start) {\n    return \"Unknown\";\n  }\n  if (epoch < (start + period)) {\n    return \"Voting\"\n  }\n  if (initialized) {\n    return \"Committed\"\n  }\n\n  if (epoch < (start + period)) {\n    return \"Rejected\"; // Not ended\n  }\n  if (approve.plus(reject).dividedBy(total).comparedTo(GOVERNANCE_QUORUM) < 0) {\n    return \"Rejected\"; // Didn't meet quorum\n  }\n  return approve.comparedTo(reject) > 0 ? \"Approved\" : \"Rejected\";\n}\n\nexport function canPropose(stake: BigNumber, totalStake: BigNumber): boolean {\n  return stake.div(totalStake).comparedTo(GOVERNANCE_PROPOSAL_THRESHOLD) >= 0;\n}"]},"metadata":{},"sourceType":"module"}