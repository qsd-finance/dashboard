{"ast":null,"code":"import _regeneratorRuntime from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{Layout}from'@aragon/ui';import BigNumber from'bignumber.js';import{getBalanceBonded,getBalanceOfStaged,getEpoch,getExpansionAmount,getFluidUntil,getInstantaneousQSDPrice,getLockedUntil,getStatusOf,getTokenAllowance,getTokenBalance,getTokenTotalSupply,getTotalBonded}from'../../utils/infura';import{QSD,QSDS}from'../../constants/tokens';import{DAO_EXIT_LOCKUP_EPOCHS}from'../../constants/values';import{toTokenUnitsBN,toBaseUnitBN,toFloat}from'../../utils/number';import{approve,deposit,withdraw,bond,unbondUnderlying}from'../../utils/web3';import AccountPageHeader from'./Header';import{WithdrawDeposit,BondUnbond,IconHeader,Guide}from'../common';function Wallet(_ref){var user=_ref.user;var _useParams=useParams(),override=_useParams.override;if(override){user=override;}var _useState=useState(0),_useState2=_slicedToArray(_useState,2),epoch=_useState2[0],setEpoch=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),qsdPrice=_useState4[0],setQSDPrice=_useState4[1];var _useState5=useState(new BigNumber(0)),_useState6=_slicedToArray(_useState5,2),totalBonded=_useState6[0],setTotalBonded=_useState6[1];var _useState7=useState(new BigNumber(0)),_useState8=_slicedToArray(_useState7,2),userQSDBalance=_useState8[0],setUserQSDBalance=_useState8[1];var _useState9=useState(new BigNumber(0)),_useState10=_slicedToArray(_useState9,2),userQSDAllowance=_useState10[0],setUserQSDAllowance=_useState10[1];var _useState11=useState(new BigNumber(0)),_useState12=_slicedToArray(_useState11,2),userQSDSBalance=_useState12[0],setUserQSDSBalance=_useState12[1];var _useState13=useState(new BigNumber(0)),_useState14=_slicedToArray(_useState13,2),totalQSDSSupply=_useState14[0],setTotalQSDSSupply=_useState14[1];var _useState15=useState(new BigNumber(0)),_useState16=_slicedToArray(_useState15,2),userStagedBalance=_useState16[0],setUserStagedBalance=_useState16[1];var _useState17=useState(new BigNumber(0)),_useState18=_slicedToArray(_useState17,2),userBondedBalance=_useState18[0],setUserBondedBalance=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),userStatus=_useState20[0],setUserStatus=_useState20[1];var _useState21=useState(0),_useState22=_slicedToArray(_useState21,2),userStatusUnlocked=_useState22[0],setUserStatusUnlocked=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),lockup=_useState24[0],setLockup=_useState24[1];var _useState25=useState(null),_useState26=_slicedToArray(_useState25,2),expansionAmount=_useState26[0],setExpansionAmount=_useState26[1];// Updates APR\nuseEffect(function(){var updateAPR=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,epoch,qsdPrice,expansionAmount,esdsSupply,esdsBonded,totalQSDSSupply;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([getEpoch(QSDS.addr),getInstantaneousQSDPrice(),getExpansionAmount(),getTokenTotalSupply(QSDS.addr),getTotalBonded(QSDS.addr)]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,5);epoch=_yield$Promise$all2[0];qsdPrice=_yield$Promise$all2[1];expansionAmount=_yield$Promise$all2[2];esdsSupply=_yield$Promise$all2[3];esdsBonded=_yield$Promise$all2[4];totalQSDSSupply=toTokenUnitsBN(esdsSupply,QSDS.decimals);setEpoch(parseInt(epoch,10));setLockup(DAO_EXIT_LOCKUP_EPOCHS);setQSDPrice(qsdPrice);setExpansionAmount(expansionAmount);setTotalQSDSSupply(new BigNumber(totalQSDSSupply));setTotalBonded(toTokenUnitsBN(esdsBonded,QSD.decimals));case 16:case\"end\":return _context.stop();}}},_callee);}));return function updateAPR(){return _ref2.apply(this,arguments);};}();updateAPR();},[]);//Update User balances\nuseEffect(function(){if(user===''){setUserQSDBalance(new BigNumber(0));setUserQSDAllowance(new BigNumber(0));setUserQSDSBalance(new BigNumber(0));setTotalQSDSSupply(new BigNumber(0));setUserStagedBalance(new BigNumber(0));setUserBondedBalance(new BigNumber(0));setUserStatus(0);return;}var isCancelled=false;function updateUserInfo(){return _updateUserInfo.apply(this,arguments);}function _updateUserInfo(){_updateUserInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$Promise$all3,_yield$Promise$all4,esdBalance,esdAllowance,esdsBalance,stagedBalance,bondedBalance,status,fluidUntilStr,lockedUntilStr,userQSDBalance,userQSDSBalance,userStagedBalance,userBondedBalance,userStatus,fluidUntil,lockedUntil;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.all([getTokenBalance(QSD.addr,user),getTokenAllowance(QSD.addr,user,QSDS.addr),getTokenBalance(QSDS.addr,user),getBalanceOfStaged(QSDS.addr,user),getBalanceBonded(QSDS.addr,user),getStatusOf(QSDS.addr,user),getFluidUntil(QSDS.addr,user),getLockedUntil(QSDS.addr,user)]);case 2:_yield$Promise$all3=_context2.sent;_yield$Promise$all4=_slicedToArray(_yield$Promise$all3,8);esdBalance=_yield$Promise$all4[0];esdAllowance=_yield$Promise$all4[1];esdsBalance=_yield$Promise$all4[2];stagedBalance=_yield$Promise$all4[3];bondedBalance=_yield$Promise$all4[4];status=_yield$Promise$all4[5];fluidUntilStr=_yield$Promise$all4[6];lockedUntilStr=_yield$Promise$all4[7];userQSDBalance=toTokenUnitsBN(esdBalance,QSD.decimals);userQSDSBalance=toTokenUnitsBN(esdsBalance,QSDS.decimals);userStagedBalance=toTokenUnitsBN(stagedBalance,QSDS.decimals);userBondedBalance=toTokenUnitsBN(bondedBalance,QSDS.decimals);userStatus=parseInt(status,10);fluidUntil=parseInt(fluidUntilStr,10);lockedUntil=parseInt(lockedUntilStr,10);if(!isCancelled){setUserQSDBalance(new BigNumber(userQSDBalance));setUserQSDAllowance(new BigNumber(esdAllowance));setUserQSDSBalance(new BigNumber(userQSDSBalance));setUserStagedBalance(new BigNumber(userStagedBalance));setUserBondedBalance(new BigNumber(userBondedBalance));setUserStatus(userStatus);setUserStatusUnlocked(Math.max(fluidUntil,lockedUntil));}case 20:case\"end\":return _context2.stop();}}},_callee2);}));return _updateUserInfo.apply(this,arguments);}updateUserInfo();var id=setInterval(updateUserInfo,15000);// eslint-disable-next-line consistent-return\nreturn function(){isCancelled=true;clearInterval(id);};},[user]);var daoWeeklyYield='...';var daoHourlyYield='...';var daoDailyYield='...';var daoMonthlyYield='...';// Define number formatting\nvar options={minimumFractionDigits:0,maximumFractionDigits:2};var numberFormat=new Intl.NumberFormat('en-US',options);// Calculate DAO APR (4 hrs)\nif(qsdPrice&&totalBonded&&expansionAmount){if(epoch<=72){var totalQSD=toFloat(totalBonded);var qsdToAdd=expansionAmount/2;var daoYield=qsdToAdd/totalQSD*100;daoHourlyYield=numberFormat.format(daoYield/4)+'%';daoDailyYield=numberFormat.format(daoYield*6)+'%';daoWeeklyYield=numberFormat.format(daoYield*6*7)+'%';daoMonthlyYield=numberFormat.format(daoYield*6*30)+'%';}else{daoWeeklyYield='0%';daoHourlyYield='0%';daoDailyYield='0%';daoMonthlyYield='0%';}}return/*#__PURE__*/React.createElement(Layout,null,/*#__PURE__*/React.createElement(Guide,{aprs:{hourly:daoHourlyYield,daily:daoDailyYield,weekly:daoWeeklyYield,monthly:daoMonthlyYield},bodyInstructions:/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"u\",null,\"WARNING:\"),\" Bootstrapping period has ended. Please remove any remaining QSD from this section.\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"Step 1: Stage your QSD\",/*#__PURE__*/React.createElement(\"br\",null),\"Step 2: Bond your QSD\",/*#__PURE__*/React.createElement(\"br\",null),\"Step 3: Unbond any amount of rewards you wish to claim\",/*#__PURE__*/React.createElement(\"br\",null),\"Step 4: Claim rewards after 1 epoch\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"b\",null,\"Note: Please unbond your QSD during epoch 73. At the beginning of epoch 74 withdraw your QSD to your wallet and then stage and bond your tokens on the QSD page to continue receiving rewards. (You will be unable to bond QSD when TWAP is above peg from Epoch 75 onwards)\"))}),/*#__PURE__*/React.createElement(IconHeader,{icon:/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-dot-circle\"}),text:\"Bootstrapping Rewards\"}),/*#__PURE__*/React.createElement(AccountPageHeader,{accountQSDBalance:userQSDBalance,accountQSDSBalance:userQSDSBalance,totalQSDSSupply:totalQSDSSupply,accountStagedBalance:userStagedBalance,accountBondedBalance:userBondedBalance,accountStatus:userStatus,unlocked:userStatusUnlocked}),/*#__PURE__*/React.createElement(WithdrawDeposit,{suffix:\"QSD\",balance:userQSDBalance,allowance:userQSDAllowance,stagedBalance:userStagedBalance,status:userStatus,disabled:!user,handleApprove:function handleApprove(){approve(QSD.addr,QSDS.addr);},handleDeposit:function handleDeposit(depositAmount){deposit(QSDS.addr,toBaseUnitBN(depositAmount,QSD.decimals));},handleWithdraw:function handleWithdraw(withdrawAmount){withdraw(QSDS.addr,toBaseUnitBN(withdrawAmount,QSD.decimals));}}),/*#__PURE__*/React.createElement(BondUnbond,{suffix:\"QSD\",staged:userStagedBalance,bonded:userBondedBalance,status:userStatus,lockup:lockup,disabled:!user,handleBond:function handleBond(bondAmount){bond(QSDS.addr,toBaseUnitBN(bondAmount,QSD.decimals));},handleUnbond:function handleUnbond(unbondAmount){unbondUnderlying(QSDS.addr,toBaseUnitBN(unbondAmount,QSD.decimals));}}));}export default Wallet;","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/Wallet/index.tsx"],"names":["React","useState","useEffect","useParams","Layout","BigNumber","getBalanceBonded","getBalanceOfStaged","getEpoch","getExpansionAmount","getFluidUntil","getInstantaneousQSDPrice","getLockedUntil","getStatusOf","getTokenAllowance","getTokenBalance","getTokenTotalSupply","getTotalBonded","QSD","QSDS","DAO_EXIT_LOCKUP_EPOCHS","toTokenUnitsBN","toBaseUnitBN","toFloat","approve","deposit","withdraw","bond","unbondUnderlying","AccountPageHeader","WithdrawDeposit","BondUnbond","IconHeader","Guide","Wallet","user","override","epoch","setEpoch","qsdPrice","setQSDPrice","totalBonded","setTotalBonded","userQSDBalance","setUserQSDBalance","userQSDAllowance","setUserQSDAllowance","userQSDSBalance","setUserQSDSBalance","totalQSDSSupply","setTotalQSDSSupply","userStagedBalance","setUserStagedBalance","userBondedBalance","setUserBondedBalance","userStatus","setUserStatus","userStatusUnlocked","setUserStatusUnlocked","lockup","setLockup","expansionAmount","setExpansionAmount","updateAPR","Promise","all","addr","esdsSupply","esdsBonded","decimals","parseInt","isCancelled","updateUserInfo","esdBalance","esdAllowance","esdsBalance","stagedBalance","bondedBalance","status","fluidUntilStr","lockedUntilStr","fluidUntil","lockedUntil","Math","max","id","setInterval","clearInterval","daoWeeklyYield","daoHourlyYield","daoDailyYield","daoMonthlyYield","options","minimumFractionDigits","maximumFractionDigits","numberFormat","Intl","NumberFormat","totalQSD","qsdToAdd","daoYield","format","hourly","daily","weekly","monthly","color","depositAmount","withdrawAmount","bondAmount","unbondAmount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Layout } from '@aragon/ui';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  getBalanceBonded,\n  getBalanceOfStaged,\n  getEpoch,\n  getExpansionAmount,\n  getFluidUntil,\n  getInstantaneousQSDPrice,\n  getLockedUntil,\n  getStatusOf,\n  getTokenAllowance,\n  getTokenBalance,\n  getTokenTotalSupply,\n  getTotalBonded,\n} from '../../utils/infura';\nimport { QSD, QSDS } from '../../constants/tokens';\nimport { DAO_EXIT_LOCKUP_EPOCHS } from '../../constants/values';\nimport { toTokenUnitsBN, toBaseUnitBN, toFloat } from '../../utils/number';\nimport {\n  approve,\n  deposit,\n  withdraw,\n  bond,\n  unbondUnderlying,\n} from '../../utils/web3';\n\nimport AccountPageHeader from './Header';\nimport { WithdrawDeposit, BondUnbond, IconHeader, Guide } from '../common';\n\nfunction Wallet({ user }: { user: string }) {\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [epoch, setEpoch] = useState<number>(0);\n  const [qsdPrice, setQSDPrice] = useState<BigNumber | null>(null);\n  const [totalBonded, setTotalBonded] = useState(new BigNumber(0));\n  const [userQSDBalance, setUserQSDBalance] = useState(new BigNumber(0));\n  const [userQSDAllowance, setUserQSDAllowance] = useState(new BigNumber(0));\n  const [userQSDSBalance, setUserQSDSBalance] = useState(new BigNumber(0));\n  const [totalQSDSSupply, setTotalQSDSSupply] = useState(new BigNumber(0));\n  const [userStagedBalance, setUserStagedBalance] = useState(new BigNumber(0));\n  const [userBondedBalance, setUserBondedBalance] = useState(new BigNumber(0));\n  const [userStatus, setUserStatus] = useState(0);\n  const [userStatusUnlocked, setUserStatusUnlocked] = useState(0);\n  const [lockup, setLockup] = useState(0);\n  const [expansionAmount, setExpansionAmount] = useState<number | null>(null);\n\n  // Updates APR\n  useEffect(() => {\n    const updateAPR = async () => {\n      const [\n        epoch,\n        qsdPrice,\n        expansionAmount,\n        esdsSupply,\n        esdsBonded,\n      ] = await Promise.all([\n        getEpoch(QSDS.addr),\n        getInstantaneousQSDPrice(),\n        getExpansionAmount(),\n        getTokenTotalSupply(QSDS.addr),\n        getTotalBonded(QSDS.addr),\n      ]);\n\n      const totalQSDSSupply = toTokenUnitsBN(esdsSupply, QSDS.decimals);\n\n      setEpoch(parseInt(epoch, 10));\n      setLockup(DAO_EXIT_LOCKUP_EPOCHS);\n      setQSDPrice(qsdPrice);\n      setExpansionAmount(expansionAmount);\n      setTotalQSDSSupply(new BigNumber(totalQSDSSupply));\n      setTotalBonded(toTokenUnitsBN(esdsBonded, QSD.decimals));\n    };\n\n    updateAPR();\n  }, []);\n\n  //Update User balances\n  useEffect(() => {\n    if (user === '') {\n      setUserQSDBalance(new BigNumber(0));\n      setUserQSDAllowance(new BigNumber(0));\n      setUserQSDSBalance(new BigNumber(0));\n      setTotalQSDSSupply(new BigNumber(0));\n      setUserStagedBalance(new BigNumber(0));\n      setUserBondedBalance(new BigNumber(0));\n      setUserStatus(0);\n      return;\n    }\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const [\n        esdBalance,\n        esdAllowance,\n        esdsBalance,\n        stagedBalance,\n        bondedBalance,\n        status,\n        fluidUntilStr,\n        lockedUntilStr,\n      ] = await Promise.all([\n        getTokenBalance(QSD.addr, user),\n        getTokenAllowance(QSD.addr, user, QSDS.addr),\n        getTokenBalance(QSDS.addr, user),\n        getBalanceOfStaged(QSDS.addr, user),\n        getBalanceBonded(QSDS.addr, user),\n        getStatusOf(QSDS.addr, user),\n\n        getFluidUntil(QSDS.addr, user),\n        getLockedUntil(QSDS.addr, user),\n      ]);\n\n      const userQSDBalance = toTokenUnitsBN(esdBalance, QSD.decimals);\n      const userQSDSBalance = toTokenUnitsBN(esdsBalance, QSDS.decimals);\n      const userStagedBalance = toTokenUnitsBN(stagedBalance, QSDS.decimals);\n      const userBondedBalance = toTokenUnitsBN(bondedBalance, QSDS.decimals);\n      const userStatus = parseInt(status, 10);\n      const fluidUntil = parseInt(fluidUntilStr, 10);\n      const lockedUntil = parseInt(lockedUntilStr, 10);\n\n      if (!isCancelled) {\n        setUserQSDBalance(new BigNumber(userQSDBalance));\n        setUserQSDAllowance(new BigNumber(esdAllowance));\n        setUserQSDSBalance(new BigNumber(userQSDSBalance));\n        setUserStagedBalance(new BigNumber(userStagedBalance));\n        setUserBondedBalance(new BigNumber(userBondedBalance));\n        setUserStatus(userStatus);\n        setUserStatusUnlocked(Math.max(fluidUntil, lockedUntil));\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  let daoWeeklyYield = '...';\n  let daoHourlyYield = '...';\n  let daoDailyYield = '...';\n  let daoMonthlyYield = '...';\n\n  // Define number formatting\n  var options = { minimumFractionDigits: 0,\n                maximumFractionDigits: 2 };\n  var numberFormat = new Intl.NumberFormat('en-US', options);\n\n  // Calculate DAO APR (4 hrs)\n  if (qsdPrice && totalBonded && expansionAmount) {\n    if (epoch <= 72) {\n      const totalQSD = toFloat(totalBonded);\n      const qsdToAdd = expansionAmount / 2;\n\n      const daoYield = (qsdToAdd / totalQSD) * 100;\n\n      daoHourlyYield = numberFormat.format(daoYield / 4) + '%';\n      daoDailyYield = numberFormat.format(daoYield * 6) + '%';\n      daoWeeklyYield = numberFormat.format(daoYield * 6 * 7) + '%';\n      daoMonthlyYield = numberFormat.format(daoYield * 6 * 30) + '%';\n    } else {\n      daoWeeklyYield = '0%';\n      daoHourlyYield = '0%';\n      daoDailyYield = '0%';\n      daoMonthlyYield = '0%';\n    }\n  }\n\n  return (\n    <Layout>\n      <Guide\n        aprs={{\n          hourly: daoHourlyYield,\n          daily: daoDailyYield,\n          weekly: daoWeeklyYield,\n          monthly: daoMonthlyYield\n        }}\n        bodyInstructions={\n          <p>\n              <p style={{ color: 'red' }}>            \n              <b><u>WARNING:</u> Bootstrapping period has ended. Please remove any remaining QSD from this section.</b></p>\n\n            <br />\n            <br />\n            Step 1: Stage your QSD\n            <br />\n            Step 2: Bond your QSD\n            <br />\n            Step 3: Unbond any amount of rewards you wish to claim\n            <br />\n            Step 4: Claim rewards after 1 epoch\n            <br />\n            <br />\n            <b>\n              Note: Please unbond your QSD during epoch 73. At the beginning of\n              epoch 74 withdraw your QSD to your wallet and then stage and bond\n              your tokens on the QSD page to continue receiving rewards. (You\n              will be unable to bond QSD when TWAP is above peg from Epoch 75\n              onwards)\n            </b>\n          </p>\n        }\n      />\n\n      <IconHeader\n        icon={<i className='fas fa-dot-circle' />}\n        text='Bootstrapping Rewards'\n      />\n\n      <AccountPageHeader\n        accountQSDBalance={userQSDBalance}\n        accountQSDSBalance={userQSDSBalance}\n        totalQSDSSupply={totalQSDSSupply}\n        accountStagedBalance={userStagedBalance}\n        accountBondedBalance={userBondedBalance}\n        accountStatus={userStatus}\n        unlocked={userStatusUnlocked}\n      />\n\n      {/* <WithdrawDeposit\n        user={user}\n        balance={userQSDBalance}\n        allowance={userQSDAllowance}\n        stagedBalance={userStagedBalance}\n        status={userStatus}\n      /> */}\n\n      <WithdrawDeposit\n        suffix='QSD'\n        balance={userQSDBalance}\n        allowance={userQSDAllowance}\n        stagedBalance={userStagedBalance}\n        status={userStatus}\n        disabled={!user}\n        handleApprove={() => {\n          approve(QSD.addr, QSDS.addr);\n        }}\n        handleDeposit={(depositAmount) => {\n          deposit(QSDS.addr, toBaseUnitBN(depositAmount, QSD.decimals));\n        }}\n        handleWithdraw={(withdrawAmount) => {\n          withdraw(QSDS.addr, toBaseUnitBN(withdrawAmount, QSD.decimals));\n        }}\n      />\n\n      {/* <BondUnbond\n        staged={userStagedBalance}\n        bonded={userBondedBalance}\n        status={userStatus}\n        lockup={lockup}\n      /> */}\n\n      <BondUnbond\n        suffix='QSD'\n        staged={userStagedBalance}\n        bonded={userBondedBalance}\n        status={userStatus}\n        lockup={lockup}\n        disabled={!user}\n        handleBond={(bondAmount) => {\n          bond(QSDS.addr, toBaseUnitBN(bondAmount, QSD.decimals));\n        }}\n        handleUnbond={(unbondAmount) => {\n          unbondUnderlying(QSDS.addr, toBaseUnitBN(unbondAmount, QSD.decimals));\n        }}\n      />\n    </Layout>\n  );\n}\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}