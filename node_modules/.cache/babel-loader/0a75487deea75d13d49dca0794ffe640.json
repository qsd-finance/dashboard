{"ast":null,"code":"import './_commonjsHelpers-97e6d7b1.js';\nimport { _ as _defineProperty } from './defineProperty-a0480c32.js';\nimport { d as dayjs } from './dayjs.min-e57fb69a.js';\n\nfunction handleDateSelect(_ref) {\n  var date = _ref.date,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate; // clicking on start date resets it, so it can be re-picked\n\n  if (startDate && dayjs(date).isSame(startDate, 'day')) {\n    return {\n      startDate: null\n    };\n  } // clicking on end date resets it, so it can be re-picked\n\n\n  if (endDate && dayjs(date).isSame(endDate, 'day')) {\n    return {\n      endDate: null\n    };\n  }\n\n  var isValidStartDate = !endDate || !dayjs(date).isAfter(endDate);\n  var isValidEndDate = !startDate || !dayjs(date).isBefore(startDate); // if we have startDate, then `date` is the end date\n\n  var isValidDate = startDate ? isValidEndDate : isValidStartDate; // both dates are selected - if a date is clicked and it's before\n  // start date, it should be the new start date\n  // (this way the start date does not have to be reset before setting)\n  // (the converse case for end date is handled implicitly below, because\n  // after both dates are selected, any selected date will be candidate for\n  // new end date)\n\n  if (startDate && endDate && isValidStartDate && dayjs(date).isBefore(startDate, 'day')) {\n    return {\n      startDate: date\n    };\n  } // one date is selected, but the clicked date is not corresponding\n  // (start selected, but clicked a date before start, and vice-versa)\n  // in this case, reverse the range\n\n\n  if (!startDate && endDate && dayjs(date).isAfter(endDate)) {\n    return {\n      startDate: endDate,\n      endDate: date\n    };\n  }\n\n  if (!endDate && startDate && dayjs(date).isBefore(startDate)) {\n    return {\n      startDate: date,\n      endDate: startDate\n    };\n  }\n\n  if (isValidDate) {\n    return _defineProperty({}, startDate ? 'endDate' : 'startDate', date);\n  }\n}\n\nexport { handleDateSelect };","map":{"version":3,"sources":["../../src/components/DateRangePicker/utils.js"],"names":["date","startDate","endDate","dayjs","isValidStartDate","isValidEndDate","isValidDate"],"mappings":";;;;AAEO,SAAA,gBAAA,CAAA,IAAA,EAAwD;AAAA,MAA5BA,IAA4B,GAAA,IAAA,CAA5BA,IAA4B;AAAA,MAAtBC,SAAsB,GAAA,IAAA,CAAtBA,SAAsB;AAAA,MAAXC,OAAW,GAAA,IAAA,CAAXA,OAAW,CAAA,CAC7D;;AACA,MAAID,SAAS,IAAIE,KAAK,CAALA,IAAK,CAALA,CAAAA,MAAAA,CAAAA,SAAAA,EAAjB,KAAiBA,CAAjB,EAAuD;AACrD,WAAO;AACLF,MAAAA,SAAS,EAAE;AADN,KAAP;AAH2D,GAAA,CAAA;;;AAQ7D,MAAIC,OAAO,IAAIC,KAAK,CAALA,IAAK,CAALA,CAAAA,MAAAA,CAAAA,OAAAA,EAAf,KAAeA,CAAf,EAAmD;AACjD,WAAO;AACLD,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;;AAED,MAAME,gBAAgB,GAAG,CAAA,OAAA,IAAY,CAACD,KAAK,CAALA,IAAK,CAALA,CAAAA,OAAAA,CAAtC,OAAsCA,CAAtC;AACA,MAAME,cAAc,GAAG,CAAA,SAAA,IAAc,CAACF,KAAK,CAALA,IAAK,CAALA,CAAAA,QAAAA,CAfuB,SAevBA,CAAtC,CAf6D,CAAA;;AAiB7D,MAAMG,WAAW,GAAGL,SAAS,GAAA,cAAA,GAjBgC,gBAiB7D,CAjB6D,CAAA;AAoB7D;AACA;AACA;AACA;AACA;;AACA,MACEA,SAAS,IAATA,OAAAA,IAAAA,gBAAAA,IAGAE,KAAK,CAALA,IAAK,CAALA,CAAAA,QAAAA,CAAAA,SAAAA,EAJF,KAIEA,CAJF,EAKE;AACA,WAAO;AACLF,MAAAA,SAAS,EAAED;AADN,KAAP;AA/B2D,GAAA,CAAA;AAqC7D;AACA;;;AACA,MAAI,CAAA,SAAA,IAAA,OAAA,IAAyBG,KAAK,CAALA,IAAK,CAALA,CAAAA,OAAAA,CAA7B,OAA6BA,CAA7B,EAA2D;AACzD,WAAO;AACLF,MAAAA,SAAS,EADJ,OAAA;AAELC,MAAAA,OAAO,EAAEF;AAFJ,KAAP;AAID;;AACD,MAAI,CAAA,OAAA,IAAA,SAAA,IAAyBG,KAAK,CAALA,IAAK,CAALA,CAAAA,QAAAA,CAA7B,SAA6BA,CAA7B,EAA8D;AAC5D,WAAO;AACLF,MAAAA,SAAS,EADJ,IAAA;AAELC,MAAAA,OAAO,EAAED;AAFJ,KAAP;AAID;;AAED,MAAA,WAAA,EAAiB;AACf,WAAA,eAAA,CAAA,EAAA,EACGA,SAAS,GAAA,SAAA,GADZ,WAAA,EAAA,IAAA,CAAA;AAGD;AACF","sourcesContent":["import dayjs from 'dayjs'\n\nexport function handleDateSelect({ date, startDate, endDate }) {\n  // clicking on start date resets it, so it can be re-picked\n  if (startDate && dayjs(date).isSame(startDate, 'day')) {\n    return {\n      startDate: null,\n    }\n  }\n  // clicking on end date resets it, so it can be re-picked\n  if (endDate && dayjs(date).isSame(endDate, 'day')) {\n    return {\n      endDate: null,\n    }\n  }\n\n  const isValidStartDate = !endDate || !dayjs(date).isAfter(endDate)\n  const isValidEndDate = !startDate || !dayjs(date).isBefore(startDate)\n  // if we have startDate, then `date` is the end date\n  const isValidDate = startDate ? isValidEndDate : isValidStartDate\n\n  // both dates are selected - if a date is clicked and it's before\n  // start date, it should be the new start date\n  // (this way the start date does not have to be reset before setting)\n  // (the converse case for end date is handled implicitly below, because\n  // after both dates are selected, any selected date will be candidate for\n  // new end date)\n  if (\n    startDate &&\n    endDate &&\n    isValidStartDate &&\n    dayjs(date).isBefore(startDate, 'day')\n  ) {\n    return {\n      startDate: date,\n    }\n  }\n\n  // one date is selected, but the clicked date is not corresponding\n  // (start selected, but clicked a date before start, and vice-versa)\n  // in this case, reverse the range\n  if (!startDate && endDate && dayjs(date).isAfter(endDate)) {\n    return {\n      startDate: endDate,\n      endDate: date,\n    }\n  }\n  if (!endDate && startDate && dayjs(date).isBefore(startDate)) {\n    return {\n      startDate: date,\n      endDate: startDate,\n    }\n  }\n\n  if (isValidDate) {\n    return {\n      [startDate ? 'endDate' : 'startDate']: date,\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}