{"ast":null,"code":"import _slicedToArray from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,IconCaution,IconCircleMinus,IconCirclePlus}from'@aragon/ui';import BigNumber from'bignumber.js';import React,{useState}from'react';import{isPos}from'../../utils/number';import{BalanceBlock,MaxButton}from'../common';import BigNumberInput from'../common/BigNumberInput';import TextBlock from'../common/TextBlock';import{TopBorderSection}from'./TopBorderSection';export var BondUnbond=function BondUnbond(_ref){var suffix=_ref.suffix,extraTip=_ref.extraTip,staged=_ref.staged,bonded=_ref.bonded,status=_ref.status,lockup=_ref.lockup,disabled=_ref.disabled,handleBond=_ref.handleBond,handleUnbond=_ref.handleUnbond;var _useState=useState(new BigNumber(0)),_useState2=_slicedToArray(_useState,2),bondAmount=_useState2[0],setBondAmount=_useState2[1];var _useState3=useState(new BigNumber(0)),_useState4=_slicedToArray(_useState3,2),unbondAmount=_useState4[0],setUnbondAmount=_useState4[1];return/*#__PURE__*/React.createElement(TopBorderSection,{title:\"Bond\"},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flexWrap:'wrap'}},/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'16%'}},/*#__PURE__*/React.createElement(BalanceBlock,{asset:\"Bonded\",balance:bonded,suffix:suffix})),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'16%'}},/*#__PURE__*/React.createElement(TextBlock,{label:\"Exit Lockup\",text:lockup===0?'':lockup===1?'1 epoch':\"\".concat(lockup,\" epochs\")})),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'33%',paddingTop:'2%'}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'60%',minWidth:'6em'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BigNumberInput,{adornment:suffix,value:bondAmount,setter:setBondAmount}),/*#__PURE__*/React.createElement(MaxButton,{onClick:function onClick(){setBondAmount(staged);}}))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'40%',minWidth:'7em'}},/*#__PURE__*/React.createElement(Button,{wide:true,icon:status===0?/*#__PURE__*/React.createElement(IconCirclePlus,null):/*#__PURE__*/React.createElement(IconCaution,null),label:\"Bond\",onClick:function onClick(){handleBond(bondAmount,function(){setBondAmount(new BigNumber(0));});},disabled:!isPos(bondAmount)||disabled})))),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'2%'}}),/*#__PURE__*/React.createElement(\"div\",{style:{flexBasis:'33%',paddingTop:'2%'}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'60%',minWidth:'6em'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BigNumberInput,{adornment:suffix,value:unbondAmount,setter:setUnbondAmount}),/*#__PURE__*/React.createElement(MaxButton,{onClick:function onClick(){setUnbondAmount(bonded);}}))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'40%',minWidth:'7em'}},/*#__PURE__*/React.createElement(Button,{wide:true,icon:status===0?/*#__PURE__*/React.createElement(IconCircleMinus,null):/*#__PURE__*/React.createElement(IconCaution,null),label:\"Unbond\",onClick:function onClick(){handleUnbond(unbondAmount,function(){setUnbondAmount(new BigNumber(0));});},disabled:!isPos(unbondAmount)||disabled}))))),/*#__PURE__*/React.createElement(\"div\",{style:{width:'100%',paddingTop:'2%',textAlign:'center'}},/*#__PURE__*/React.createElement(\"span\",{style:{opacity:0.5}},\"Bonding events will restart the lockup timer.\",' ',extraTip&&extraTip)));};","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/common/BondUnbond.tsx"],"names":["Button","IconCaution","IconCircleMinus","IconCirclePlus","BigNumber","React","useState","isPos","BalanceBlock","MaxButton","BigNumberInput","TextBlock","TopBorderSection","BondUnbond","suffix","extraTip","staged","bonded","status","lockup","disabled","handleBond","handleUnbond","bondAmount","setBondAmount","unbondAmount","setUnbondAmount","display","flexWrap","flexBasis","paddingTop","width","minWidth","textAlign","opacity"],"mappings":"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","sourcesContent":["import {\n  Button,\n  IconCaution,\n  IconCircleMinus,\n  IconCirclePlus,\n} from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport React, { useState } from 'react';\nimport { isPos } from '../../utils/number';\nimport { BalanceBlock, MaxButton } from '../common';\nimport BigNumberInput from '../common/BigNumberInput';\nimport TextBlock from '../common/TextBlock';\nimport { TopBorderSection } from './TopBorderSection';\n\ninterface BondUnbondProps {\n  suffix: string;\n  extraTip?: string;\n  staged: BigNumber;\n  bonded: BigNumber;\n  status: number;\n  lockup: number;\n  disabled: boolean;\n  handleBond: (bondAmount: BigNumber, callback: () => void) => void;\n  handleUnbond: (unbondAmount: BigNumber, callback: () => void) => void;\n}\n\nexport const BondUnbond: React.FC<BondUnbondProps> = ({\n  suffix,\n  extraTip,\n  staged,\n  bonded,\n  status,\n  lockup,\n  disabled,\n  handleBond,\n  handleUnbond,\n}) => {\n  const [bondAmount, setBondAmount] = useState(new BigNumber(0));\n  const [unbondAmount, setUnbondAmount] = useState(new BigNumber(0));\n\n  return (\n    <TopBorderSection title='Bond'>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {/* Total bonded */}\n        <div style={{ flexBasis: '16%' }}>\n          <BalanceBlock asset='Bonded' balance={bonded} suffix={suffix} />\n        </div>\n        {/* Exit lockup */}\n        <div style={{ flexBasis: '16%' }}>\n          <TextBlock\n            label='Exit Lockup'\n            text={\n              lockup === 0 ? '' : lockup === 1 ? '1 epoch' : `${lockup} epochs`\n            }\n          />\n        </div>\n        {/* Bond UNI-V2 within Pool */}\n        <div style={{ flexBasis: '33%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%', minWidth: '6em' }}>\n              <>\n                <BigNumberInput\n                  adornment={suffix}\n                  value={bondAmount}\n                  setter={setBondAmount}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setBondAmount(staged);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%', minWidth: '7em' }}>\n              <Button\n                wide\n                icon={status === 0 ? <IconCirclePlus /> : <IconCaution />}\n                label='Bond'\n                onClick={() => {\n                  handleBond(bondAmount, () => {\n                    setBondAmount(new BigNumber(0));\n                  });\n                }}\n                disabled={!isPos(bondAmount) || disabled}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ flexBasis: '2%' }} />\n        {/* Unbond UNI-V2 within Pool */}\n        <div style={{ flexBasis: '33%', paddingTop: '2%' }}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ width: '60%', minWidth: '6em' }}>\n              <>\n                <BigNumberInput\n                  adornment={suffix}\n                  value={unbondAmount}\n                  setter={setUnbondAmount}\n                />\n                <MaxButton\n                  onClick={() => {\n                    setUnbondAmount(bonded);\n                  }}\n                />\n              </>\n            </div>\n            <div style={{ width: '40%', minWidth: '7em' }}>\n              <Button\n                wide\n                icon={status === 0 ? <IconCircleMinus /> : <IconCaution />}\n                label='Unbond'\n                onClick={() => {\n                  handleUnbond(unbondAmount, () => {\n                    setUnbondAmount(new BigNumber(0));\n                  });\n                }}\n                disabled={!isPos(unbondAmount) || disabled}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{ width: '100%', paddingTop: '2%', textAlign: 'center' }}>\n        <span style={{ opacity: 0.5 }}>\n          Bonding events will restart the lockup timer.{' '}\n          {extraTip && extraTip}\n        </span>\n      </div>\n    </TopBorderSection>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}