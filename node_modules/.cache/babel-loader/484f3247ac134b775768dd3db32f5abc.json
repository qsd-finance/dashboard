{"ast":null,"code":"var _jsxFileName = \"/Users/J/crypto/dashboard/src/components/HomePage/index.tsx\";\nimport { Button } from '@aragon/ui';\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Layout } from '@aragon/ui';\nimport { IconHeader, Row, Tile, TopBorderBox } from '../common';\nimport Regulation from '../Regulation';\nimport { QSD, QSDS } from '../../constants/tokens';\nimport { getDaoIsBootstrapping, getExpansionAmount, getInstantaneousQSDPrice, getLPBondedLiquidity, getPoolTotalBonded, getTokenTotalSupply, getTotalBonded, getUniswapLiquidity } from '../../utils/infura';\nimport { formatBN, toFloat, toTokenUnitsBN } from '../../utils/number';\nimport { epochformatted } from '../../utils/calculation';\nimport BigNumber from 'bignumber.js';\nimport { getPoolBondingAddress } from '../../utils/pool';\n\nfunction HomePage({\n  user\n}) {\n  const [epochTime, setEpochTime] = useState('0-00:00:00');\n  const [totalSupply, setTotalSupply] = useState(null);\n  const [qsdPrice, setQSDPrice] = useState(null);\n  const [qsdLiquidity, setQSDLiquidity] = useState(null);\n  const [daiLiquidity, setDAILiquidity] = useState(null);\n  const [daoBonded, setDaoBonded] = useState(null);\n  const [lpQsdLiquidity, setLpQsdLiquidity] = useState(null);\n  const [lpDaiLiquidity, setLpDaiLiquidity] = useState(null);\n  const [expansionAmount, setExpansionAmount] = useState(null);\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const poolBonding = await getPoolBondingAddress();\n      const [supply, tokenPrice, liquidity, liquidityLp, expansion, bootstrapping, daoBonded, bondingBonded] = await Promise.all([getTokenTotalSupply(QSD.addr), getInstantaneousQSDPrice(), getUniswapLiquidity(), getLPBondedLiquidity(), getExpansionAmount(), getDaoIsBootstrapping(), getTotalBonded(QSDS.addr), getPoolTotalBonded(poolBonding)]);\n      setTotalSupply(toTokenUnitsBN(supply, 18));\n      setQSDPrice(toTokenUnitsBN(tokenPrice, 18));\n      setQSDLiquidity(toTokenUnitsBN(liquidity.qsd, 18));\n      setDAILiquidity(toTokenUnitsBN(liquidity.dai, 18));\n      setLpQsdLiquidity(liquidityLp.qsd);\n      setLpDaiLiquidity(liquidityLp.dai);\n      setExpansionAmount(expansion);\n\n      if (bootstrapping) {\n        setDaoBonded(toTokenUnitsBN(daoBonded, 18));\n      } else {\n        setDaoBonded(toTokenUnitsBN(bondingBonded, 18));\n      }\n    }\n\n    async function updateUserInfo() {\n      if (!isCancelled) {\n        setEpochTime(epochformatted());\n      }\n    }\n\n    updateInfo();\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 1000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  let daoWeeklyYield = '...'; //let daoHourlyYield = '...';\n\n  let daoDailyYield = '...';\n  let daoMonthlyYield = '...';\n  let lpWeeklyYield = '...'; //let lpHourlyYield = '...';\n\n  let lpDailyYield = '...';\n  let lpMonthlyYield = '...'; // Define number formatting\n\n  var options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  };\n  var numberFormat = new Intl.NumberFormat('en-US', options); // Calculate LP APR (4 hrs)\n\n  if (qsdPrice && lpQsdLiquidity && lpDaiLiquidity && expansionAmount) {\n    const totalDAI = lpQsdLiquidity * toFloat(qsdPrice) + lpDaiLiquidity;\n    const daiToAdd = expansionAmount / 2 * toFloat(qsdPrice);\n    const lpYield = daiToAdd / totalDAI * 100; //lpHourlyYield = numberFormat.format(lpYield / 4) + '%';\n\n    lpDailyYield = numberFormat.format(lpYield * 6) + '%';\n    lpWeeklyYield = numberFormat.format(lpYield * 6 * 7) + '%';\n    lpMonthlyYield = numberFormat.format(lpYield * 6 * 30) + '%';\n  } // Calculate DAO APR (4 hrs)\n\n\n  if (qsdPrice && daoBonded && expansionAmount) {\n    const totalQSD = toFloat(daoBonded);\n    const qsdToAdd = expansionAmount / 2;\n    const daoYield = qsdToAdd / totalQSD * 100; //daoHourlyYield = numberFormat.format(daoYield / 4) + '%';\n\n    daoDailyYield = numberFormat.format(daoYield * 6) + '%';\n    daoWeeklyYield = numberFormat.format(daoYield * 6 * 7) + '%';\n    daoMonthlyYield = numberFormat.format(daoYield * 6 * 30) + '%';\n  }\n\n  const curEpoch = Number(epochTime.split('-')[0]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '60px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    line1: \"Epoch\",\n    line2: epochTime,\n    line3: `Advance -> ${curEpoch + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tile, {\n    line1: \"Total Supply\",\n    line2: totalSupply === null ? '...' : formatBN(totalSupply, 2),\n    line3: `${Number(epochTime.split('-')[0]) < 108 ? 'Bootstrapping phase' : (qsdPrice === null || qsdPrice === void 0 ? void 0 : qsdPrice.isGreaterThan(new BigNumber(10).pow(new BigNumber(18)))) ? 'Above Peg' : 'Idle phase'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tile, {\n    line1: \"Market Cap\",\n    line2: `${totalSupply !== null && qsdPrice !== null ? '$' + formatBN(totalSupply.multipliedBy(qsdPrice), 2) : '...'}`,\n    line3: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconHeader, {\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-exchange-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }),\n    text: \"Trade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TopBorderBox, {\n    title: \"QSD Price\",\n    body: qsdPrice ? formatBN(qsdPrice, 2) + ' DAI' : '...',\n    action: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        textDecoration: 'none'\n      },\n      href: `https://app.uniswap.org/#/swap?outputCurrency=${QSD.addr}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, \"Trade QSD\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TopBorderBox, {\n    title: \"QSD in LP pool\",\n    body: qsdLiquidity ? formatBN(qsdLiquidity, 2) + ' QSD' : '...',\n    action: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        textDecoration: 'none'\n      },\n      href: `https://info.uniswap.org/token/${QSD.addr}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }, \"Trade Info\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TopBorderBox, {\n    title: \"QSD Liquidity\",\n    body: daiLiquidity ? formatBN(daiLiquidity, 2) + ' DAI' : '...',\n    action: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        textDecoration: 'none'\n      },\n      href: `https://app.uniswap.org/#/add/${QSD.addr}/0x6b175474e89094c44da98b954eedeac495271d0f`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, \"Add Liquidity\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconHeader, {\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chart-line\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }),\n    text: \"Invest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TopBorderBox, {\n    title: \"Bonded QSD APR\",\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }, \"QSD Daily: \", daoDailyYield, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }, \"QSD Weekly: \", daoWeeklyYield, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, \"QSD Monthly: \", daoMonthlyYield, \" \")),\n    action: /*#__PURE__*/React.createElement(NavLink, Object.assign({\n      component: Button,\n      to: curEpoch < 72 ? '/bootstrapping' : '/qsd'\n    }, {\n      external: false\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }), \"Add QSD\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TopBorderBox, {\n    title: \"Bonded LP APR\",\n    body: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, \"LP Daily: \", lpDailyYield, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, \"LP Weekly: \", lpWeeklyYield, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }, \"LP Monthly: \", lpMonthlyYield, \" \")),\n    action: /*#__PURE__*/React.createElement(NavLink, Object.assign({\n      component: Button,\n      to: \"/lp\"\n    }, {\n      external: false\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }), \"Add LP\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Regulation, {\n    user: user,\n    hideHistory: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: 22\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, Object.assign({\n    component: Button,\n    to: \"/regulation\"\n  }, {\n    external: false\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }), \"View more\")))));\n}\n\nfunction Section(props) {\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      marginTop: 80\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/HomePage/index.tsx"],"names":["Button","React","useEffect","useState","NavLink","Layout","IconHeader","Row","Tile","TopBorderBox","Regulation","QSD","QSDS","getDaoIsBootstrapping","getExpansionAmount","getInstantaneousQSDPrice","getLPBondedLiquidity","getPoolTotalBonded","getTokenTotalSupply","getTotalBonded","getUniswapLiquidity","formatBN","toFloat","toTokenUnitsBN","epochformatted","BigNumber","getPoolBondingAddress","HomePage","user","epochTime","setEpochTime","totalSupply","setTotalSupply","qsdPrice","setQSDPrice","qsdLiquidity","setQSDLiquidity","daiLiquidity","setDAILiquidity","daoBonded","setDaoBonded","lpQsdLiquidity","setLpQsdLiquidity","lpDaiLiquidity","setLpDaiLiquidity","expansionAmount","setExpansionAmount","isCancelled","updateInfo","poolBonding","supply","tokenPrice","liquidity","liquidityLp","expansion","bootstrapping","bondingBonded","Promise","all","addr","qsd","dai","updateUserInfo","id","setInterval","clearInterval","daoWeeklyYield","daoDailyYield","daoMonthlyYield","lpWeeklyYield","lpDailyYield","lpMonthlyYield","options","minimumFractionDigits","maximumFractionDigits","numberFormat","Intl","NumberFormat","totalDAI","daiToAdd","lpYield","format","totalQSD","qsdToAdd","daoYield","curEpoch","Number","split","margin","isGreaterThan","pow","multipliedBy","textDecoration","external","textAlign","marginTop","Section","props"],"mappings":"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","sourcesContent":["import { Button } from '@aragon/ui';\nimport React, { ComponentProps, useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Layout } from '@aragon/ui';\nimport { IconHeader, Row, Tile, TopBorderBox } from '../common';\nimport Regulation from '../Regulation';\nimport { QSD, QSDS } from '../../constants/tokens';\nimport {\n  getDaoIsBootstrapping,\n  getExpansionAmount,\n  getInstantaneousQSDPrice,\n  getLPBondedLiquidity,\n  getPoolTotalBonded,\n  getTokenTotalSupply,\n  getTotalBonded,\n  getUniswapLiquidity,\n} from '../../utils/infura';\nimport { formatBN, toFloat, toTokenUnitsBN } from '../../utils/number';\nimport { epochformatted } from '../../utils/calculation';\nimport BigNumber from 'bignumber.js';\nimport { getPoolBondingAddress } from '../../utils/pool';\n\ntype HomePageProps = {\n  user: string;\n};\n\nfunction HomePage({ user }: HomePageProps) {\n  const [epochTime, setEpochTime] = useState('0-00:00:00');\n  const [totalSupply, setTotalSupply] = useState<BigNumber | null>(null);\n  const [qsdPrice, setQSDPrice] = useState<BigNumber | null>(null);\n  const [qsdLiquidity, setQSDLiquidity] = useState<BigNumber | null>(null);\n  const [daiLiquidity, setDAILiquidity] = useState<BigNumber | null>(null);\n\n  const [daoBonded, setDaoBonded] = useState<BigNumber | null>(null);\n  const [lpQsdLiquidity, setLpQsdLiquidity] = useState<number | null>(null);\n  const [lpDaiLiquidity, setLpDaiLiquidity] = useState<number | null>(null);\n  const [expansionAmount, setExpansionAmount] = useState<number | null>(null);\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateInfo() {\n      const poolBonding = await getPoolBondingAddress();\n\n      const [\n        supply,\n        tokenPrice,\n        liquidity,\n        liquidityLp,\n        expansion,\n        bootstrapping,\n        daoBonded,\n        bondingBonded,\n      ] = await Promise.all([\n        getTokenTotalSupply(QSD.addr),\n        getInstantaneousQSDPrice(),\n        getUniswapLiquidity(),\n        getLPBondedLiquidity(),\n        getExpansionAmount(),\n        getDaoIsBootstrapping(),\n        getTotalBonded(QSDS.addr),\n        getPoolTotalBonded(poolBonding),\n      ]);\n\n      setTotalSupply(toTokenUnitsBN(supply, 18));\n      setQSDPrice(toTokenUnitsBN(tokenPrice, 18));\n      setQSDLiquidity(toTokenUnitsBN(liquidity.qsd, 18));\n      setDAILiquidity(toTokenUnitsBN(liquidity.dai, 18));\n      setLpQsdLiquidity(liquidityLp.qsd);\n      setLpDaiLiquidity(liquidityLp.dai);\n      setExpansionAmount(expansion);\n\n      if (bootstrapping) {\n        setDaoBonded(toTokenUnitsBN(daoBonded, 18));\n      } else {\n        setDaoBonded(toTokenUnitsBN(bondingBonded, 18));\n      }\n    }\n\n    async function updateUserInfo() {\n      if (!isCancelled) {\n        setEpochTime(epochformatted());\n      }\n    }\n\n    updateInfo();\n    updateUserInfo();\n\n    const id = setInterval(updateUserInfo, 1000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  let daoWeeklyYield = '...';\n  //let daoHourlyYield = '...';\n  let daoDailyYield = '...';\n  let daoMonthlyYield = '...';\n\n  let lpWeeklyYield = '...';\n  //let lpHourlyYield = '...';\n  let lpDailyYield = '...';\n  let lpMonthlyYield = '...';\n\n  // Define number formatting\n  var options = { minimumFractionDigits: 0,\n                maximumFractionDigits: 2 };\n  var numberFormat = new Intl.NumberFormat('en-US', options);\n\n  // Calculate LP APR (4 hrs)\n  if (qsdPrice && lpQsdLiquidity && lpDaiLiquidity && expansionAmount) {\n    const totalDAI = lpQsdLiquidity * toFloat(qsdPrice) + lpDaiLiquidity;\n    const daiToAdd = (expansionAmount / 2) * toFloat(qsdPrice);\n\n    const lpYield = (daiToAdd / totalDAI) * 100;\n\n    //lpHourlyYield = numberFormat.format(lpYield / 4) + '%';\n    lpDailyYield = numberFormat.format(lpYield * 6) + '%';\n    lpWeeklyYield = numberFormat.format(lpYield * 6 * 7) + '%';\n    lpMonthlyYield = numberFormat.format(lpYield * 6 * 30) +'%';\n  }\n\n  // Calculate DAO APR (4 hrs)\n  if (qsdPrice && daoBonded && expansionAmount) {\n    const totalQSD = toFloat(daoBonded);\n    const qsdToAdd = expansionAmount / 2;\n\n    const daoYield = (qsdToAdd / totalQSD) * 100;\n\n    //daoHourlyYield = numberFormat.format(daoYield / 4) + '%';\n    daoDailyYield = numberFormat.format(daoYield * 6) + '%';\n    daoWeeklyYield = numberFormat.format(daoYield * 6 * 7) + '%';\n    daoMonthlyYield = numberFormat.format(daoYield * 6 * 30) + '%';\n  }\n\n  const curEpoch = Number(epochTime.split('-')[0]);\n\n  return (\n    <Layout>\n      <div style={{ margin: '60px 0' }}>\n        <Row>\n          <Tile\n            line1='Epoch'\n            line2={epochTime}\n            line3={`Advance -> ${curEpoch + 1}`}\n          />\n          <Tile\n            line1='Total Supply'\n            line2={totalSupply === null ? '...' : formatBN(totalSupply, 2)}\n            line3={`${\n              Number(epochTime.split('-')[0]) < 108\n                ? 'Bootstrapping phase'\n                : qsdPrice?.isGreaterThan(\n                    new BigNumber(10).pow(new BigNumber(18))\n                  )\n                ? 'Above Peg'\n                : 'Idle phase'\n            }`}\n          />\n          <Tile\n            line1='Market Cap'\n            line2={`${\n              totalSupply !== null && qsdPrice !== null\n                ? '$' + formatBN(totalSupply.multipliedBy(qsdPrice), 2)\n                : '...'\n            }`}\n            line3=''\n          />\n        </Row>\n\n        <Section>\n          <IconHeader\n            icon={<i className='fas fa-exchange-alt' />}\n            text='Trade'\n          />\n          <Row>\n            <TopBorderBox\n              title='QSD Price'\n              body={qsdPrice ? formatBN(qsdPrice, 2) + ' DAI' : '...'}\n              action={\n                <Button>\n                  <a\n                    target='_blank'\n                    rel=\"noopener noreferrer\" \n                    style={{ textDecoration: 'none' }}\n                    href={`https://app.uniswap.org/#/swap?outputCurrency=${QSD.addr}`}\n                  >\n                    Trade QSD\n                  </a>\n                </Button>\n              }\n            />\n            <TopBorderBox\n              title='QSD in LP pool'\n              body={qsdLiquidity ? formatBN(qsdLiquidity, 2) + ' QSD' : '...'}\n              action={\n                <Button>\n                  <a\n                    target='_blank'\n                    rel=\"noopener noreferrer\" \n                    style={{ textDecoration: 'none' }}\n                    href={`https://info.uniswap.org/token/${QSD.addr}`}\n                  >\n                    Trade Info\n                  </a>\n                </Button>\n              }\n            />\n            <TopBorderBox\n              title='QSD Liquidity'\n              body={daiLiquidity ? formatBN(daiLiquidity, 2) + ' DAI' : '...'}\n              action={\n                <Button>\n                  <a\n                    target='_blank'\n                    rel=\"noopener noreferrer\" \n                    style={{ textDecoration: 'none' }}\n                    href={`https://app.uniswap.org/#/add/${QSD.addr}/0x6b175474e89094c44da98b954eedeac495271d0f`}\n                  >\n                    Add Liquidity\n                  </a>\n                </Button>\n              }\n            />\n          </Row>\n        </Section>\n\n        <Section>\n          <IconHeader\n            icon={<i className='fas fa-chart-line' />}\n            text='Invest'\n          />\n          <Row>\n            <TopBorderBox\n              title='Bonded QSD APR'\n              body={\n                <>\n                  <div>QSD Daily: {daoDailyYield} </div>\n                  <div>QSD Weekly: {daoWeeklyYield} </div>\n                  <div>QSD Monthly: {daoMonthlyYield} </div>\n                </>\n              }\n              action={\n                <NavLink\n                  component={Button}\n                  to={curEpoch < 72 ? '/bootstrapping' : '/qsd'}\n                  {...{ external: false }}\n                >\n                  Add QSD\n                </NavLink>\n              }\n            />\n            <TopBorderBox\n              title='Bonded LP APR'\n              body={\n                <>\n                  <div>LP Daily: {lpDailyYield} </div>\n                  <div>LP Weekly: {lpWeeklyYield} </div>\n                  <div>LP Monthly: {lpMonthlyYield} </div>\n                </>\n              }\n              action={\n                <NavLink component={Button} to='/lp' {...{ external: false }}>\n                  Add LP\n                </NavLink>\n              }\n            />\n          </Row>\n        </Section>\n\n        <Section>\n          <Regulation user={user} hideHistory />\n          <div style={{ textAlign: 'center', marginTop: 22 }}>\n            <NavLink\n              component={Button}\n              to='/regulation'\n              {...{ external: false }}\n            >\n              View more\n            </NavLink>\n          </div>\n        </Section>\n      </div>\n    </Layout>\n  );\n}\n\nfunction Section(props: ComponentProps<'div'>) {\n  return <div style={{ marginTop: 80 }} {...props} />;\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}