{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React, { useMemo, useCallback } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport './Theme.js';\nimport './extends-db4f0c26.js';\nimport './objectWithoutProperties-234758e1.js';\nimport './index-422d37c0.js';\nimport './isObject-3c6ec07e.js';\nimport './Viewport-cc7debfb.js';\nimport './Layout.js';\nimport './Box.js';\nimport './FocusVisible.js';\nimport './ButtonBase.js';\nimport './PaginationItem.js';\nimport './IconPropTypes-aab7337d.js';\nimport './IconAddUser.js';\nimport './IconAlert.js';\nimport './IconAlignCenter.js';\nimport './IconAlignJustify.js';\nimport './IconAlignLeft.js';\nimport './IconAlignRight.js';\nimport './IconAragon.js';\nimport './IconArrowDown.js';\nimport './IconArrowLeft.js';\nimport './IconArrowRight.js';\nimport './IconArrowUp.js';\nimport './IconAtSign.js';\nimport './IconBlock.js';\nimport './IconBookmark.js';\nimport './IconCalendar.js';\nimport './IconCanvas.js';\nimport './IconCaution.js';\nimport './IconCenter.js';\nimport './IconChart.js';\nimport './IconChat.js';\nimport './IconCheck.js';\nimport './IconChip.js';\nimport './IconCircleCheck.js';\nimport './IconCircleMinus.js';\nimport './IconCirclePlus.js';\nimport './IconClock.js';\nimport './IconCloudDownload.js';\nimport './IconCloudUpload.js';\nimport './IconCoin.js';\nimport './IconConfiguration.js';\nimport './IconConnect.js';\nimport './IconConnection.js';\nimport './IconConsole.js';\nimport './IconCopy.js';\nimport './IconCross.js';\nimport './IconDashedSquare.js';\nimport './IconDown.js';\nimport './IconDownload.js';\nimport './IconEdit.js';\nimport './IconEllipsis.js';\nimport './IconEnter.js';\nimport './IconEthereum.js';\nimport './IconExternal.js';\nimport './IconFile.js';\nimport './IconFilter.js';\nimport './IconFlag.js';\nimport './IconFolder.js';\nimport './IconGraph2.js';\nimport './IconGraph.js';\nimport './IconGrid.js';\nimport './IconGroup.js';\nimport './IconHash.js';\nimport './IconHeart.js';\nimport './IconHide.js';\nimport './IconHome.js';\nimport './IconImage.js';\nimport './IconInfo.js';\nimport './IconLabel.js';\nimport './IconLayers.js';\nimport './IconLeft.js';\nimport './IconLink.js';\nimport './IconLocation.js';\nimport './IconLock.js';\nimport './IconMail.js';\nimport './IconMaximize.js';\nimport './IconMenu.js';\nimport './IconMinimize.js';\nimport './IconMinus.js';\nimport './IconMove.js';\nimport './IconNoPicture.js';\nimport './IconPicture.js';\nimport './IconPlus.js';\nimport './IconPower.js';\nimport './IconPrint.js';\nimport './IconProhibited.js';\nimport './IconQuestion.js';\nimport './IconRefresh.js';\nimport './IconRemoveUser.js';\nimport './IconRight.js';\nimport './IconRotateLeft.js';\nimport './IconRotateRight.js';\nimport './IconSearch.js';\nimport './IconSettings.js';\nimport './IconShare.js';\nimport './IconSquareMinus.js';\nimport './IconSquarePlus.js';\nimport './IconSquare.js';\nimport './IconStarFilled.js';\nimport './IconStar.js';\nimport './IconSwap.js';\nimport './IconTarget.js';\nimport './IconToken.js';\nimport './IconTrash.js';\nimport './IconUnlock.js';\nimport './IconUp.js';\nimport './IconUpload.js';\nimport './IconUser.js';\nimport './IconView.js';\nimport './IconVote.js';\nimport './IconWallet.js';\nimport './IconWarning.js';\nimport './IconWorld.js';\nimport './IconWrite.js';\nimport './IconZoomIn.js';\nimport './IconZoomOut.js';\nimport './PaginationSeparator.js';\nimport './Pagination.js';\nimport './objectWithoutPropertiesLoose-9606ad13.js';\nimport 'react-dom';\nimport './web-a351a0a1.js';\nimport './Checkbox.js';\nimport './Button.js';\nimport './ButtonIcon.js';\nimport './ToggleButton.js';\nimport './OpenedSurfaceBorder.js';\nimport './TableView.js';\nimport './ListView.js';\nimport './getDisplayName-d5fc7707.js';\nimport './index-edfeada6.js';\nimport './LoadingRing.js';\nimport './Link.js';\nimport './EmptyState.js';\nimport DataView from './DataView.js';\nvar Accordion = React.memo(function Accordion(_ref) {\n  var items = _ref.items,\n      className = _ref.className,\n      style = _ref.style;\n  var fields = useMemo(function () {\n    return [null];\n  }, []);\n  var renderEntry = useCallback(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 1),\n        row = _ref3[0];\n\n    return [row];\n  }, []);\n  var renderEntryExpansion = useCallback(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        _ = _ref5[0],\n        expansion = _ref5[1];\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, expansion);\n  }, []);\n  return /*#__PURE__*/React.createElement(DataView, {\n    className: className,\n    entries: items,\n    entriesPerPage: -1,\n    fields: fields,\n    renderEntry: renderEntry,\n    renderEntryExpansion: renderEntryExpansion,\n    style: style\n  });\n}); // className and style are passed manually to ensure users don’t rely on extra\n// props to be passed to DataView. The reason is because Accordion is going to\n// stop consuming DataView in the future, and would instead share a common\n// “expandable” component with it.\n\nAccordion.propTypes = {\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.node)).isRequired,\n  style: PropTypes.object\n};\nexport default Accordion;","map":{"version":3,"sources":["../../src/components/Accordion/Accordion.js"],"names":["Accordion","items","className","style","fields","useMemo","renderEntry","useCallback","row","renderEntryExpansion","_","expansion","PropTypes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAMA,SAAS,GAAG,KAAK,CAAL,IAAA,CAAW,SAAA,SAAA,CAAA,IAAA,EAAgD;AAAA,MAA3BC,KAA2B,GAAA,IAAA,CAA3BA,KAA2B;AAAA,MAApBC,SAAoB,GAAA,IAAA,CAApBA,SAAoB;AAAA,MAATC,KAAS,GAAA,IAAA,CAATA,KAAS;AAC3E,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAA;AAAA,WAAM,CAAN,IAAM,CAAN;AAAD,GAAA,EAAtB,EAAsB,CAAtB;AACA,MAAMC,WAAW,GAAGC,WAAW,CAAC,UAAA,KAAA,EAAA;AAAA,QAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,QAAEC,GAAF,GAAA,KAAA,CAAA,CAAA,CAAA;;AAAA,WAAW,CAAX,GAAW,CAAX;AAAD,GAAA,EAA/B,EAA+B,CAA/B;AACA,MAAMC,oBAAoB,GAAGF,WAAW,CACtC,UAAA,KAAA,EAAA;AAAA,QAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,QAAEG,CAAF,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,QAAKC,SAAL,GAAA,KAAA,CAAA,CAAA,CAAA;;AAAA,WAAA,aAAoB,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAApB,SAAoB,CAApB;AADsC,GAAA,EAAxC,EAAwC,CAAxC;AAKA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,SAAS,EADX,SAAA;AAEE,IAAA,OAAO,EAFT,KAAA;AAGE,IAAA,cAAc,EAAE,CAHlB,CAAA;AAIE,IAAA,MAAM,EAJR,MAAA;AAKE,IAAA,WAAW,EALb,WAAA;AAME,IAAA,oBAAoB,EANtB,oBAAA;AAOE,IAAA,KAAK,EAAER;AAPT,GAAA,CADF;AARF,CAAkB,CAAlB,C,CAAA;AAsBA;AACA;AACA;;AACAH,SAAS,CAATA,SAAAA,GAAsB;AACpBE,EAAAA,SAAS,EAAEU,SAAS,CADA,MAAA;AAEpBX,EAAAA,KAAK,EAAEW,SAAS,CAATA,OAAAA,CAAkBA,SAAS,CAATA,OAAAA,CAAkBA,SAAS,CAA7CA,IAAkBA,CAAlBA,EAFa,UAAA;AAGpBT,EAAAA,KAAK,EAAES,SAAS,CAACC;AAHG,CAAtBb","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport DataView from '../DataView/DataView'\n\nconst Accordion = React.memo(function Accordion({ items, className, style }) {\n  const fields = useMemo(() => [null], [])\n  const renderEntry = useCallback(([row]) => [row], [])\n  const renderEntryExpansion = useCallback(\n    ([_, expansion]) => <>{expansion}</>,\n    []\n  )\n\n  return (\n    <DataView\n      className={className}\n      entries={items}\n      entriesPerPage={-1}\n      fields={fields}\n      renderEntry={renderEntry}\n      renderEntryExpansion={renderEntryExpansion}\n      style={style}\n    />\n  )\n})\n\n// className and style are passed manually to ensure users don’t rely on extra\n// props to be passed to DataView. The reason is because Accordion is going to\n// stop consuming DataView in the future, and would instead share a common\n// “expandable” component with it.\nAccordion.propTypes = {\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.node)).isRequired,\n  style: PropTypes.object,\n}\n\nexport default Accordion\n"]},"metadata":{},"sourceType":"module"}