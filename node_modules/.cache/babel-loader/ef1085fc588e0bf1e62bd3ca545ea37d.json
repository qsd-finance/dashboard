{"ast":null,"code":"/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key, defaultValue) {\n  return localStorage.getItem(key) || defaultValue;\n}\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\n\nexport function storePreference(key, value) {\n  localStorage.setItem(key, value);\n}","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/utils/storage.ts"],"names":["getPreference","key","defaultValue","localStorage","getItem","storePreference","value","setItem"],"mappings":"AAAA;;;;;AAKA,OAAO,SAASA,aAAT,CAAuBC,GAAvB,EAAmCC,YAAnC,EAAgE;AACrE,SAAOC,YAAY,CAACC,OAAb,CAAqBH,GAArB,KAA6BC,YAApC;AACD;AAED;;;;;;AAKA,OAAO,SAASG,eAAT,CAAyBJ,GAAzB,EAAqCK,KAArC,EAAwD;AAC7DH,EAAAA,YAAY,CAACI,OAAb,CAAqBN,GAArB,EAA0BK,KAA1B;AACD","sourcesContent":["/**\n * Get value by key\n * @param {string} key\n * @param {string} defaultValue\n */\nexport function getPreference(key:string, defaultValue:string): string {\n  return localStorage.getItem(key) || defaultValue;\n}\n\n/**\n * store value to storage\n * @param {string} key\n * @param {string} value\n */\nexport function storePreference(key:string, value:string):void {\n  localStorage.setItem(key, value);\n}\n"]},"metadata":{},"sourceType":"module"}