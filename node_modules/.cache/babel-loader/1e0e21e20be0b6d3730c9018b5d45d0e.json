{"ast":null,"code":"import './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React, { useContext } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { RADIUS, GU } from './constants.js';\nimport './breakpoints.js';\nimport { springs } from './springs.js';\nimport { textStyle } from './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport { i } from './index-422d37c0.js';\nimport './isObject-3c6ec07e.js';\nimport { u as useViewport } from './Viewport-cc7debfb.js';\nimport './objectWithoutPropertiesLoose-9606ad13.js';\nimport 'react-dom';\nimport { e as extendedAnimated, T as Transition } from './web-a351a0a1.js';\nimport { ToastContext } from './ToastHub.js';\nimport './index-f754c2df.js';\nimport RootPortal from './RootPortal.js';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"FloatIndicator___StyledDiv\",\n  componentId: \"sc-1mhu8xn-0\"\n})([\"position:absolute;z-index:1;bottom:\", \"px;display:flex;justify-content:flex-end;width:100%;padding:0 \", \"px 0 \", \"px;\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n});\n\nvar _StyledAnimatedDiv = _styled(extendedAnimated.div).withConfig({\n  displayName: \"FloatIndicator___StyledAnimatedDiv\",\n  componentId: \"sc-1mhu8xn-1\"\n})([\"flex-grow:\", \";display:flex;align-items:center;height:\", \"px;padding:\", \"px \", \"px;\", \";white-space:nowrap;color:\", \";background:\", \";border:1px solid \", \";border-radius:\", \"px;cursor:default;justify-content:center;\"], function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n}, function (p) {\n  return p._css6;\n}, function (p) {\n  return p._css7;\n}, function (p) {\n  return p._css8;\n}, function (p) {\n  return p._css9;\n}, function (p) {\n  return p._css10;\n}, function (p) {\n  return p._css11;\n}, RADIUS);\n\nvar FloatIndicator = React.memo(function FloatIndicator(_ref) {\n  var children = _ref.children,\n      visible = _ref.visible,\n      shift = _ref.shift,\n      props = _objectWithoutProperties(_ref, [\"children\", \"visible\", \"shift\"]);\n\n  var theme = useTheme();\n\n  var _useViewport = useViewport(),\n      below = _useViewport.below;\n\n  var _useContext = useContext(ToastContext),\n      toastItemsVisible = _useContext.itemsVisible;\n\n  var wide = below('medium');\n  var horizontalSpacing = wide ? 2 * GU : 3 * GU;\n  var horizontalSpacingEnd = horizontalSpacing + (shift || 0);\n  return /*#__PURE__*/React.createElement(RootPortal, null, /*#__PURE__*/React.createElement(Transition, {\n    native: true,\n    items: toastItemsVisible ? false : visible,\n    from: {\n      progress: 0\n    },\n    enter: {\n      progress: 1\n    },\n    leave: {\n      progress: 0\n    },\n    config: springs.smooth\n  }, function (show) {\n    return show &&\n    /* eslint-disable react/prop-types */\n    function (_ref2) {\n      var progress = _ref2.progress;\n      return /*#__PURE__*/React.createElement(_StyledDiv, {\n        _css: wide ? 2 * GU : 3 * GU,\n        _css2: horizontalSpacingEnd,\n        _css3: horizontalSpacing\n      }, /*#__PURE__*/React.createElement(_StyledAnimatedDiv, _extends({\n        style: {\n          pointerEvents: visible ? 'auto' : 'none',\n          opacity: progress,\n          transform: progress.interpolate(function (v) {\n            return \"translate3d(0, calc(10px * \".concat(1 - v, \"), 0)\");\n          })\n        }\n      }, props, {\n        _css4: Number(wide),\n        _css5: 6 * GU,\n        _css6: 1 * GU,\n        _css7: 2 * GU,\n        _css8: textStyle('body3'),\n        _css9: theme.floatingContent,\n        _css10: theme.floating,\n        _css11: theme.border\n      }), /*#__PURE__*/React.createElement(i, {\n        name: \"FloatIndicator\"\n      }, children)));\n    };\n  }\n  /* eslint-enable react/prop-types */\n  ));\n});\nFloatIndicator.propTypes = {\n  children: PropTypes.node.isRequired,\n  shift: PropTypes.number,\n  visible: PropTypes.bool\n};\nFloatIndicator.defaultProps = {\n  shift: 0,\n  visible: true\n};\nexport default FloatIndicator;","map":{"version":3,"sources":["../../src/components/FloatIndicator/FloatIndicator.js"],"names":["FloatIndicator","children","visible","shift","props","theme","useTheme","below","useViewport","toastItemsVisible","useContext","wide","horizontalSpacing","horizontalSpacingEnd","progress","springs","smooth","show","pointerEvents","opacity","transform","Number","textStyle","border","RADIUS","PropTypes","bool"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transition, animated } from 'react-spring'\nimport { Inside } from 'use-inside'\nimport RootPortal from '../RootPortal/RootPortal'\nimport { useTheme } from '../../theme'\nimport { GU, RADIUS, textStyle, springs } from '../../style'\nimport { useViewport } from '../../providers/Viewport/Viewport'\nimport { ToastContext } from '../ToastHub/ToastHub'\n\nconst FloatIndicator = React.memo(function FloatIndicator({\n  children,\n  visible,\n  shift,\n  ...props\n}) {\n  const theme = useTheme()\n  const { below } = useViewport()\n  const { itemsVisible: toastItemsVisible } = useContext(ToastContext)\n\n  const wide = below('medium')\n  const horizontalSpacing = wide ? 2 * GU : 3 * GU\n  const horizontalSpacingEnd = horizontalSpacing + (shift || 0)\n\n  return (\n    <RootPortal>\n      <Transition\n        native\n        items={toastItemsVisible ? false : visible}\n        from={{ progress: 0 }}\n        enter={{ progress: 1 }}\n        leave={{ progress: 0 }}\n        config={springs.smooth}\n      >\n        {show =>\n          show &&\n          /* eslint-disable react/prop-types */\n          (({ progress }) => (\n            <div\n              css={`\n                position: absolute;\n                z-index: 1;\n                bottom: ${wide ? 2 * GU : 3 * GU}px;\n                display: flex;\n                justify-content: flex-end;\n                width: 100%;\n                padding: 0 ${horizontalSpacingEnd}px 0 ${horizontalSpacing}px;\n              `}\n            >\n              <animated.div\n                style={{\n                  pointerEvents: visible ? 'auto' : 'none',\n                  opacity: progress,\n                  transform: progress.interpolate(\n                    v => `translate3d(0, calc(10px * ${1 - v}), 0)`\n                  ),\n                }}\n                css={`\n                  flex-grow: ${Number(wide)};\n                  display: flex;\n                  align-items: center;\n                  height: ${6 * GU}px;\n                  padding: ${1 * GU}px ${2 * GU}px;\n                  ${textStyle('body3')};\n                  white-space: nowrap;\n                  color: ${theme.floatingContent};\n                  background: ${theme.floating};\n                  border: 1px solid ${theme.border};\n                  border-radius: ${RADIUS}px;\n                  cursor: default;\n                  justify-content: center;\n                `}\n                {...props}\n              >\n                <Inside name=\"FloatIndicator\">{children}</Inside>\n              </animated.div>\n            </div>\n          ))\n        /* eslint-enable react/prop-types */\n        }\n      </Transition>\n    </RootPortal>\n  )\n})\n\nFloatIndicator.propTypes = {\n  children: PropTypes.node.isRequired,\n  shift: PropTypes.number,\n  visible: PropTypes.bool,\n}\n\nFloatIndicator.defaultProps = {\n  shift: 0,\n  visible: true,\n}\n\nexport default FloatIndicator\n"]},"metadata":{},"sourceType":"module"}