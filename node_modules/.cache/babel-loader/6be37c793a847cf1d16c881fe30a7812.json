{"ast":null,"code":"import './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport { warnOnce } from './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport './index-422d37c0.js';\nimport './isObject-3c6ec07e.js';\nimport './Viewport-cc7debfb.js';\nimport './Layout.js';\nimport './FocusVisible.js';\nimport ButtonBase from './ButtonBase.js';\nimport Button from './Button.js';\n\nvar _StyledButtonBase = _styled(ButtonBase).withConfig({\n  displayName: \"ButtonIcon___StyledButtonBase\",\n  componentId: \"sc-1e3i514-0\"\n})([\"display:inline-flex;justify-content:center;align-items:center;width:\", \"px;height:\", \"px;&:active{background:rgba(220,234,239,0.3);}\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n});\n\nfunction ButtonIcon(_ref) {\n  var label = _ref.label,\n      children = _ref.children,\n      mode = _ref.mode,\n      props = _objectWithoutProperties(_ref, [\"label\", \"children\", \"mode\"]);\n\n  if (mode !== undefined) {\n    warnOnce('ButtonIcon:mode', 'ButtonIcon: the mode prop is deprecated. Please use Button with the icon prop instead.');\n  }\n\n  if (mode === 'button') {\n    return /*#__PURE__*/React.createElement(Button, _extends({\n      label: label,\n      icon: children,\n      display: \"icon\"\n    }, props));\n  }\n\n  return /*#__PURE__*/React.createElement(_StyledButtonBase, _extends({\n    title: label\n  }, props, {\n    _css: 4 * GU,\n    _css2: 4 * GU\n  }), children);\n}\n\nButtonIcon.propTypes = {\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  // deprecated\n  mode: PropTypes.oneOf(['button'])\n};\nexport default ButtonIcon;","map":{"version":3,"sources":["../../src/components/Button/ButtonIcon.js"],"names":["label","children","mode","props","warnOnce","GU","ButtonIcon","PropTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,SAAA,UAAA,CAAA,IAAA,EAAyD;AAAA,MAAnCA,KAAmC,GAAA,IAAA,CAAnCA,KAAmC;AAAA,MAA5BC,QAA4B,GAAA,IAAA,CAA5BA,QAA4B;AAAA,MAAlBC,IAAkB,GAAA,IAAA,CAAlBA,IAAkB;AAAA,MAATC,KAAS,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,MAAA,CAAA,CAAA;;AACvD,MAAID,IAAI,KAAR,SAAA,EAAwB;AACtBE,IAAAA,QAAQ,CAAA,iBAAA,EAARA,wFAAQ,CAARA;AAID;;AAED,MAAIF,IAAI,KAAR,QAAA,EAAuB;AACrB,WAAA,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAAQ,MAAA,KAAK,EAAb,KAAA;AAAsB,MAAA,IAAI,EAA1B,QAAA;AAAsC,MAAA,OAAO,EAAC;AAA9C,KAAA,EAAP,KAAO,CAAA,CAAP;AACD;;AAED,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAEF;AADT,GAAA,EAAA,KAAA,EAAA;AAAA,IAAA,IAAA,EAMa,IANb,EAAA;AAAA,IAAA,KAAA,EAOc,IAAIK;AAPlB,GAAA,CAAA,EADF,QACE,CADF;AAkBD;;AAEDC,UAAU,CAAVA,SAAAA,GAAuB;AACrBN,EAAAA,KAAK,EAAEO,SAAS,CAATA,MAAAA,CADc,UAAA;AAErBN,EAAAA,QAAQ,EAAEM,SAAS,CAATA,IAAAA,CAFW,UAAA;AAIrB;AACAL,EAAAA,IAAI,EAAEK,SAAS,CAATA,KAAAA,CAAgB,CAAhBA,QAAgB,CAAhBA;AALe,CAAvBD","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { warnOnce } from '../../utils'\nimport { GU } from '../../style'\nimport Button from './Button'\nimport ButtonBase from '../ButtonBase/ButtonBase'\n\nfunction ButtonIcon({ label, children, mode, ...props }) {\n  if (mode !== undefined) {\n    warnOnce(\n      'ButtonIcon:mode',\n      'ButtonIcon: the mode prop is deprecated. Please use Button with the icon prop instead.'\n    )\n  }\n\n  if (mode === 'button') {\n    return <Button label={label} icon={children} display=\"icon\" {...props} />\n  }\n\n  return (\n    <ButtonBase\n      title={label}\n      css={`\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        width: ${4 * GU}px;\n        height: ${4 * GU}px;\n        &:active {\n          background: rgba(220, 234, 239, 0.3);\n        }\n      `}\n      {...props}\n    >\n      {children}\n    </ButtonBase>\n  )\n}\n\nButtonIcon.propTypes = {\n  label: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n\n  // deprecated\n  mode: PropTypes.oneOf(['button']),\n}\n\nexport default ButtonIcon\n"]},"metadata":{},"sourceType":"module"}