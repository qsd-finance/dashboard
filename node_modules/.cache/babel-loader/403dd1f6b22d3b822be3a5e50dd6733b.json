{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { RADIUS, GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport { textStyle } from './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport { o } from './index-422d37c0.js';\nimport './FocusVisible.js';\nimport ButtonBase from './ButtonBase.js';\n\nvar _StyledButtonBase = _styled(ButtonBase).withConfig({\n  displayName: \"BadgeBase___StyledButtonBase\",\n  componentId: \"sc-4zaahn-0\"\n})([\"display:inline-flex;overflow:hidden;color:\", \";height:\", \"px;background:\", \";\", \";&:active{\", \";}\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n});\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"BadgeBase___StyledDiv\",\n  componentId: \"sc-4zaahn-1\"\n})([\"overflow:hidden;display:flex;align-items:center;text-decoration:none;\", \";\"], function (p) {\n  return p._css6;\n});\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"BadgeBase___StyledSpan\",\n  componentId: \"sc-4zaahn-2\"\n})([\"white-space:nowrap;text-overflow:ellipsis;overflow:hidden;\", \" \", \"\"], function (p) {\n  return p._css7;\n}, function (p) {\n  return p._css8;\n});\n\nvar BadgeBase = React.memo(function BadgeBase(_ref) {\n  var badgeRef = _ref.badgeRef,\n      children = _ref.children,\n      className = _ref.className,\n      compact = _ref.compact,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      icon = _ref.icon,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      onClick = _ref.onClick,\n      style = _ref.style,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"badgeRef\", \"children\", \"className\", \"compact\", \"disabled\", \"href\", \"icon\", \"label\", \"labelStyle\", \"onClick\", \"style\", \"title\"]);\n\n  var theme = useTheme();\n\n  var _useInside = o('DropDown'),\n      _useInside2 = _slicedToArray(_useInside, 1),\n      insideDropDownMenu = _useInside2[0];\n\n  if (insideDropDownMenu) {\n    disabled = true;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_StyledButtonBase, {\n    ref: badgeRef,\n    title: title,\n    disabled: disabled,\n    element: href || disabled ? 'a' : 'button',\n    onClick: !disabled ? onClick : undefined,\n    href: !disabled ? href : undefined,\n    focusRingRadius: RADIUS,\n    _css: theme.badgeContent,\n    _css2: 3 * GU,\n    _css3: compact ? 'transparent' : theme.badge,\n    _css4: insideDropDownMenu ? 'cursor: pointer' : '',\n    _css5: !disabled && compact ? \"background: \".concat(theme.badgePressed) : ''\n  }, /*#__PURE__*/React.createElement(_StyledDiv, {\n    className: className,\n    style: style,\n    _css6: compact ? \"\\n                  padding: 0 \".concat(1 * GU, \"px;\\n                  border-radius: 2px;\\n                \") : \"\\n                  padding-left: \".concat((icon ? 0 : 1.5) * GU, \"px;\\n                  padding-right: \").concat((icon ? 1 : 1.5) * GU, \"px;\\n                  border-radius: \").concat(RADIUS, \"px;\\n                \")\n  }, icon, /*#__PURE__*/React.createElement(_StyledSpan, {\n    _css7: textStyle('body2'),\n    _css8: labelStyle\n  }, label))), typeof children === 'function' ? children(disabled) // whether popover is disabled\n  : children);\n});\nBadgeBase.propTypes = {\n  badgeRef: PropTypes.any,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  compact: PropTypes.bool,\n  disabled: PropTypes.bool,\n  href: PropTypes.string,\n  icon: PropTypes.node,\n  label: PropTypes.node.isRequired,\n  labelStyle: PropTypes.string,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  title: PropTypes.string\n};\nexport default BadgeBase;","map":{"version":3,"sources":["../../src/components/BadgeBase/BadgeBase.js"],"names":["BadgeBase","badgeRef","children","className","compact","disabled","href","icon","label","labelStyle","onClick","style","title","props","theme","useTheme","insideDropDownMenu","useInside","textStyle","PropTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,SAAS,GAAG,KAAK,CAAL,IAAA,CAAW,SAAA,SAAA,CAAA,IAAA,EAc1B;AAAA,MAbDC,QAaC,GAAA,IAAA,CAbDA,QAaC;AAAA,MAZDC,QAYC,GAAA,IAAA,CAZDA,QAYC;AAAA,MAXDC,SAWC,GAAA,IAAA,CAXDA,SAWC;AAAA,MAVDC,OAUC,GAAA,IAAA,CAVDA,OAUC;AAAA,MATDC,QASC,GAAA,IAAA,CATDA,QASC;AAAA,MARDC,IAQC,GAAA,IAAA,CARDA,IAQC;AAAA,MAPDC,IAOC,GAAA,IAAA,CAPDA,IAOC;AAAA,MANDC,KAMC,GAAA,IAAA,CANDA,KAMC;AAAA,MALDC,UAKC,GAAA,IAAA,CALDA,UAKC;AAAA,MAJDC,OAIC,GAAA,IAAA,CAJDA,OAIC;AAAA,MAHDC,KAGC,GAAA,IAAA,CAHDA,KAGC;AAAA,MAFDC,KAEC,GAAA,IAAA,CAFDA,KAEC;AAAA,MADEC,KACF,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,WAAA,EAAA,SAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AACD,MAAMC,KAAK,GAAGC,QAAd,EAAA;;AADC,MAAA,UAAA,GAE4BE,CAAS,CAFrC,UAEqC,CAFrC;AAAA,MAAA,WAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAA,MAEMD,kBAFN,GAAA,WAAA,CAAA,CAAA,CAAA;;AAID,MAAA,kBAAA,EAAwB;AACtBX,IAAAA,QAAQ,GAARA,IAAAA;AACD;;AAED,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA,IAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;AACE,IAAA,GAAG,EADL,QAAA;AAEE,IAAA,KAAK,EAFP,KAAA;AAGE,IAAA,QAAQ,EAHV,QAAA;AAIE,IAAA,OAAO,EAAEC,IAAI,IAAJA,QAAAA,GAAAA,GAAAA,GAJX,QAAA;AAKE,IAAA,OAAO,EAAE,CAAA,QAAA,GAAA,OAAA,GALX,SAAA;AAME,IAAA,IAAI,EAAE,CAAA,QAAA,GAAA,IAAA,GANR,SAAA;AAOE,IAAA,eAAe,EAPjB,MAAA;AAAA,IAAA,IAAA,EAWaQ,KAAK,CAXlB,YAAA;AAAA,IAAA,KAAA,EAYc,IAZd,EAAA;AAAA,IAAA,KAAA,EAakBV,OAAO,GAAA,aAAA,GAAmBU,KAAK,CAbjD,KAAA;AAAA,IAAA,KAAA,EAcME,kBAAkB,GAAA,iBAAA,GAdxB,EAAA;AAAA,IAAA,KAAA,EAiBQ,CAAA,QAAA,IAAA,OAAA,GAAA,eAAA,MAAA,CAAsCF,KAAK,CAA3C,YAAA,CAAA,GAA6D;AAjBrE,GAAA,EAAA,aAqBE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAiBE,IAAA,SAAS,EAjBX,SAAA;AAkBE,IAAA,KAAK,EAlBP,KAAA;AAAA,IAAA,KAAA,EAMMV,OAAO,GAAA,kCAAA,MAAA,CAEU,IAFV,EAAA,EAAA,8DAAA,CAAA,GAAA,qCAAA,MAAA,CAMa,CAACG,IAAI,GAAA,CAAA,GAAL,GAAA,IANb,EAAA,EAAA,wCAAA,EAAA,MAAA,CAOc,CAACA,IAAI,GAAA,CAAA,GAAL,GAAA,IAPd,EAAA,EAAA,wCAAA,EAAA,MAAA,CAAA,MAAA,EAAA,uBAAA;AANb,GAAA,EAAA,IAAA,EAAA,aAqBE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAAA,IAAA,KAAA,EAKMW,SAAS,CALf,OAKe,CALf;AAAA,IAAA,KAAA,EAMMT;AANN,GAAA,EA3CN,KA2CM,CArBF,CArBF,CADF,EAwDG,OAAA,QAAA,KAAA,UAAA,GACGP,QAAQ,CADX,QACW,CADX,CAAA;AAAA,IAzDL,QACE,CADF;AAtBF,CAAkB,CAAlB;AAsFAF,SAAS,CAATA,SAAAA,GAAsB;AACpBC,EAAAA,QAAQ,EAAEkB,SAAS,CADC,GAAA;AAEpBjB,EAAAA,QAAQ,EAAEiB,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,IAAA,EAAiBA,SAAS,CAFpC,IAEU,CAApBA,CAFU;AAGpBhB,EAAAA,SAAS,EAAEgB,SAAS,CAHA,MAAA;AAIpBf,EAAAA,OAAO,EAAEe,SAAS,CAJE,IAAA;AAKpBd,EAAAA,QAAQ,EAAEc,SAAS,CALC,IAAA;AAMpBb,EAAAA,IAAI,EAAEa,SAAS,CANK,MAAA;AAOpBZ,EAAAA,IAAI,EAAEY,SAAS,CAPK,IAAA;AAQpBX,EAAAA,KAAK,EAAEW,SAAS,CAATA,IAAAA,CARa,UAAA;AASpBV,EAAAA,UAAU,EAAEU,SAAS,CATD,MAAA;AAUpBT,EAAAA,OAAO,EAAES,SAAS,CAVE,IAAA;AAWpBR,EAAAA,KAAK,EAAEQ,SAAS,CAXI,MAAA;AAYpBP,EAAAA,KAAK,EAAEO,SAAS,CAACC;AAZG,CAAtBpB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useInside } from 'use-inside'\nimport { GU, RADIUS, textStyle } from '../../style'\nimport { useTheme } from '../../theme'\nimport ButtonBase from '../ButtonBase/ButtonBase'\n\nconst BadgeBase = React.memo(function BadgeBase({\n  badgeRef,\n  children,\n  className,\n  compact,\n  disabled,\n  href,\n  icon,\n  label,\n  labelStyle,\n  onClick,\n  style,\n  title,\n  ...props\n}) {\n  const theme = useTheme()\n  const [insideDropDownMenu] = useInside('DropDown')\n\n  if (insideDropDownMenu) {\n    disabled = true\n  }\n\n  return (\n    <React.Fragment>\n      <ButtonBase\n        ref={badgeRef}\n        title={title}\n        disabled={disabled}\n        element={href || disabled ? 'a' : 'button'}\n        onClick={!disabled ? onClick : undefined}\n        href={!disabled ? href : undefined}\n        focusRingRadius={RADIUS}\n        css={`\n          display: inline-flex;\n          overflow: hidden;\n          color: ${theme.badgeContent};\n          height: ${3 * GU}px;\n          background: ${compact ? 'transparent' : theme.badge};\n          ${insideDropDownMenu ? 'cursor: pointer' : ''};\n\n          &:active {\n            ${!disabled && compact ? `background: ${theme.badgePressed}` : ''};\n          }\n        `}\n      >\n        <div\n          css={`\n            overflow: hidden;\n            display: flex;\n            align-items: center;\n            text-decoration: none;\n            ${compact\n              ? `\n                  padding: 0 ${1 * GU}px;\n                  border-radius: 2px;\n                `\n              : `\n                  padding-left: ${(icon ? 0 : 1.5) * GU}px;\n                  padding-right: ${(icon ? 1 : 1.5) * GU}px;\n                  border-radius: ${RADIUS}px;\n                `};\n          `}\n          className={className}\n          style={style}\n        >\n          {icon}\n          <span\n            css={`\n              white-space: nowrap;\n              text-overflow: ellipsis;\n              overflow: hidden;\n              ${textStyle('body2')}\n              ${labelStyle}\n            `}\n          >\n            {label}\n          </span>\n        </div>\n      </ButtonBase>\n      {typeof children === 'function'\n        ? children(disabled) // whether popover is disabled\n        : children}\n    </React.Fragment>\n  )\n})\n\nBadgeBase.propTypes = {\n  badgeRef: PropTypes.any,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  compact: PropTypes.bool,\n  disabled: PropTypes.bool,\n  href: PropTypes.string,\n  icon: PropTypes.node,\n  label: PropTypes.node.isRequired,\n  labelStyle: PropTypes.string,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  title: PropTypes.string,\n}\n\nexport default BadgeBase\n"]},"metadata":{},"sourceType":"module"}