{"ast":null,"code":"import './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React, { useCallback } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport { _ as _defineProperty } from './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport { warnOnce } from './environment.js';\nimport './font.js';\nimport { c as clamp } from './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport './objectWithoutPropertiesLoose-9606ad13.js';\nimport 'react-dom';\nimport { e as extendedAnimated, S as Spring } from './web-a351a0a1.js';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar STROKE_WIDTH = 4;\nvar SIZE_DEFAULT = 80;\n\nfunction labelDefault(animValue, value) {\n  var parts = {\n    suffix: '%',\n    value: String(Math.floor(animValue * 100))\n  };\n  var animPercentage = animValue * 100;\n  var percentage = value * 100;\n  var lessThanOne = percentage > 0 && percentage < 1 && animPercentage > 0 && // We know that the actual percentage is less than 1,\n  // so this is to avoid a jump with “1%” without prefix.\n  animPercentage < 2;\n  return lessThanOne ? _objectSpread({}, parts, {\n    prefix: '<',\n    value: '1'\n  }) : parts;\n}\n\nfunction labelCompat(parts) {\n  if (typeof parts === 'string' || typeof parts === 'number' || React.isValidElement(parts)) {\n    warnOnce('CircleGraph:label:string', 'CircleGraph: the function passed to the label should not ' + 'return a React node anymore: please check the CircleGraph documentation.');\n    return {\n      value: String(parts)\n    };\n  }\n\n  return parts;\n}\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"CircleGraph___StyledDiv\",\n  componentId: \"sc-2a8gt2-0\"\n})([\"position:relative;display:flex;align-items:center;justify-content center;width:\", \"px;height:\", \"px;\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n});\n\nvar _StyledSvg = _styled(\"svg\").withConfig({\n  displayName: \"CircleGraph___StyledSvg\",\n  componentId: \"sc-2a8gt2-1\"\n})([\"position:absolute;top:0;left:0;\"]);\n\nvar _StyledAnimatedCircle = _styled(extendedAnimated.circle).withConfig({\n  displayName: \"CircleGraph___StyledAnimatedCircle\",\n  componentId: \"sc-2a8gt2-2\"\n})([\"transform:rotate(270deg);transform-origin:50% 50%;\"]);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"CircleGraph___StyledDiv2\",\n  componentId: \"sc-2a8gt2-3\"\n})([\"display:flex;flex-direction:column;justify-content:center;align-items:center;line-height:1.2;\"]);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"CircleGraph___StyledDiv3\",\n  componentId: \"sc-2a8gt2-4\"\n})([\"position:absolute;top:50%;left:0;right:0;transform:translateY(-50%);\"]);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"CircleGraph___StyledDiv4\",\n  componentId: \"sc-2a8gt2-5\"\n})([\"display:flex;align-items:baseline;justify-content:center;\"]);\n\nvar _StyledAnimatedDiv = _styled(extendedAnimated.div).withConfig({\n  displayName: \"CircleGraph___StyledAnimatedDiv\",\n  componentId: \"sc-2a8gt2-6\"\n})([\"display:flex;color:\", \";\"], function (p) {\n  return p._css3;\n});\n\nvar _StyledAnimatedDiv2 = _styled(extendedAnimated.div).withConfig({\n  displayName: \"CircleGraph___StyledAnimatedDiv2\",\n  componentId: \"sc-2a8gt2-7\"\n})([\"position:absolute;top:100%;left:0;right:0;display:flex;justify-content:center;color:\", \";\"], function (p) {\n  return p._css4;\n});\n\nfunction CircleGraph(_ref) {\n  var color = _ref.color,\n      label = _ref.label,\n      size = _ref.size,\n      strokeWidth = _ref.strokeWidth,\n      value = _ref.value;\n  var theme = useTheme();\n  var length = Math.PI * 2 * (size - strokeWidth);\n  var radius = (size - strokeWidth) / 2;\n\n  if (label === undefined) {\n    label = labelDefault;\n  }\n\n  var labelPart = useCallback(function (name) {\n    return function (animValue) {\n      if (typeof label !== 'function') {\n        return null;\n      }\n\n      var cValue = clamp(animValue);\n      var parts = labelCompat(label(cValue, value));\n      return (parts[name] === undefined ? labelDefault(cValue, value)[name] : parts[name]) || '';\n    };\n  }, [label, value]);\n  var colorFn = typeof color === 'function' ? color : function () {\n    return color || theme.accent;\n  };\n  return /*#__PURE__*/React.createElement(Spring, {\n    to: {\n      progressValue: value\n    },\n    native: true\n  }, function (_ref2) {\n    var progressValue = _ref2.progressValue;\n    return /*#__PURE__*/React.createElement(_StyledDiv, {\n      _css: size,\n      _css2: size\n    }, /*#__PURE__*/React.createElement(_StyledSvg, {\n      width: size,\n      height: size,\n      viewBox: \"0 0 \".concat(size, \" \").concat(size)\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      cx: size / 2,\n      cy: size / 2,\n      r: radius,\n      style: {\n        strokeWidth: strokeWidth\n      },\n      fill: \"none\",\n      stroke: theme.border\n    }), /*#__PURE__*/React.createElement(_StyledAnimatedCircle, {\n      cx: size / 2,\n      cy: size / 2,\n      r: radius,\n      fill: \"none\",\n      strokeLinecap: \"round\",\n      strokeDasharray: length,\n      strokeWidth: strokeWidth,\n      style: {\n        stroke: progressValue.interpolate(colorFn),\n        strokeDashoffset: progressValue.interpolate(function (t) {\n          return length - length * t / 2;\n        })\n      }\n    })), /*#__PURE__*/React.createElement(_StyledDiv2, null, typeof label !== 'function' ? label : label && /*#__PURE__*/React.createElement(_StyledDiv3, null, /*#__PURE__*/React.createElement(_StyledDiv4, null, /*#__PURE__*/React.createElement(extendedAnimated.div, {\n      style: {\n        fontSize: \"\".concat(size * 0.2, \"px\")\n      }\n    }, progressValue.interpolate(labelPart('prefix'))), /*#__PURE__*/React.createElement(extendedAnimated.div, {\n      style: {\n        fontSize: \"\".concat(size * 0.25, \"px\")\n      }\n    }, progressValue.interpolate(labelPart('value'))), /*#__PURE__*/React.createElement(_StyledAnimatedDiv, {\n      style: {\n        fontSize: \"\".concat(size * 0.13, \"px\")\n      },\n      _css3: theme.surfaceContentSecondary\n    }, progressValue.interpolate(labelPart('suffix')))), /*#__PURE__*/React.createElement(_StyledAnimatedDiv2, {\n      style: {\n        fontSize: \"\".concat(size * 0.1, \"px\")\n      },\n      _css4: theme.surfaceContentSecondary\n    }, progressValue.interpolate(labelPart('secondary'))))));\n  });\n}\n\nCircleGraph.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  value: PropTypes.number.isRequired\n};\nCircleGraph.defaultProps = {\n  size: SIZE_DEFAULT,\n  strokeWidth: STROKE_WIDTH\n};\nexport default CircleGraph;","map":{"version":3,"sources":["../../src/components/CircleGraph/CircleGraph.js"],"names":["STROKE_WIDTH","SIZE_DEFAULT","parts","suffix","value","String","Math","animValue","animPercentage","percentage","lessThanOne","prefix","React","warnOnce","color","label","size","strokeWidth","theme","useTheme","length","radius","labelPart","useCallback","cValue","clamp","labelCompat","labelDefault","colorFn","progressValue","border","stroke","strokeDashoffset","animated","fontSize","surfaceContentSecondary","CircleGraph","PropTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { Spring, animated } from 'react-spring'\nimport { useTheme } from '../../theme'\nimport { clamp, warnOnce } from '../../utils'\n\nconst STROKE_WIDTH = 4\nconst SIZE_DEFAULT = 80\n\nfunction labelDefault(animValue, value) {\n  const parts = {\n    suffix: '%',\n    value: String(Math.floor(animValue * 100)),\n  }\n\n  const animPercentage = animValue * 100\n  const percentage = value * 100\n\n  const lessThanOne =\n    percentage > 0 &&\n    percentage < 1 &&\n    animPercentage > 0 &&\n    // We know that the actual percentage is less than 1,\n    // so this is to avoid a jump with “1%” without prefix.\n    animPercentage < 2\n\n  return lessThanOne ? { ...parts, prefix: '<', value: '1' } : parts\n}\n\nfunction labelCompat(parts) {\n  if (\n    typeof parts === 'string' ||\n    typeof parts === 'number' ||\n    React.isValidElement(parts)\n  ) {\n    warnOnce(\n      'CircleGraph:label:string',\n      'CircleGraph: the function passed to the label should not ' +\n        'return a React node anymore: please check the CircleGraph documentation.'\n    )\n    return { value: String(parts) }\n  }\n  return parts\n}\n\nfunction CircleGraph({ color, label, size, strokeWidth, value }) {\n  const theme = useTheme()\n  const length = Math.PI * 2 * (size - strokeWidth)\n  const radius = (size - strokeWidth) / 2\n\n  if (label === undefined) {\n    label = labelDefault\n  }\n\n  const labelPart = useCallback(\n    name => animValue => {\n      if (typeof label !== 'function') {\n        return null\n      }\n\n      const cValue = clamp(animValue)\n      const parts = labelCompat(label(cValue, value))\n\n      return (\n        (parts[name] === undefined\n          ? labelDefault(cValue, value)[name]\n          : parts[name]) || ''\n      )\n    },\n    [label, value]\n  )\n\n  const colorFn =\n    typeof color === 'function' ? color : () => color || theme.accent\n\n  return (\n    <Spring to={{ progressValue: value }} native>\n      {({ progressValue }) => (\n        <div\n          css={`\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content center;\n            width: ${size}px;\n            height: ${size}px;\n          `}\n        >\n          <svg\n            css={`\n              position: absolute;\n              top: 0;\n              left: 0;\n            `}\n            width={size}\n            height={size}\n            viewBox={`0 0 ${size} ${size}`}\n          >\n            <circle\n              cx={size / 2}\n              cy={size / 2}\n              r={radius}\n              style={{ strokeWidth }}\n              fill=\"none\"\n              stroke={theme.border}\n            />\n            <animated.circle\n              cx={size / 2}\n              cy={size / 2}\n              r={radius}\n              fill=\"none\"\n              strokeLinecap=\"round\"\n              strokeDasharray={length}\n              strokeWidth={strokeWidth}\n              style={{\n                stroke: progressValue.interpolate(colorFn),\n                strokeDashoffset: progressValue.interpolate(\n                  t => length - (length * t) / 2\n                ),\n              }}\n              css={`\n                transform: rotate(270deg);\n                transform-origin: 50% 50%;\n              `}\n            />\n          </svg>\n          <div\n            css={`\n              display: flex;\n              flex-direction: column;\n              justify-content: center;\n              align-items: center;\n              line-height: 1.2;\n            `}\n          >\n            {typeof label !== 'function'\n              ? label\n              : label && (\n                  <div\n                    css={`\n                      position: absolute;\n                      top: 50%;\n                      left: 0;\n                      right: 0;\n                      transform: translateY(-50%);\n                    `}\n                  >\n                    <div\n                      css={`\n                        display: flex;\n                        align-items: baseline;\n                        justify-content: center;\n                      `}\n                    >\n                      <animated.div style={{ fontSize: `${size * 0.2}px` }}>\n                        {progressValue.interpolate(labelPart('prefix'))}\n                      </animated.div>\n                      <animated.div style={{ fontSize: `${size * 0.25}px` }}>\n                        {progressValue.interpolate(labelPart('value'))}\n                      </animated.div>\n                      <animated.div\n                        css={`\n                          display: flex;\n                          color: ${theme.surfaceContentSecondary};\n                        `}\n                        style={{ fontSize: `${size * 0.13}px` }}\n                      >\n                        {progressValue.interpolate(labelPart('suffix'))}\n                      </animated.div>\n                    </div>\n                    <animated.div\n                      css={`\n                        position: absolute;\n                        top: 100%;\n                        left: 0;\n                        right: 0;\n                        display: flex;\n                        justify-content: center;\n                        color: ${theme.surfaceContentSecondary};\n                      `}\n                      style={{ fontSize: `${size * 0.1}px` }}\n                    >\n                      {progressValue.interpolate(labelPart('secondary'))}\n                    </animated.div>\n                  </div>\n                )}\n          </div>\n        </div>\n      )}\n    </Spring>\n  )\n}\n\nCircleGraph.propTypes = {\n  color: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  size: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  value: PropTypes.number.isRequired,\n}\n\nCircleGraph.defaultProps = {\n  size: SIZE_DEFAULT,\n  strokeWidth: STROKE_WIDTH,\n}\n\nexport default CircleGraph\n"]},"metadata":{},"sourceType":"module"}