{"ast":null,"code":"var _jsxFileName = \"/Users/J/crypto/dashboard/src/components/CouponMarket/ModalWarning.tsx\";\nimport React, { useState } from 'react';\nimport { Modal, Button, useTheme } from '@aragon/ui';\nimport { getPreference, storePreference } from \"../../utils/storage\";\nimport { COUPON_EXPIRATION } from \"../../constants/values\";\n\nfunction ModalWarning() {\n  const storedShowWarning = getPreference('showCouponWarning', '1');\n  const [showWarning, setShowWarning] = useState(storedShowWarning === '1');\n  const theme = useTheme();\n  return /*#__PURE__*/React.createElement(Modal, {\n    visible: showWarning,\n    closeButton: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 24,\n      padding: 3,\n      color: theme.warning\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"Warning\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '3%',\n      fontSize: 16,\n      padding: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Coupons will only become redeemable during the next supply expansion. Each expansionary epoch, a tranche of rewards are reserved for coupon redemptions by the DAO. At that time, the redemption process is first come, first served. If coupons are not redeemed within \", COUPON_EXPIRATION, \" epochs of purchase, they can be redeemed for the original purchase price and the premium is forfeited.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 10,\n      textAlign: 'center',\n      color: theme.warningSurfaceContent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Coupon premiums and redemption timing are not guaranteed.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: 'I understand',\n    onClick: () => {\n      storePreference('showCouponWarning', '0');\n      setShowWarning(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default ModalWarning;","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/CouponMarket/ModalWarning.tsx"],"names":["React","useState","Modal","Button","useTheme","getPreference","storePreference","COUPON_EXPIRATION","ModalWarning","storedShowWarning","showWarning","setShowWarning","theme","width","fontSize","padding","color","warning","marginLeft","textAlign","warningSurfaceContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,YAAxC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,qBAA/C;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAMC,iBAAiB,GAAGJ,aAAa,CAAC,mBAAD,EAAsB,GAAtB,CAAvC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACQ,iBAAiB,KAAK,GAAvB,CAA9C;AACA,QAAMG,KAAK,GAAGR,QAAQ,EAAtB;AAEA,sBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEM,WAAhB;AAA6B,IAAA,WAAW,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE,CAAzB;AAA4BC,MAAAA,KAAK,EAAEJ,KAAK,CAACK;AAAzC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAKE;AAAK,IAAA,KAAK,EAAE;AACVC,MAAAA,UAAU,EAAE,IADF;AAEVJ,MAAAA,QAAQ,EAAE,EAFA;AAGVC,MAAAA,OAAO,EAAE;AAHC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kRAKmBR,iBALnB,4GALF,eAcE;AAAK,IAAA,KAAK,EAAE;AACVQ,MAAAA,OAAO,EAAE,EADC;AAEVI,MAAAA,SAAS,EAAE,QAFD;AAGVH,MAAAA,KAAK,EAAEJ,KAAK,CAACQ;AAHH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAdF,CALF,eA4BE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE,cADT;AAEE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,eAAe,CAAC,mBAAD,EAAsB,GAAtB,CAAf;AACAK,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BF,CADF,CADF;AA0CD;;AAED,eAAeH,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button, useTheme } from '@aragon/ui';\nimport { getPreference, storePreference } from \"../../utils/storage\";\nimport { COUPON_EXPIRATION } from \"../../constants/values\";\n\nfunction ModalWarning() {\n  const storedShowWarning = getPreference('showCouponWarning', '1');\n  const [showWarning, setShowWarning] = useState(storedShowWarning === '1');\n  const theme = useTheme();\n\n  return (\n    <Modal visible={showWarning} closeButton={false}>\n      <div style={{ width: '100%' }}>\n        <div style={{ fontSize: 24, padding: 3, color: theme.warning }}>\n          Warning\n        </div>\n\n        <div style={{\n          marginLeft: '3%',\n          fontSize: 16,\n          padding: 5\n        }}>\n          <div>\n            Coupons will only become redeemable during the next supply\n            expansion. Each expansionary epoch, a tranche of rewards are\n            reserved for coupon redemptions by the DAO. At that time, the\n            redemption process is first come, first served. If coupons are not\n            redeemed within {COUPON_EXPIRATION} epochs of purchase, they can be\n            redeemed for the original purchase price and the premium is forfeited.\n          </div>\n\n          <div style={{\n            padding: 10,\n            textAlign: 'center',\n            color: theme.warningSurfaceContent\n          }}>\n            Coupon premiums and redemption timing are not guaranteed.\n          </div>\n        </div>\n\n        <div style={{ textAlign: 'right' }}>\n          <Button\n            label={'I understand'}\n            onClick={() => {\n              storePreference('showCouponWarning', '0');\n              setShowWarning(false);\n            }}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default ModalWarning;\n"]},"metadata":{},"sourceType":"module"}