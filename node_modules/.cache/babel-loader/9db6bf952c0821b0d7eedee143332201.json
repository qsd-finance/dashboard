{"ast":null,"code":"import './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React, { useMemo } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport { unselectable } from './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport { textStyle } from './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport { i } from './index-422d37c0.js'; // be used to link the <label> to a specific form element by using a render\n// prop. See `children` in the Field documentation for more details.\n\nvar fieldId = 1;\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"Field___StyledDiv\",\n  componentId: \"uqte4v-0\"\n})([\"margin-bottom:\", \"px;\"], function (p) {\n  return p._css;\n});\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"Field___StyledDiv2\",\n  componentId: \"uqte4v-1\"\n})([\"display:flex;align-items:center;height:\", \"px;margin-bottom:\", \"px;color:\", \";white-space:nowrap;\", \";\", \";\"], function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n}, unselectable);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"Field___StyledSpan\",\n  componentId: \"uqte4v-2\"\n})([\"color:\", \";\"], function (p) {\n  return p._css6;\n});\n\nfunction Field(_ref) {\n  var children = _ref.children,\n      label = _ref.label,\n      required = _ref.required,\n      props = _objectWithoutProperties(_ref, [\"children\", \"label\", \"required\"]);\n\n  var theme = useTheme();\n  var isRequired = required || React.Children.toArray(children).some(function (_ref2) {\n    var props = _ref2.props;\n    return props && props.required;\n  });\n  var id = useMemo(function () {\n    return typeof children === 'function' ? \"Field_\".concat(fieldId++) : null;\n  }, [children]);\n  var labelProps = id === null ? {} : {\n    htmlFor: id\n  };\n  return /*#__PURE__*/React.createElement(i, {\n    name: \"Field\"\n  }, /*#__PURE__*/React.createElement(_StyledDiv, _extends({}, props, {\n    _css: 3 * GU\n  }), /*#__PURE__*/React.createElement(\"label\", labelProps, /*#__PURE__*/React.createElement(_StyledDiv2, {\n    _css2: 2 * GU,\n    _css3: 0.5 * GU,\n    _css4: theme.surfaceContentSecondary,\n    _css5: textStyle('label2')\n  }, /*#__PURE__*/React.createElement(i, {\n    name: \"Field:label\"\n  }, label, isRequired && /*#__PURE__*/React.createElement(_StyledSpan, {\n    title: \"Required\",\n    _css6: theme.accent\n  }, \"\\xA0*\"))), /*#__PURE__*/React.createElement(i, {\n    name: \"Field:content\"\n  }, typeof children === 'function' ? children({\n    id: id\n  }) : children))));\n}\n\nField.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  label: PropTypes.node,\n  required: PropTypes.bool\n};\nexport default Field;","map":{"version":3,"sources":["../../src/components/Field/Field.js"],"names":["fieldId","children","label","required","props","theme","useTheme","isRequired","id","useMemo","labelProps","htmlFor","GU","textStyle","unselectable","accent","Field","PropTypes","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAQA;AACA;;AACA,IAAIA,OAAO,GAAX,CAAA;;;;;;;;;;;;;;;;;;;;GAoCgBc,Y;;;;;;;;;AAlChB,SAAA,KAAA,CAAA,IAAA,EAAwD;AAAA,MAAvCb,QAAuC,GAAA,IAAA,CAAvCA,QAAuC;AAAA,MAA7BC,KAA6B,GAAA,IAAA,CAA7BA,KAA6B;AAAA,MAAtBC,QAAsB,GAAA,IAAA,CAAtBA,QAAsB;AAAA,MAATC,KAAS,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA;;AACtD,MAAMC,KAAK,GAAGC,QAAd,EAAA;AAEA,MAAMC,UAAU,GACdJ,QAAQ,IACR,KAAK,CAAL,QAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,CACE,UAAA,KAAA,EAAA;AAAA,QAAGC,KAAH,GAAA,KAAA,CAAA,KAAA;AAAA,WAAeA,KAAK,IAAIA,KAAK,CAA7B,QAAA;AAHJ,GAEE,CAFF;AAMA,MAAMI,EAAE,GAAGC,OAAO,CAChB,YAAA;AAAA,WAAO,OAAA,QAAA,KAAA,UAAA,GAAA,SAAA,MAAA,CAA0CT,OAA1C,EAAA,CAAA,GAAP,IAAA;AADgB,GAAA,EAEhB,CAFF,QAEE,CAFgB,CAAlB;AAKA,MAAMU,UAAU,GAAGF,EAAE,KAAFA,IAAAA,GAAAA,EAAAA,GAAmB;AAAEG,IAAAA,OAAO,EAAEH;AAAX,GAAtC;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAQ,IAAA,IAAI,EAAC;AAAb,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAA,IAAA,IAAA,EAEqB,IAAII;AAFzB,GAAA,CAAA,EAAA,aAME,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,UAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAAA,IAAA,KAAA,EAIc,IAJd,EAAA;AAAA,IAAA,KAAA,EAKqB,MALrB,EAAA;AAAA,IAAA,KAAA,EAMaP,KAAK,CANlB,uBAAA;AAAA,IAAA,KAAA,EAQMQ,SAAS,CAAA,QAAA;AARf,GAAA,EAAA,aAYE,KAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAQ,IAAA,IAAI,EAAC;AAAb,GAAA,EAAA,KAAA,EAEGN,UAAU,IAAA,aACT,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAIE,IAAA,KAAK,EAJP,UAAA;AAAA,IAAA,KAAA,EAEaF,KAAK,CAACU;AAFnB,GAAA,EAhBR,OAgBQ,CAHJ,CAZF,CADF,EAAA,aA2BE,KAAA,CAAA,aAAA,CAAA,CAAA,EAAA;AAAQ,IAAA,IAAI,EAAC;AAAb,GAAA,EACG,OAAA,QAAA,KAAA,UAAA,GAAiCd,QAAQ,CAAC;AAAEO,IAAAA,EAAE,EAAFA;AAAF,GAAD,CAAzC,GApCX,QAmCQ,CA3BF,CANF,CADF,CADF;AA0CD;;AAEDQ,KAAK,CAALA,SAAAA,GAAkB;AAChBf,EAAAA,QAAQ,EAAEgB,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,IAAA,EAAiBA,SAAS,CADxC,IACc,CAApBA,CADM;AAEhBf,EAAAA,KAAK,EAAEe,SAAS,CAFA,IAAA;AAGhBd,EAAAA,QAAQ,EAAEc,SAAS,CAACC;AAHJ,CAAlBF","sourcesContent":["import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { Inside } from 'use-inside'\nimport { useTheme } from '../../theme'\nimport { textStyle, GU } from '../../style'\nimport { unselectable } from '../../utils'\n\n// This variable is used as a simple mechanism to generate unique IDs, that can\n// be used to link the <label> to a specific form element by using a render\n// prop. See `children` in the Field documentation for more details.\nlet fieldId = 1\n\nfunction Field({ children, label, required, ...props }) {\n  const theme = useTheme()\n\n  const isRequired =\n    required ||\n    React.Children.toArray(children).some(\n      ({ props }) => props && props.required\n    )\n\n  const id = useMemo(\n    () => (typeof children === 'function' ? `Field_${fieldId++}` : null),\n    [children]\n  )\n\n  const labelProps = id === null ? {} : { htmlFor: id }\n\n  return (\n    <Inside name=\"Field\">\n      <div\n        css={`\n          margin-bottom: ${3 * GU}px;\n        `}\n        {...props}\n      >\n        <label {...labelProps}>\n          <div\n            css={`\n              display: flex;\n              align-items: center;\n              height: ${2 * GU}px;\n              margin-bottom: ${0.5 * GU}px;\n              color: ${theme.surfaceContentSecondary};\n              white-space: nowrap;\n              ${textStyle('label2')};\n              ${unselectable};\n            `}\n          >\n            <Inside name=\"Field:label\">\n              {label}\n              {isRequired && (\n                <span\n                  css={`\n                    color: ${theme.accent};\n                  `}\n                  title=\"Required\"\n                >\n                  {'\\u00a0*'}\n                </span>\n              )}\n            </Inside>\n          </div>\n          <Inside name=\"Field:content\">\n            {typeof children === 'function' ? children({ id }) : children}\n          </Inside>\n        </label>\n      </div>\n    </Inside>\n  )\n}\n\nField.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  label: PropTypes.node,\n  required: PropTypes.bool,\n}\n\nexport default Field\n"]},"metadata":{},"sourceType":"module"}