{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport { useState, useCallback, useEffect } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport './toConsumableArray-127424c2.js';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport { KEY_UP, KEY_DOWN } from './keycodes.js';\nimport './url.js';\nimport './web3.js';\n\nfunction useArrowKeysFocus(refs) {\n  var _useState = useState(-1),\n      _useState2 = _slicedToArray(_useState, 2),\n      highlightedIndex = _useState2[0],\n      setHighlightedIndex = _useState2[1];\n\n  var cycleFocus = useCallback(function (e, change) {\n    e.preventDefault();\n    var next = highlightedIndex + change;\n\n    if (next > refs.length - 1) {\n      next = 0;\n    }\n\n    if (next < 0) {\n      next = refs.length - 1;\n    }\n\n    setHighlightedIndex(next);\n  }, [highlightedIndex, refs.length]);\n  var handleKeyDown = useCallback(function (event) {\n    var keyCode = event.keyCode;\n\n    if (keyCode === KEY_UP || keyCode === KEY_DOWN) {\n      cycleFocus(event, keyCode === KEY_UP ? -1 : 1);\n    }\n  }, [cycleFocus]);\n  useEffect(function () {\n    document.addEventListener('keydown', handleKeyDown);\n    return function () {\n      return document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  useEffect(function () {\n    if (highlightedIndex === -1) {\n      return;\n    }\n\n    if (!refs[highlightedIndex]) {\n      return;\n    }\n\n    refs[highlightedIndex].focus();\n  }, [highlightedIndex, refs]);\n  return {\n    highlightedIndex: highlightedIndex,\n    setHighlightedIndex: setHighlightedIndex\n  };\n}\n\nexport { useArrowKeysFocus };","map":{"version":3,"sources":["../../src/hooks/useArrowKeysFocus.js"],"names":["highlightedIndex","setHighlightedIndex","useState","cycleFocus","useCallback","e","next","refs","handleKeyDown","keyCode","event","useEffect","document"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGO,SAAA,iBAAA,CAAA,IAAA,EAAiC;AAAA,MAAA,SAAA,GACUE,QAAQ,CAAC,CADnB,CACkB,CADlB;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAC/BF,gBAD+B,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MACbC,mBADa,GAAA,UAAA,CAAA,CAAA,CAAA;;AAGtC,MAAME,UAAU,GAAGC,WAAW,CAC5B,UAAA,CAAA,EAAA,MAAA,EAAe;AACbC,IAAAA,CAAC,CAADA,cAAAA;AACA,QAAIC,IAAI,GAAGN,gBAAgB,GAA3B,MAAA;;AACA,QAAIM,IAAI,GAAGC,IAAI,CAAJA,MAAAA,GAAX,CAAA,EAA4B;AAC1BD,MAAAA,IAAI,GAAJA,CAAAA;AACD;;AACD,QAAIA,IAAI,GAAR,CAAA,EAAc;AACZA,MAAAA,IAAI,GAAGC,IAAI,CAAJA,MAAAA,GAAPD,CAAAA;AACD;;AACDL,IAAAA,mBAAmB,CAAnBA,IAAmB,CAAnBA;AAV0B,GAAA,EAY5B,CAAA,gBAAA,EAAmBM,IAAI,CAZzB,MAYE,CAZ4B,CAA9B;AAeA,MAAMC,aAAa,GAAGJ,WAAW,CAC/B,UAAA,KAAA,EAAS;AAAA,QACCK,OADD,GACaC,KADb,CAAA,OAAA;;AAEP,QAAID,OAAO,KAAPA,MAAAA,IAAsBA,OAAO,KAAjC,QAAA,EAAgD;AAC9CN,MAAAA,UAAU,CAAA,KAAA,EAAQM,OAAO,KAAPA,MAAAA,GAAqB,CAArBA,CAAAA,GAAlBN,CAAU,CAAVA;AACD;AAL4B,GAAA,EAO/B,CAPF,UAOE,CAP+B,CAAjC;AAUAQ,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;AACA,WAAO,YAAA;AAAA,aAAMA,QAAQ,CAARA,mBAAAA,CAAAA,SAAAA,EAAN,aAAMA,CAAN;AAAP,KAAA;AAFO,GAAA,EAGN,CAHHD,aAGG,CAHM,CAATA;AAKAA,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIX,gBAAgB,KAAK,CAAzB,CAAA,EAA6B;AAC3B;AACD;;AACD,QAAI,CAACO,IAAI,CAAT,gBAAS,CAAT,EAA6B;AAC3B;AACD;;AACDA,IAAAA,IAAI,CAAJA,gBAAI,CAAJA,CAAAA,KAAAA;AAPO,GAAA,EAQN,CAAA,gBAAA,EARHI,IAQG,CARM,CAATA;AAUA,SAAO;AACLX,IAAAA,gBAAgB,EADX,gBAAA;AAELC,IAAAA,mBAAmB,EAAnBA;AAFK,GAAP;AAID","sourcesContent":["import { useState, useCallback, useEffect } from 'react'\nimport { KEY_UP, KEY_DOWN } from '../utils'\n\nexport function useArrowKeysFocus(refs) {\n  const [highlightedIndex, setHighlightedIndex] = useState(-1)\n\n  const cycleFocus = useCallback(\n    (e, change) => {\n      e.preventDefault()\n      let next = highlightedIndex + change\n      if (next > refs.length - 1) {\n        next = 0\n      }\n      if (next < 0) {\n        next = refs.length - 1\n      }\n      setHighlightedIndex(next)\n    },\n    [highlightedIndex, refs.length]\n  )\n\n  const handleKeyDown = useCallback(\n    event => {\n      const { keyCode } = event\n      if (keyCode === KEY_UP || keyCode === KEY_DOWN) {\n        cycleFocus(event, keyCode === KEY_UP ? -1 : 1)\n      }\n    },\n    [cycleFocus]\n  )\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [handleKeyDown])\n\n  useEffect(() => {\n    if (highlightedIndex === -1) {\n      return\n    }\n    if (!refs[highlightedIndex]) {\n      return\n    }\n    refs[highlightedIndex].focus()\n  }, [highlightedIndex, refs])\n\n  return {\n    highlightedIndex,\n    setHighlightedIndex,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}