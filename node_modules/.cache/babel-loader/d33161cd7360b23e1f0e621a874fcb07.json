{"ast":null,"code":"import _objectSpread from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';export var Row=function Row(_ref){var style=_ref.style,props=_objectWithoutProperties(_ref,[\"style\"]);var childrenCount=Array.isArray(props.children)?props.children.length:1;var gapsCount=childrenCount-1;var columnWidth=(100-gapsCount*6)/childrenCount;var gridTemplateColumns=new Array(childrenCount).fill(columnWidth+'%').join(' ');return/*#__PURE__*/React.createElement(\"div\",Object.assign({style:_objectSpread({display:'grid',gridTemplateColumns:gridTemplateColumns,justifyContent:'space-between'},style)},props));};","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/common/Row.tsx"],"names":["React","Row","style","props","childrenCount","Array","isArray","children","length","gapsCount","columnWidth","gridTemplateColumns","fill","join","display","justifyContent"],"mappings":"mTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAMA,MAAO,IAAMC,CAAAA,GAAuB,CAAG,QAA1BA,CAAAA,GAA0B,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAZC,KAAY,0CAC9D,GAAMC,CAAAA,aAAa,CAAGC,KAAK,CAACC,OAAN,CAAcH,KAAK,CAACI,QAApB,EAClBJ,KAAK,CAACI,QAAN,CAAeC,MADG,CAElB,CAFJ,CAGA,GAAMC,CAAAA,SAAS,CAAGL,aAAa,CAAG,CAAlC,CACA,GAAMM,CAAAA,WAAW,CAAG,CAAC,IAAMD,SAAS,CAAG,CAAnB,EAAwBL,aAA5C,CACA,GAAMO,CAAAA,mBAAmB,CAAG,GAAIN,CAAAA,KAAJ,CAAUD,aAAV,EACzBQ,IADyB,CACpBF,WAAW,CAAG,GADM,EAEzBG,IAFyB,CAEpB,GAFoB,CAA5B,CAIA,mBACE,yCACE,KAAK,gBACHC,OAAO,CAAE,MADN,CAEHH,mBAAmB,CAAnBA,mBAFG,CAGHI,cAAc,CAAE,eAHb,EAIAb,KAJA,CADP,EAOMC,KAPN,EADF,CAWD,CArBM","sourcesContent":["import React from 'react';\n\ninterface RowProps {\n  style?: React.CSSProperties;\n}\n\nexport const Row: React.FC<RowProps> = ({ style, ...props }) => {\n  const childrenCount = Array.isArray(props.children)\n    ? props.children.length\n    : 1;\n  const gapsCount = childrenCount - 1;\n  const columnWidth = (100 - gapsCount * 6) / childrenCount;\n  const gridTemplateColumns = new Array(childrenCount)\n    .fill(columnWidth + '%')\n    .join(' ');\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns,\n        justifyContent: 'space-between',\n        ...style,\n      }}\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}