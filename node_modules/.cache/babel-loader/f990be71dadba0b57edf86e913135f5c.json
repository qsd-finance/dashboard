{"ast":null,"code":"import _regeneratorRuntime from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/J/crypto/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,IconConnect,IconPower,IdentityBadge,LinkBase}from'@aragon/ui';import React,{useState}from'react';import{useWallet}from'use-wallet';import{connect}from'../../utils/web3';import ConnectModal from'./ConnectModal';import TotalBalance from'./TotalBalance';function ConnectButton(_ref){var hasWeb3=_ref.hasWeb3,user=_ref.user,setUser=_ref.setUser;var _useWallet=useWallet(),status=_useWallet.status,reset=_useWallet.reset;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isModalOpen=_useState2[0],setModalOpen=_useState2[1];var connectWeb3=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(wallet){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:connect(wallet.ethereum);setUser(wallet.account);case 2:case\"end\":return _context.stop();}}},_callee);}));return function connectWeb3(_x){return _ref2.apply(this,arguments);};}();var disconnectWeb3=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setUser('');reset();case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function disconnectWeb3(){return _ref3.apply(this,arguments);};}();var toggleModal=function toggleModal(){return setModalOpen(!isModalOpen);};return status==='connected'?/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",{style:{flex:'1'}}),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(LinkBase,{onClick:disconnectWeb3,style:{marginRight:'8px',height:'24px'}},/*#__PURE__*/React.createElement(IconPower,null))),/*#__PURE__*/React.createElement(\"div\",{style:{flex:'1',textAlign:'right'}},/*#__PURE__*/React.createElement(IdentityBadge,{entity:user})),/*#__PURE__*/React.createElement(\"div\",{style:{flex:'1',textAlign:'right',marginLeft:24}},/*#__PURE__*/React.createElement(TotalBalance,{user:user})))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ConnectModal,{visible:isModalOpen,onClose:toggleModal,onConnect:connectWeb3}),/*#__PURE__*/React.createElement(Button,{icon:/*#__PURE__*/React.createElement(IconConnect,null),label:\"Connect\",onClick:toggleModal,disabled:!hasWeb3}));}export default ConnectButton;","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/NavBar/ConnectButton.tsx"],"names":["Button","IconConnect","IconPower","IdentityBadge","LinkBase","React","useState","useWallet","connect","ConnectModal","TotalBalance","ConnectButton","hasWeb3","user","setUser","status","reset","isModalOpen","setModalOpen","connectWeb3","wallet","ethereum","account","disconnectWeb3","toggleModal","display","flex","marginRight","height","textAlign","marginLeft"],"mappings":"6aAAA,OACEA,MADF,CAEEC,WAFF,CAGEC,SAHF,CAIEC,aAJF,CAKEC,QALF,KAMO,YANP,CAOA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,SAAT,KAA0B,YAA1B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAQA,QAASC,CAAAA,aAAT,MAAuE,IAA9CC,CAAAA,OAA8C,MAA9CA,OAA8C,CAArCC,IAAqC,MAArCA,IAAqC,CAA/BC,OAA+B,MAA/BA,OAA+B,gBAC3CP,SAAS,EADkC,CAC7DQ,MAD6D,YAC7DA,MAD6D,CACrDC,KADqD,YACrDA,KADqD,eAGjCV,QAAQ,CAAC,KAAD,CAHyB,wCAG9DW,WAH8D,eAGjDC,YAHiD,eAKrE,GAAMC,CAAAA,WAAW,2FAAG,iBAAOC,MAAP,kHAClBZ,OAAO,CAACY,MAAM,CAACC,QAAR,CAAP,CACAP,OAAO,CAACM,MAAM,CAACE,OAAR,CAAP,CAFkB,sDAAH,kBAAXH,CAAAA,WAAW,6CAAjB,CAKA,GAAMI,CAAAA,cAAc,2FAAG,wIACrBT,OAAO,CAAC,EAAD,CAAP,CACAE,KAAK,GAFgB,wDAAH,kBAAdO,CAAAA,cAAc,2CAApB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMN,CAAAA,YAAY,CAAC,CAACD,WAAF,CAAlB,EAApB,CAEA,MAAOF,CAAAA,MAAM,GAAK,WAAX,cACL,2BAAK,KAAK,CAAE,CAAEU,OAAO,CAAE,MAAX,CAAZ,eACE,2BAAK,KAAK,CAAE,CAAEC,IAAI,CAAE,GAAR,CAAZ,EADF,cAEE,2BAAK,KAAK,CAAE,CAAED,OAAO,CAAE,MAAX,CAAZ,eACE,4CACE,oBAAC,QAAD,EACE,OAAO,CAAEF,cADX,CAEE,KAAK,CAAE,CAAEI,WAAW,CAAE,KAAf,CAAsBC,MAAM,CAAE,MAA9B,CAFT,eAIE,oBAAC,SAAD,MAJF,CADF,CADF,cASE,2BAAK,KAAK,CAAE,CAAEF,IAAI,CAAE,GAAR,CAAaG,SAAS,CAAE,OAAxB,CAAZ,eACE,oBAAC,aAAD,EAAe,MAAM,CAAEhB,IAAvB,EADF,CATF,cAYE,2BAAK,KAAK,CAAE,CAAEa,IAAI,CAAE,GAAR,CAAaG,SAAS,CAAE,OAAxB,CAAiCC,UAAU,CAAE,EAA7C,CAAZ,eACE,oBAAC,YAAD,EAAc,IAAI,CAAEjB,IAApB,EADF,CAZF,CAFF,CADK,cAqBL,qDACE,oBAAC,YAAD,EACE,OAAO,CAAEI,WADX,CAEE,OAAO,CAAEO,WAFX,CAGE,SAAS,CAAEL,WAHb,EADF,cAME,oBAAC,MAAD,EACE,IAAI,cAAE,oBAAC,WAAD,MADR,CAEE,KAAK,CAAC,SAFR,CAGE,OAAO,CAAEK,WAHX,CAIE,QAAQ,CAAE,CAACZ,OAJb,EANF,CArBF,CAmCD,CAED,cAAeD,CAAAA,aAAf","sourcesContent":["import {\n  Button,\n  IconConnect,\n  IconPower,\n  IdentityBadge,\n  LinkBase,\n} from '@aragon/ui';\nimport React, { useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { connect } from '../../utils/web3';\nimport ConnectModal from './ConnectModal';\nimport TotalBalance from './TotalBalance';\n\ntype connectButtonProps = {\n  hasWeb3: boolean;\n  user: string;\n  setUser: Function;\n};\n\nfunction ConnectButton({ hasWeb3, user, setUser }: connectButtonProps) {\n  const { status, reset } = useWallet();\n\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const connectWeb3 = async (wallet) => {\n    connect(wallet.ethereum);\n    setUser(wallet.account);\n  };\n\n  const disconnectWeb3 = async () => {\n    setUser('');\n    reset();\n  };\n\n  const toggleModal = () => setModalOpen(!isModalOpen);\n\n  return status === 'connected' ? (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: '1' }} />\n      <div style={{ display: 'flex' }}>\n        <div>\n          <LinkBase\n            onClick={disconnectWeb3}\n            style={{ marginRight: '8px', height: '24px' }}\n          >\n            <IconPower />\n          </LinkBase>\n        </div>\n        <div style={{ flex: '1', textAlign: 'right' }}>\n          <IdentityBadge entity={user} />\n        </div>\n        <div style={{ flex: '1', textAlign: 'right', marginLeft: 24 }}>\n          <TotalBalance user={user} />\n        </div>\n      </div>\n    </div>\n  ) : (\n    <>\n      <ConnectModal\n        visible={isModalOpen}\n        onClose={toggleModal}\n        onConnect={connectWeb3}\n      />\n      <Button\n        icon={<IconConnect />}\n        label='Connect'\n        onClick={toggleModal}\n        disabled={!hasWeb3}\n      />\n    </>\n  );\n}\n\nexport default ConnectButton;\n"]},"metadata":{},"sourceType":"module"}