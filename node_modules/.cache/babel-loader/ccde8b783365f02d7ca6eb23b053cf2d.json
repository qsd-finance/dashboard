{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React, { useRef, useState, useCallback } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport { warn } from './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport { isAddress, tokenIconUrl } from './web3.js';\nimport { GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport './index-422d37c0.js';\nimport './isObject-3c6ec07e.js';\nimport './Viewport-cc7debfb.js';\nimport './Layout.js';\nimport './FocusVisible.js';\nimport './ButtonBase.js';\nimport './IconPropTypes-aab7337d.js';\nimport './IconAddUser.js';\nimport './IconAlert.js';\nimport './IconAlignCenter.js';\nimport './IconAlignJustify.js';\nimport './IconAlignLeft.js';\nimport './IconAlignRight.js';\nimport './IconAragon.js';\nimport './IconArrowDown.js';\nimport './IconArrowLeft.js';\nimport './IconArrowRight.js';\nimport './IconArrowUp.js';\nimport './IconAtSign.js';\nimport './IconBlock.js';\nimport './IconBookmark.js';\nimport './IconCalendar.js';\nimport './IconCanvas.js';\nimport './IconCaution.js';\nimport './IconCenter.js';\nimport './IconChart.js';\nimport './IconChat.js';\nimport './IconCheck.js';\nimport './IconChip.js';\nimport './IconCircleCheck.js';\nimport './IconCircleMinus.js';\nimport './IconCirclePlus.js';\nimport './IconClock.js';\nimport './IconCloudDownload.js';\nimport './IconCloudUpload.js';\nimport './IconCoin.js';\nimport './IconConfiguration.js';\nimport './IconConnect.js';\nimport './IconConnection.js';\nimport './IconConsole.js';\nimport './IconCopy.js';\nimport './IconCross.js';\nimport './IconDashedSquare.js';\nimport './IconDown.js';\nimport './IconDownload.js';\nimport './IconEdit.js';\nimport './IconEllipsis.js';\nimport './IconEnter.js';\nimport './IconEthereum.js';\nimport './IconExternal.js';\nimport './IconFile.js';\nimport './IconFilter.js';\nimport './IconFlag.js';\nimport './IconFolder.js';\nimport './IconGraph2.js';\nimport './IconGraph.js';\nimport './IconGrid.js';\nimport './IconGroup.js';\nimport './IconHash.js';\nimport './IconHeart.js';\nimport './IconHide.js';\nimport './IconHome.js';\nimport './IconImage.js';\nimport './IconInfo.js';\nimport './IconLabel.js';\nimport './IconLayers.js';\nimport './IconLeft.js';\nimport './IconLink.js';\nimport './IconLocation.js';\nimport './IconLock.js';\nimport './IconMail.js';\nimport './IconMaximize.js';\nimport './IconMenu.js';\nimport './IconMinimize.js';\nimport './IconMinus.js';\nimport './IconMove.js';\nimport './IconNoPicture.js';\nimport './IconPicture.js';\nimport './IconPlus.js';\nimport './IconPower.js';\nimport './IconPrint.js';\nimport './IconProhibited.js';\nimport './IconQuestion.js';\nimport './IconRefresh.js';\nimport './IconRemoveUser.js';\nimport './IconRight.js';\nimport './IconRotateLeft.js';\nimport './IconRotateRight.js';\nimport './IconSearch.js';\nimport './IconSettings.js';\nimport './IconShare.js';\nimport './IconSquareMinus.js';\nimport './IconSquarePlus.js';\nimport './IconSquare.js';\nimport './IconStarFilled.js';\nimport './IconStar.js';\nimport './IconSwap.js';\nimport './IconTarget.js';\nimport './IconToken.js';\nimport './IconTrash.js';\nimport './IconUnlock.js';\nimport './IconUp.js';\nimport './IconUpload.js';\nimport './IconUser.js';\nimport './IconView.js';\nimport './IconVote.js';\nimport './IconWallet.js';\nimport './IconWarning.js';\nimport './IconWorld.js';\nimport './IconWrite.js';\nimport './IconZoomIn.js';\nimport './IconZoomOut.js';\nimport './objectWithoutPropertiesLoose-9606ad13.js';\nimport 'react-dom';\nimport './web-a351a0a1.js';\nimport './Button.js';\nimport './ButtonIcon.js';\nimport './getDisplayName-d5fc7707.js';\nimport './index-edfeada6.js';\nimport './Link.js';\nimport './TextInput.js';\nimport './ToastHub.js';\nimport './index-f754c2df.js';\nimport './RootPortal.js';\nimport './TextCopy.js';\nimport './taggedTemplateLiteral-37fd5203.js';\nimport './_react_commonjs-external-3b63cae6.js';\nimport './EthIdenticon.js';\nimport './AddressField.js';\nimport './useArrowKeysFocus.js';\nimport './useClickOutside.js';\nimport './useFocusEnter.js';\nimport './useFocusLeave.js';\nimport { ImageExists } from './useImageExists.js';\nimport './useKeyDown.js';\nimport './useOnBlur.js';\nimport BadgeBase from './BadgeBase.js';\nimport './BadgePopoverActionType.js';\nimport './proptypes-c8a77d05.js';\nimport './Popover.js';\nimport './observe.js';\nimport './index-f0d64c59.js';\nimport './providers.js';\nimport './BadgePopoverBase.js';\nimport TokenBadgePopover from './TokenBadgePopover.js';\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"TokenBadge___StyledSpan\",\n  componentId: \"sc-7bvdqo-0\"\n})([\"position:relative;top:1px;display:flex;flex-shrink:1;min-width:0;margin-left:\", \";\"], function (p) {\n  return p._css;\n});\n\nvar TokenBadge = React.memo(function TokenBadge(_ref) {\n  var address = _ref.address,\n      badgeOnly = _ref.badgeOnly,\n      className = _ref.className,\n      compact = _ref.compact,\n      name = _ref.name,\n      networkType = _ref.networkType,\n      style = _ref.style,\n      symbol = _ref.symbol;\n  var badgeRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      opened = _useState2[0],\n      setOpened = _useState2[1];\n\n  var handleClose = useCallback(function () {\n    return setOpened(false);\n  }, []);\n  var handleOpen = useCallback(function () {\n    return setOpened(true);\n  }, []);\n  var isValidAddress = isAddress(address);\n  var iconSrc = isValidAddress && networkType === 'main' ? tokenIconUrl(address) : null;\n  var title = name && symbol ? \"\".concat(name, \" (\").concat(symbol, \")\") : symbol;\n\n  if (!isValidAddress) {\n    warn(\"TokenBadge: provided invalid address (\".concat(address, \")\"));\n  }\n\n  return /*#__PURE__*/React.createElement(BadgeBase, {\n    badgeRef: badgeRef,\n    className: className,\n    compact: compact,\n    disabled: badgeOnly,\n    icon: /*#__PURE__*/React.createElement(ImageExists, {\n      src: iconSrc\n    }, function (_ref2) {\n      var exists = _ref2.exists;\n      return exists && /*#__PURE__*/React.createElement(Icon, {\n        compact: compact,\n        src: iconSrc\n      });\n    }),\n    label: /*#__PURE__*/React.createElement(_StyledSpan, {\n      _css: compact ? 0 : \"\".concat(1 * GU, \"px\")\n    }, name && /*#__PURE__*/React.createElement(Name, null, name), /*#__PURE__*/React.createElement(_Symbol, null, name ? \"(\".concat(symbol, \")\") : symbol)),\n    onClick: isValidAddress ? handleOpen : undefined,\n    style: style,\n    title: \"\".concat(title, \" \\u2212 \").concat(address || 'No address')\n  }, function (popoverDisabled) {\n    return !popoverDisabled && address && /*#__PURE__*/React.createElement(TokenBadgePopover, {\n      address: address,\n      iconSrc: iconSrc,\n      networkType: networkType,\n      onClose: handleClose,\n      opener: badgeRef.current,\n      title: title,\n      visible: opened\n    });\n  });\n});\nTokenBadge.propTypes = {\n  address: PropTypes.string,\n  badgeOnly: PropTypes.bool,\n  className: PropTypes.string,\n  compact: PropTypes.bool,\n  name: PropTypes.string,\n  networkType: PropTypes.string,\n  style: PropTypes.object,\n  symbol: PropTypes.string.isRequired\n};\nTokenBadge.defaultProps = {\n  address: '',\n  name: '',\n  networkType: 'main'\n};\n\nvar _StyledSpan2 = _styled(\"span\").withConfig({\n  displayName: \"TokenBadge___StyledSpan2\",\n  componentId: \"sc-7bvdqo-1\"\n})([\"flex-shrink:0;display:block;width:18px;height:18px;margin:0 \", \"px 0 \", \"px;background-size:contain;background-position:50% 50%;background-repeat:no-repeat;background-image:url(\", \");\"], function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n});\n\nfunction Icon(_ref3) {\n  var compact = _ref3.compact,\n      src = _ref3.src,\n      props = _objectWithoutProperties(_ref3, [\"compact\", \"src\"]);\n\n  var margin = 1 * GU;\n  return /*#__PURE__*/React.createElement(_StyledSpan2, _extends({}, props, {\n    _css2: compact ? margin : 0,\n    _css3: compact ? 0 : margin,\n    _css4: src\n  }));\n}\n\nIcon.propTypes = {\n  compact: PropTypes.bool,\n  src: PropTypes.string.isRequired\n};\n\nvar Name = _styled.span.withConfig({\n  displayName: \"TokenBadge__Name\",\n  componentId: \"sc-7bvdqo-2\"\n})([\"flex-shrink:1;overflow:hidden;text-overflow:ellipsis;min-width:20%;margin-right:\", \"px;\"], 0.5 * GU);\n\nvar _Symbol = _styled.span.withConfig({\n  displayName: \"TokenBadge___Symbol\",\n  componentId: \"sc-7bvdqo-3\"\n})([\"flex-shrink:0;\"]);\n\nexport default TokenBadge;","map":{"version":3,"sources":["../../src/components/TokenBadge/TokenBadge.js"],"names":["TokenBadge","address","badgeOnly","className","compact","name","networkType","style","symbol","badgeRef","useRef","opened","setOpened","useState","handleClose","useCallback","handleOpen","isValidAddress","isAddress","iconSrc","tokenIconUrl","title","warn","exists","PropTypes","isRequired","src","props","margin","Icon","Name","styled","Symbol"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { ImageExists } from '../../hooks'\nimport { GU } from '../../style'\nimport { isAddress, tokenIconUrl, warn } from '../../utils'\nimport BadgeBase from '../BadgeBase/BadgeBase'\nimport TokenBadgePopover from './TokenBadgePopover'\n\nconst TokenBadge = React.memo(function TokenBadge({\n  address,\n  badgeOnly,\n  className,\n  compact,\n  name,\n  networkType,\n  style,\n  symbol,\n}) {\n  const badgeRef = useRef(null)\n\n  const [opened, setOpened] = useState(false)\n  const handleClose = useCallback(() => setOpened(false), [])\n  const handleOpen = useCallback(() => setOpened(true), [])\n\n  const isValidAddress = isAddress(address)\n  const iconSrc =\n    isValidAddress && networkType === 'main' ? tokenIconUrl(address) : null\n  const title = name && symbol ? `${name} (${symbol})` : symbol\n\n  if (!isValidAddress) {\n    warn(`TokenBadge: provided invalid address (${address})`)\n  }\n\n  return (\n    <BadgeBase\n      badgeRef={badgeRef}\n      className={className}\n      compact={compact}\n      disabled={badgeOnly}\n      icon={\n        <ImageExists src={iconSrc}>\n          {({ exists }) => exists && <Icon compact={compact} src={iconSrc} />}\n        </ImageExists>\n      }\n      label={\n        <span\n          css={`\n            position: relative;\n            top: 1px;\n            display: flex;\n            flex-shrink: 1;\n            min-width: 0;\n            margin-left: ${compact ? 0 : `${1 * GU}px`};\n          `}\n        >\n          {name && <Name>{name}</Name>}\n          <Symbol>{name ? `(${symbol})` : symbol}</Symbol>\n        </span>\n      }\n      onClick={isValidAddress ? handleOpen : undefined}\n      style={style}\n      title={`${title} − ${address || 'No address'}`}\n    >\n      {popoverDisabled =>\n        !popoverDisabled &&\n        address && (\n          <TokenBadgePopover\n            address={address}\n            iconSrc={iconSrc}\n            networkType={networkType}\n            onClose={handleClose}\n            opener={badgeRef.current}\n            title={title}\n            visible={opened}\n          />\n        )\n      }\n    </BadgeBase>\n  )\n})\nTokenBadge.propTypes = {\n  address: PropTypes.string,\n  badgeOnly: PropTypes.bool,\n  className: PropTypes.string,\n  compact: PropTypes.bool,\n  name: PropTypes.string,\n  networkType: PropTypes.string,\n  style: PropTypes.object,\n  symbol: PropTypes.string.isRequired,\n}\nTokenBadge.defaultProps = {\n  address: '',\n  name: '',\n  networkType: 'main',\n}\n\nfunction Icon({ compact, src, ...props }) {\n  const margin = 1 * GU\n  return (\n    <span\n      css={`\n        flex-shrink: 0;\n        display: block;\n        width: 18px;\n        height: 18px;\n        margin: 0 ${compact ? margin : 0}px 0 ${compact ? 0 : margin}px;\n        background-size: contain;\n        background-position: 50% 50%;\n        background-repeat: no-repeat;\n        background-image: url(${src});\n      `}\n      {...props}\n    />\n  )\n}\nIcon.propTypes = {\n  compact: PropTypes.bool,\n  src: PropTypes.string.isRequired,\n}\n\nconst Name = styled.span`\n  flex-shrink: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-width: 20%;\n  margin-right: ${0.5 * GU}px;\n`\n\nconst Symbol = styled.span`\n  flex-shrink: 0;\n`\n\nexport default TokenBadge\n"]},"metadata":{},"sourceType":"module"}