{"ast":null,"code":"import './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React, { useRef, useCallback } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport { noop, identity } from './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { RADIUS } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport './objectWithoutProperties-234758e1.js';\nimport './index-422d37c0.js';\nimport './isObject-3c6ec07e.js';\nimport './Viewport-cc7debfb.js';\nimport './Layout.js';\nimport './FocusVisible.js';\nimport ButtonBase from './ButtonBase.js';\nimport './IconPropTypes-aab7337d.js';\nimport './IconAddUser.js';\nimport './IconAlert.js';\nimport './IconAlignCenter.js';\nimport './IconAlignJustify.js';\nimport './IconAlignLeft.js';\nimport './IconAlignRight.js';\nimport './IconAragon.js';\nimport './IconArrowDown.js';\nimport './IconArrowLeft.js';\nimport './IconArrowRight.js';\nimport './IconArrowUp.js';\nimport './IconAtSign.js';\nimport './IconBlock.js';\nimport './IconBookmark.js';\nimport './IconCalendar.js';\nimport './IconCanvas.js';\nimport './IconCaution.js';\nimport './IconCenter.js';\nimport './IconChart.js';\nimport './IconChat.js';\nimport './IconCheck.js';\nimport './IconChip.js';\nimport './IconCircleCheck.js';\nimport './IconCircleMinus.js';\nimport './IconCirclePlus.js';\nimport './IconClock.js';\nimport './IconCloudDownload.js';\nimport './IconCloudUpload.js';\nimport './IconCoin.js';\nimport './IconConfiguration.js';\nimport './IconConnect.js';\nimport './IconConnection.js';\nimport './IconConsole.js';\nimport './IconCopy.js';\nimport './IconCross.js';\nimport './IconDashedSquare.js';\nimport './IconDown.js';\nimport './IconDownload.js';\nimport './IconEdit.js';\nimport './IconEllipsis.js';\nimport './IconEnter.js';\nimport './IconEthereum.js';\nimport './IconExternal.js';\nimport './IconFile.js';\nimport './IconFilter.js';\nimport './IconFlag.js';\nimport './IconFolder.js';\nimport './IconGraph2.js';\nimport './IconGraph.js';\nimport './IconGrid.js';\nimport './IconGroup.js';\nimport './IconHash.js';\nimport './IconHeart.js';\nimport './IconHide.js';\nimport './IconHome.js';\nimport './IconImage.js';\nimport './IconInfo.js';\nimport './IconLabel.js';\nimport './IconLayers.js';\nimport './IconLeft.js';\nimport './IconLink.js';\nimport './IconLocation.js';\nimport './IconLock.js';\nimport './IconMail.js';\nimport './IconMaximize.js';\nimport './IconMenu.js';\nimport './IconMinimize.js';\nimport './IconMinus.js';\nimport './IconMove.js';\nimport './IconNoPicture.js';\nimport './IconPicture.js';\nimport './IconPlus.js';\nimport './IconPower.js';\nimport './IconPrint.js';\nimport './IconProhibited.js';\nimport './IconQuestion.js';\nimport './IconRefresh.js';\nimport './IconRemoveUser.js';\nimport './IconRight.js';\nimport './IconRotateLeft.js';\nimport './IconRotateRight.js';\nimport './IconSearch.js';\nimport './IconSettings.js';\nimport './IconShare.js';\nimport './IconSquareMinus.js';\nimport './IconSquarePlus.js';\nimport './IconSquare.js';\nimport './IconStarFilled.js';\nimport './IconStar.js';\nimport './IconSwap.js';\nimport './IconTarget.js';\nimport './IconToken.js';\nimport './IconTrash.js';\nimport './IconUnlock.js';\nimport './IconUp.js';\nimport './IconUpload.js';\nimport './IconUser.js';\nimport './IconView.js';\nimport './IconVote.js';\nimport './IconWallet.js';\nimport './IconWarning.js';\nimport './IconWorld.js';\nimport './IconWrite.js';\nimport './IconZoomIn.js';\nimport './IconZoomOut.js';\nimport './objectWithoutPropertiesLoose-9606ad13.js';\nimport 'react-dom';\nimport './web-a351a0a1.js';\nimport './Button.js';\nimport './ButtonIcon.js';\nimport './TextInput.js';\nimport './useArrowKeysFocus.js';\nimport './useClickOutside.js';\nimport './useFocusEnter.js';\nimport './useFocusLeave.js';\nimport './useImageExists.js';\nimport './useKeyDown.js';\nimport './useOnBlur.js';\nimport './SearchInput.js';\nimport AutoComplete from './AutoComplete.js';\n\nvar _StyledButtonBase = _styled(ButtonBase).withConfig({\n  displayName: \"AutoCompleteSelected___StyledButtonBase\",\n  componentId: \"sc-15vq9oz-0\"\n})([\"height:40px;width:100%;text-align:left;background:\", \";cursor:pointer;border:1px solid \", \";padding:4px 8px;\", \";\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n});\n\nfunction AutoCompleteSelected(_ref) {\n  var forwardedRef = _ref.forwardedRef,\n      itemButtonStyles = _ref.itemButtonStyles,\n      items = _ref.items,\n      onChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      _ref$onSelectedClick = _ref.onSelectedClick,\n      onSelectedClick = _ref$onSelectedClick === void 0 ? noop : _ref$onSelectedClick,\n      placeholder = _ref.placeholder,\n      renderItem = _ref.renderItem,\n      required = _ref.required,\n      _ref$renderSelected = _ref.renderSelected,\n      renderSelected = _ref$renderSelected === void 0 ? identity : _ref$renderSelected,\n      selected = _ref.selected,\n      _ref$selectedButtonSt = _ref.selectedButtonStyles,\n      selectedButtonStyles = _ref$selectedButtonSt === void 0 ? '' : _ref$selectedButtonSt,\n      value = _ref.value,\n      wide = _ref.wide;\n  var theme = useTheme();\n  var ref = forwardedRef;\n  var selectedRef = useRef();\n  var handleSelect = useCallback(function (selected) {\n    onSelect(selected);\n    setTimeout(function () {\n      selectedRef.current.focus();\n    }, 0);\n  }, [onSelect]);\n  var handleSelectedClick = useCallback(function () {\n    onSelectedClick();\n    setTimeout(function () {\n      if (ref && ref.current) {\n        ref.current.select();\n        ref.current.focus();\n      }\n    }, 0);\n  }, [ref, onSelectedClick]);\n\n  if (selected) {\n    return /*#__PURE__*/React.createElement(_StyledButtonBase, {\n      onClick: handleSelectedClick,\n      ref: selectedRef,\n      focusRingRadius: RADIUS,\n      focusRingSpacing: 1,\n      _css: theme.surface,\n      _css2: theme.border,\n      _css3: selectedButtonStyles\n    }, renderSelected(selected));\n  }\n\n  return /*#__PURE__*/React.createElement(AutoComplete, {\n    itemButtonStyles: itemButtonStyles,\n    items: items,\n    onChange: onChange,\n    onSelect: handleSelect,\n    placeholder: placeholder,\n    ref: ref,\n    renderItem: renderItem,\n    required: required,\n    value: value,\n    wide: wide\n  });\n}\n\nAutoCompleteSelected.propTypes = {\n  forwardedRef: PropTypes.object,\n  itemButtonStyles: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSelectedClick: PropTypes.func,\n  placeholder: PropTypes.string,\n  renderItem: PropTypes.func,\n  renderSelected: PropTypes.func,\n  required: PropTypes.bool,\n  selected: PropTypes.object,\n  selectedButtonStyles: PropTypes.string,\n  value: PropTypes.string,\n  wide: PropTypes.bool\n};\nvar AutoCompleteSelectedMemo = React.memo(AutoCompleteSelected);\nvar AutoCompleteSelected$1 = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(AutoCompleteSelectedMemo, _extends({}, props, {\n    forwardedRef: ref\n  }));\n});\nexport default AutoCompleteSelected$1;","map":{"version":3,"sources":["../../src/components/AutoComplete/AutoCompleteSelected.js"],"names":["forwardedRef","itemButtonStyles","items","onChange","onSelect","onSelectedClick","noop","placeholder","renderItem","required","renderSelected","identity","selected","selectedButtonStyles","value","wide","theme","useTheme","ref","selectedRef","useRef","handleSelect","useCallback","setTimeout","handleSelectedClick","AutoCompleteSelected","PropTypes","bool","AutoCompleteSelectedMemo","React"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { RADIUS } from '../../style'\nimport { useTheme } from '../../theme'\nimport { identity, noop } from '../../utils'\nimport ButtonBase from '../ButtonBase/ButtonBase'\nimport AutoComplete from './AutoComplete'\n\nfunction AutoCompleteSelected({\n  forwardedRef,\n  itemButtonStyles,\n  items,\n  onChange,\n  onSelect,\n  onSelectedClick = noop,\n  placeholder,\n  renderItem,\n  required,\n  renderSelected = identity,\n  selected,\n  selectedButtonStyles = '',\n  value,\n  wide,\n}) {\n  const theme = useTheme()\n\n  const ref = forwardedRef\n  const selectedRef = useRef()\n\n  const handleSelect = useCallback(\n    selected => {\n      onSelect(selected)\n      setTimeout(() => {\n        selectedRef.current.focus()\n      }, 0)\n    },\n    [onSelect]\n  )\n  const handleSelectedClick = useCallback(() => {\n    onSelectedClick()\n    setTimeout(() => {\n      if (ref && ref.current) {\n        ref.current.select()\n        ref.current.focus()\n      }\n    }, 0)\n  }, [ref, onSelectedClick])\n\n  if (selected) {\n    return (\n      <ButtonBase\n        onClick={handleSelectedClick}\n        ref={selectedRef}\n        focusRingRadius={RADIUS}\n        focusRingSpacing={1}\n        css={`\n          height: 40px;\n          width: 100%;\n          text-align: left;\n          background: ${theme.surface};\n          cursor: pointer;\n          border: 1px solid ${theme.border};\n          padding: 4px 8px;\n          ${selectedButtonStyles};\n        `}\n      >\n        {renderSelected(selected)}\n      </ButtonBase>\n    )\n  }\n\n  return (\n    <AutoComplete\n      itemButtonStyles={itemButtonStyles}\n      items={items}\n      onChange={onChange}\n      onSelect={handleSelect}\n      placeholder={placeholder}\n      ref={ref}\n      renderItem={renderItem}\n      required={required}\n      value={value}\n      wide={wide}\n    />\n  )\n}\n\nAutoCompleteSelected.propTypes = {\n  forwardedRef: PropTypes.object,\n  itemButtonStyles: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSelectedClick: PropTypes.func,\n  placeholder: PropTypes.string,\n  renderItem: PropTypes.func,\n  renderSelected: PropTypes.func,\n  required: PropTypes.bool,\n  selected: PropTypes.object,\n  selectedButtonStyles: PropTypes.string,\n  value: PropTypes.string,\n  wide: PropTypes.bool,\n}\n\nconst AutoCompleteSelectedMemo = React.memo(AutoCompleteSelected)\n\nexport default React.forwardRef((props, ref) => (\n  <AutoCompleteSelectedMemo {...props} forwardedRef={ref} />\n))\n"]},"metadata":{},"sourceType":"module"}