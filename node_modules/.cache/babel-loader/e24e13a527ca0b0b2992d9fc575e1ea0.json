{"ast":null,"code":"var _jsxFileName = \"/Users/J/crypto/dashboard/src/components/Tools/index.tsx\";\nimport { Button, Layout, useTheme } from '@aragon/ui';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TreasuryAddress } from '../../constants/contracts';\nimport { QSD, QSDS, UNI } from '../../constants/tokens';\nimport { epochformattedRemaining } from '../../utils/calculation';\nimport { getBalanceBonded, getBalanceOfStaged, getDaoIsBootstrapping, getEpoch, getExpansionAmount, getInstantaneousQSDPrice, getLPBondedLiquidity, getLPStagedLiquidity, getPoolBalanceOfBonded, getPoolBalanceOfStaged, getPoolTotalBonded, getPoolTotalStaged, getTokenBalance, getTokenTotalSupply, getTotalBonded, getTotalStaged, getTWAPPrice, getUserLPBonded, getUserLPStaged, getUserLPWallet } from '../../utils/infura';\nimport { formatBN, toTokenUnitsBN } from '../../utils/number';\nimport { getPoolBondingAddress, getPoolLPAddress } from '../../utils/pool';\nimport { advance } from '../../utils/web3';\nimport { Row, Section, Tile, TopBorderSection } from '../common';\n\nfunction Tools({\n  user\n}) {\n  const theme = useTheme();\n  const {\n    override\n  } = useParams();\n\n  if (override) {\n    user = override;\n  }\n\n  const [daoEpoch, setDaoEpoch] = useState(0);\n  const [estimatedEpoch, setEstimatedEpoch] = useState(0);\n  const [nextEpochIn, setNextEpochIn] = useState('00:00:00');\n  const [totalSupply, setTotalSupply] = useState(null);\n  const [qsdPrice, setQSDPrice] = useState(null);\n  const [twapPrice, setTwapPrice] = useState(null);\n  const [expansionAmount, setExpansionAmount] = useState(null);\n  const [treasuryQSDAmount, setTreasuryQSDAmount] = useState(null);\n  const [qsdBondedLiquidity, setQSDBondedLiquidity] = useState(null);\n  const [daiBondedLiquidity, setDAIBondedLiquidity] = useState(null);\n  const [qsdStagedLiquidity, setQSDStagedLiquidity] = useState(null);\n  const [daiStagedLiquidity, setDAIStagedLiquidity] = useState(null);\n  const [daoBonded, setDaoBonded] = useState(null);\n  const [daoStaged, setDaoStaged] = useState(null);\n  const [lpBonded, setLPBonded] = useState(null);\n  const [lpStaged, setLPStaged] = useState(null);\n  const [userLpBonded, setUserLpBonded] = useState(null);\n  const [userLpStaged, setUserLpStaged] = useState(null);\n  const [userDaoBonded, setUserDaoBonded] = useState(null);\n  const [userDaoStaged, setUserDaoStaged] = useState(null);\n  const [userQsdBal, setUserQsdBal] = useState(null);\n  const [userUniBal, setUserUniBal] = useState(null);\n  const [userQsdWalletLiquidity, setUserQSDWalletLiquidity] = useState(null);\n  const [userDaiWalletLiquidity, setUserDAIWalletLiquidity] = useState(null);\n  const [userQsdBondedLiquidity, setUserQSDBondedLiquidity] = useState(null);\n  const [userDaiBondedLiquidity, setUserDAIBondedLiquidity] = useState(null);\n  const [userQsdStagedLiquidity, setUserQSDStagedLiquidity] = useState(null);\n  const [userDaiStagedLiquidity, setUserDAIStagedLiquidity] = useState(null);\n  useEffect(() => {\n    const f = async () => {\n      const poolLP = await getPoolLPAddress();\n      const poolBonding = await getPoolBondingAddress();\n      const [spot, twap, supply, bondedLiquidity, stagedLiquidity, lpBonded, lpStaged, daoBonded, daoStaged, bondingBonded, bondingStaged, expansionAmount, bootstrapping, daoE, treasuryQSD] = await Promise.all([getInstantaneousQSDPrice(), getTWAPPrice(), getTokenTotalSupply(QSD.addr), getLPBondedLiquidity(), getLPStagedLiquidity(), getPoolTotalBonded(poolLP), getPoolTotalStaged(poolLP), getTotalBonded(QSDS.addr), getTotalStaged(QSDS.addr), getPoolTotalBonded(poolBonding), getPoolTotalStaged(poolBonding), getExpansionAmount(), getDaoIsBootstrapping(), getEpoch(QSDS.addr), getTokenBalance(QSD.addr, TreasuryAddress)]);\n      setTwapPrice(twap);\n      setTotalSupply(toTokenUnitsBN(supply, 18));\n      setQSDPrice(toTokenUnitsBN(spot, 18));\n      setQSDStagedLiquidity(stagedLiquidity.qsd);\n      setDAIStagedLiquidity(stagedLiquidity.dai);\n      setQSDBondedLiquidity(bondedLiquidity.qsd);\n      setDAIBondedLiquidity(bondedLiquidity.dai);\n      setLPBonded(toTokenUnitsBN(lpBonded, 18));\n      setLPStaged(toTokenUnitsBN(lpStaged, 18));\n      setDaoEpoch(parseInt(daoE, 10));\n      setTreasuryQSDAmount(toTokenUnitsBN(treasuryQSD, QSD.decimals)); // If is bootstrapping, then bonding will be referencing dao\n      // otherwise it'll be referencing bonding\n\n      if (bootstrapping) {\n        setDaoBonded(toTokenUnitsBN(daoBonded, 18));\n        setDaoStaged(toTokenUnitsBN(daoStaged, 18));\n      } else {\n        setDaoBonded(toTokenUnitsBN(bondingBonded, 18));\n        setDaoStaged(toTokenUnitsBN(bondingStaged, 18));\n      }\n\n      setExpansionAmount(expansionAmount);\n    };\n\n    const g = async () => {\n      if (!user) return;\n      const poolLP = await getPoolLPAddress();\n      const [userQSDBal, userUniBal, userLpBonded, userLpStaged, userDaoBonded, userDaoStaged, walletLiquidity, stagedLiquidity, bondedLiquidity] = await Promise.all([getTokenBalance(QSD.addr, user), getTokenBalance(UNI.addr, user), getPoolBalanceOfBonded(poolLP, user), getPoolBalanceOfStaged(poolLP, user), getBalanceBonded(QSDS.addr, user), getBalanceOfStaged(QSDS.addr, user), getUserLPWallet(user), getUserLPStaged(user), getUserLPBonded(user)]);\n      setUserQsdBal(toTokenUnitsBN(userQSDBal, 18));\n      setUserUniBal(toTokenUnitsBN(userUniBal, 18));\n      setUserLpBonded(toTokenUnitsBN(userLpBonded, 18));\n      setUserLpStaged(toTokenUnitsBN(userLpStaged, 18));\n      setUserDaoBonded(toTokenUnitsBN(userDaoBonded, 18));\n      setUserDaoStaged(toTokenUnitsBN(userDaoStaged, 18));\n      setUserQSDWalletLiquidity(walletLiquidity.qsd);\n      setUserDAIWalletLiquidity(walletLiquidity.dai);\n      setUserQSDStagedLiquidity(stagedLiquidity.qsd);\n      setUserDAIStagedLiquidity(stagedLiquidity.dai);\n      setUserQSDBondedLiquidity(bondedLiquidity.qsd);\n      setUserDAIBondedLiquidity(bondedLiquidity.dai);\n    };\n\n    async function updateEpoch() {\n      const e = epochformattedRemaining();\n      setEstimatedEpoch(parseInt(e.split('-')[0], 10));\n      setNextEpochIn(e.split('-')[1]);\n    }\n\n    setInterval(updateEpoch, 1000);\n    f();\n    g();\n  }, [user]);\n\n  const toFloat = a => {\n    return parseFloat(formatBN(a, 2).split(',').join(''));\n  };\n\n  let lpBondedPercentage = '...';\n  let lpStagedPercentage = '...';\n  let daoBondedPercentage = '...';\n  let daoStagedPercentage = '...';\n  let qsdMarketCap = '...';\n  let daoAPR = '...';\n  let daoExpansionYield = '...';\n  let lpExpansionYield = '...';\n  let lpAPR = '...';\n  let qsdBondedPrice = '$...';\n  let qsdStagedPrice = '$...';\n  let lpBondedPrice = '$...';\n  let lpStagedPrice = '$...';\n  let userQSDWalletPrice = '$0';\n  let userQSDBondedPrice = '$0';\n  let userQSDStagedPrice = '$0';\n  let userLPWalletPrice = '$0';\n  let userLPBondedPrice = '$0';\n  let userLPStagedPrice = '$0';\n  let treasuryUSDValue = '$0'; // Calculate prices\n\n  if (qsdPrice && treasuryQSDAmount) {\n    const totalDAI = toFloat(treasuryQSDAmount) * toFloat(qsdPrice);\n    treasuryUSDValue = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && qsdStagedLiquidity && daiStagedLiquidity) {\n    const totalDAI = qsdStagedLiquidity * toFloat(qsdPrice) + daiStagedLiquidity;\n    lpStagedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && qsdBondedLiquidity && daiBondedLiquidity) {\n    const totalDAI = qsdBondedLiquidity * toFloat(qsdPrice) + daiBondedLiquidity;\n    lpBondedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && daoBonded) {\n    const totalDAI = toFloat(daoBonded) * toFloat(qsdPrice);\n    qsdBondedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && daoStaged) {\n    const totalDAI = toFloat(daoStaged) * toFloat(qsdPrice);\n    qsdStagedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userQsdWalletLiquidity && userDaiWalletLiquidity) {\n    const totalDAI = userQsdWalletLiquidity * toFloat(qsdPrice) + userDaiWalletLiquidity;\n    userLPWalletPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userQsdStagedLiquidity && userDaiStagedLiquidity) {\n    const totalDAI = userQsdStagedLiquidity * toFloat(qsdPrice) + userDaiStagedLiquidity;\n    userLPStagedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userQsdBondedLiquidity && userDaiBondedLiquidity) {\n    const totalDAI = userQsdBondedLiquidity * toFloat(qsdPrice) + userDaiBondedLiquidity;\n    userLPBondedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userQsdBal) {\n    const totalDAI = toFloat(userQsdBal) * toFloat(qsdPrice);\n    userQSDWalletPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userDaoBonded) {\n    const totalDAI = toFloat(userDaoBonded) * toFloat(qsdPrice);\n    userQSDBondedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userDaoStaged) {\n    const totalDAI = toFloat(userDaoStaged) * toFloat(qsdPrice);\n    userQSDStagedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  } // Calculate LP APR (4 hrs)\n\n\n  if (qsdPrice && qsdBondedLiquidity && daiBondedLiquidity && expansionAmount) {\n    const totalDAI = qsdBondedLiquidity * toFloat(qsdPrice) + daiBondedLiquidity;\n    const daiToAdd = expansionAmount / 2 * toFloat(qsdPrice);\n    const lpYield = daiToAdd / totalDAI * 100;\n    lpExpansionYield = Intl.NumberFormat('en', {\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    }).format(lpYield) + '%';\n    lpAPR = Intl.NumberFormat('en', {\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    }).format(lpYield * 6 * 365) + '%';\n  } // Calculate DAO APR (4 hrs)\n\n\n  if (qsdPrice && daoBonded && expansionAmount) {\n    const totalQSD = toFloat(daoBonded);\n    const qsdToAdd = expansionAmount / 2;\n    const daoYield = qsdToAdd / totalQSD * 100;\n    daoExpansionYield = Intl.NumberFormat('en', {\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    }).format(daoYield) + '%';\n    daoAPR = Intl.NumberFormat('en', {\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    }).format(daoYield * 6 * 365) + '%';\n  }\n\n  if (qsdPrice && qsdBondedLiquidity) if (lpBonded && lpStaged) {\n    const lpBondedF = toFloat(lpBonded);\n    const lpStagedF = toFloat(lpStaged);\n    const total = lpBondedF + lpStagedF;\n\n    if (total > 0) {\n      lpBondedPercentage = (lpBondedF / total * 100).toFixed(2) + '%';\n      lpStagedPercentage = (lpStagedF / total * 100).toFixed(2) + '%';\n    }\n  }\n\n  if (daoBonded && daoStaged) {\n    const daoBondedF = toFloat(daoBonded);\n    const daoStagedF = toFloat(daoStaged);\n    const total = daoBondedF + daoStagedF;\n\n    if (total > 0) {\n      daoBondedPercentage = (daoBondedF / total * 100).toFixed(2) + '%';\n      daoStagedPercentage = (daoStagedF / total * 100).toFixed(2) + '%';\n    }\n  }\n\n  if (qsdPrice && totalSupply) {\n    qsdMarketCap = Intl.NumberFormat().format(toFloat(qsdPrice) * toFloat(totalSupply));\n  }\n\n  const BorderedSection = props => /*#__PURE__*/React.createElement(Section, Object.assign({\n    style: {\n      borderBottom: `1px solid ${theme.border}`,\n      paddingBottom: 56,\n      marginBottom: -24\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 5\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    line1: \"Next Epoch:\",\n    line2: expansionAmount && expansionAmount > 0 ? `Total supply will increase by ${expansionAmount.toFixed(2)} QSD` : 'No expansion rewards this epoch',\n    line3: expansionAmount && expansionAmount > 0 ? `Yielding ${lpExpansionYield} on LP TVL (${lpAPR} APR) and ${daoExpansionYield} to Bonded QSD (${daoAPR} APR)` : 'QSG will be allocated to QSD stakers',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BorderedSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Epoch (Real-time)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 11\n    }\n  }, estimatedEpoch), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Epoch (Dao)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 11\n    }\n  }, daoEpoch), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Next Epoch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 11\n    }\n  }, nextEpochIn), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Treasury\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, treasuryQSDAmount ? formatBN(treasuryQSDAmount, 2) + ' QSD' : '... QSD', ' ', \"(\", treasuryUSDValue, \")\"))), /*#__PURE__*/React.createElement(BorderedSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"LP Yield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }\n  }, lpExpansionYield), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"LP APR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 11\n    }\n  }, lpAPR), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"QSD Yield\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }\n  }, daoExpansionYield), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"QSD APR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 11\n    }\n  }, daoAPR))), /*#__PURE__*/React.createElement(BorderedSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Spot Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, qsdPrice ? '$' + formatBN(qsdPrice, 2) : '...'), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"TWAP Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 11\n    }\n  }, twapPrice ? '$' + twapPrice.toFixed(2) : '...'), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Total Supply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 11\n    }\n  }, totalSupply ? Intl.NumberFormat().format(toFloat(totalSupply)) + ' QSD' : '...'), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Market Cap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  }, \"$\", qsdMarketCap))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"LP Bonded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 11\n    }\n  }, lpBondedPercentage, \" (\", lpBondedPrice, \")\"), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"LP Staged\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }, lpStagedPercentage, \" (\", lpStagedPrice, \")\"), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"QSD Bonded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 11\n    }\n  }, daoBondedPercentage, \" (\", qsdBondedPrice, \")\"), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"QSD Staged\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 11\n    }\n  }, daoStagedPercentage, \" (\", qsdStagedPrice, \")\"))), /*#__PURE__*/React.createElement(TopBorderSection, {\n    title: \"User\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BorderedSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"QSD Wallet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }\n  }, userQsdBal ? formatBN(userQsdBal, 2) + ' QSD' : '0', \" (\", userQSDWalletPrice, \")\"), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"QSD Staged\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }, userDaoStaged ? formatBN(userDaoStaged, 2) + ' QSD' : '0', \" (\", userQSDStagedPrice, \")\"), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"QSD Bonded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, userDaoBonded ? formatBN(userDaoBonded, 2) + ' QSD' : '0', \" (\", userQSDBondedPrice, \")\"))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"UNI-V2 Wallet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }\n  }, userUniBal ? formatBN(userUniBal, 2) + ' UNI' : '0', \" (\", userLPWalletPrice, \")\"), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"LP Staged\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }\n  }, userLpStaged ? formatBN(userLpStaged, 2) + ' UNI' : '0', \" (\", userLPStagedPrice, \")\"), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"LP Bonded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, userLpBonded ? formatBN(userLpBonded, 2) + ' UNI' : '0', \" (\", userLPBondedPrice, \")\"))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      advance(QSDS.addr);\n    },\n    disabled: !user && daoEpoch < estimatedEpoch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 13\n    }\n  }, \"Advance Epoch\")))));\n}\n\nexport default Tools;\n\nconst InfoBox = ({\n  title,\n  children\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 527,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    fontSize: 24,\n    marginBottom: 8,\n    opacity: 0.4\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 528,\n    columnNumber: 5\n  }\n}, title), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    fontSize: 20\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 529,\n    columnNumber: 5\n  }\n}, children));","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/Tools/index.tsx"],"names":["Button","Layout","useTheme","React","useEffect","useState","useParams","TreasuryAddress","QSD","QSDS","UNI","epochformattedRemaining","getBalanceBonded","getBalanceOfStaged","getDaoIsBootstrapping","getEpoch","getExpansionAmount","getInstantaneousQSDPrice","getLPBondedLiquidity","getLPStagedLiquidity","getPoolBalanceOfBonded","getPoolBalanceOfStaged","getPoolTotalBonded","getPoolTotalStaged","getTokenBalance","getTokenTotalSupply","getTotalBonded","getTotalStaged","getTWAPPrice","getUserLPBonded","getUserLPStaged","getUserLPWallet","formatBN","toTokenUnitsBN","getPoolBondingAddress","getPoolLPAddress","advance","Row","Section","Tile","TopBorderSection","Tools","user","theme","override","daoEpoch","setDaoEpoch","estimatedEpoch","setEstimatedEpoch","nextEpochIn","setNextEpochIn","totalSupply","setTotalSupply","qsdPrice","setQSDPrice","twapPrice","setTwapPrice","expansionAmount","setExpansionAmount","treasuryQSDAmount","setTreasuryQSDAmount","qsdBondedLiquidity","setQSDBondedLiquidity","daiBondedLiquidity","setDAIBondedLiquidity","qsdStagedLiquidity","setQSDStagedLiquidity","daiStagedLiquidity","setDAIStagedLiquidity","daoBonded","setDaoBonded","daoStaged","setDaoStaged","lpBonded","setLPBonded","lpStaged","setLPStaged","userLpBonded","setUserLpBonded","userLpStaged","setUserLpStaged","userDaoBonded","setUserDaoBonded","userDaoStaged","setUserDaoStaged","userQsdBal","setUserQsdBal","userUniBal","setUserUniBal","userQsdWalletLiquidity","setUserQSDWalletLiquidity","userDaiWalletLiquidity","setUserDAIWalletLiquidity","userQsdBondedLiquidity","setUserQSDBondedLiquidity","userDaiBondedLiquidity","setUserDAIBondedLiquidity","userQsdStagedLiquidity","setUserQSDStagedLiquidity","userDaiStagedLiquidity","setUserDAIStagedLiquidity","f","poolLP","poolBonding","spot","twap","supply","bondedLiquidity","stagedLiquidity","bondingBonded","bondingStaged","bootstrapping","daoE","treasuryQSD","Promise","all","addr","qsd","dai","parseInt","decimals","g","userQSDBal","walletLiquidity","updateEpoch","e","split","setInterval","toFloat","a","parseFloat","join","lpBondedPercentage","lpStagedPercentage","daoBondedPercentage","daoStagedPercentage","qsdMarketCap","daoAPR","daoExpansionYield","lpExpansionYield","lpAPR","qsdBondedPrice","qsdStagedPrice","lpBondedPrice","lpStagedPrice","userQSDWalletPrice","userQSDBondedPrice","userQSDStagedPrice","userLPWalletPrice","userLPBondedPrice","userLPStagedPrice","treasuryUSDValue","totalDAI","Intl","NumberFormat","format","daiToAdd","lpYield","maximumFractionDigits","minimumFractionDigits","totalQSD","qsdToAdd","daoYield","lpBondedF","lpStagedF","total","toFixed","daoBondedF","daoStagedF","BorderedSection","props","borderBottom","border","paddingBottom","marginBottom","InfoBox","title","children","fontSize","opacity"],"mappings":"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","sourcesContent":["import { Button, Layout, useTheme } from '@aragon/ui';\nimport BigNumber from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TreasuryAddress } from '../../constants/contracts';\nimport { QSD, QSDS, UNI } from '../../constants/tokens';\nimport { epochformattedRemaining } from '../../utils/calculation';\nimport {\n  getBalanceBonded,\n  getBalanceOfStaged,\n  getDaoIsBootstrapping,\n  getEpoch,\n  getExpansionAmount,\n  getInstantaneousQSDPrice,\n  getLPBondedLiquidity,\n  getLPStagedLiquidity,\n  getPoolBalanceOfBonded,\n  getPoolBalanceOfStaged,\n  getPoolTotalBonded,\n  getPoolTotalStaged,\n  getTokenBalance,\n  getTokenTotalSupply,\n  getTotalBonded,\n  getTotalStaged,\n  getTWAPPrice,\n  getUserLPBonded,\n  getUserLPStaged,\n  getUserLPWallet,\n} from '../../utils/infura';\nimport { formatBN, toTokenUnitsBN } from '../../utils/number';\nimport { getPoolBondingAddress, getPoolLPAddress } from '../../utils/pool';\nimport { advance } from '../../utils/web3';\nimport { Row, Section, Tile, TopBorderSection } from '../common';\nimport { SectionProps } from '../common/Section';\n\nfunction Tools({ user }: { user: string }) {\n  const theme = useTheme();\n\n  const { override } = useParams();\n  if (override) {\n    user = override;\n  }\n\n  const [daoEpoch, setDaoEpoch] = useState(0);\n  const [estimatedEpoch, setEstimatedEpoch] = useState(0);\n  const [nextEpochIn, setNextEpochIn] = useState('00:00:00');\n  const [totalSupply, setTotalSupply] = useState<BigNumber | null>(null);\n  const [qsdPrice, setQSDPrice] = useState<BigNumber | null>(null);\n  const [twapPrice, setTwapPrice] = useState<null | number>(null);\n  const [expansionAmount, setExpansionAmount] = useState<null | number>(null);\n\n  const [treasuryQSDAmount, setTreasuryQSDAmount] = useState<null | BigNumber>(\n    null\n  );\n\n  const [qsdBondedLiquidity, setQSDBondedLiquidity] = useState<number | null>(\n    null\n  );\n  const [daiBondedLiquidity, setDAIBondedLiquidity] = useState<number | null>(\n    null\n  );\n\n  const [qsdStagedLiquidity, setQSDStagedLiquidity] = useState<number | null>(\n    null\n  );\n  const [daiStagedLiquidity, setDAIStagedLiquidity] = useState<number | null>(\n    null\n  );\n\n  const [daoBonded, setDaoBonded] = useState<BigNumber | null>(null);\n  const [daoStaged, setDaoStaged] = useState<BigNumber | null>(null);\n  const [lpBonded, setLPBonded] = useState<BigNumber | null>(null);\n  const [lpStaged, setLPStaged] = useState<BigNumber | null>(null);\n  const [userLpBonded, setUserLpBonded] = useState<BigNumber | null>(null);\n  const [userLpStaged, setUserLpStaged] = useState<BigNumber | null>(null);\n  const [userDaoBonded, setUserDaoBonded] = useState<BigNumber | null>(null);\n  const [userDaoStaged, setUserDaoStaged] = useState<BigNumber | null>(null);\n  const [userQsdBal, setUserQsdBal] = useState<BigNumber | null>(null);\n  const [userUniBal, setUserUniBal] = useState<BigNumber | null>(null);\n\n  const [userQsdWalletLiquidity, setUserQSDWalletLiquidity] = useState<\n    number | null\n  >(null);\n  const [userDaiWalletLiquidity, setUserDAIWalletLiquidity] = useState<\n    number | null\n  >(null);\n\n  const [userQsdBondedLiquidity, setUserQSDBondedLiquidity] = useState<\n    number | null\n  >(null);\n  const [userDaiBondedLiquidity, setUserDAIBondedLiquidity] = useState<\n    number | null\n  >(null);\n\n  const [userQsdStagedLiquidity, setUserQSDStagedLiquidity] = useState<\n    number | null\n  >(null);\n  const [userDaiStagedLiquidity, setUserDAIStagedLiquidity] = useState<\n    number | null\n  >(null);\n\n  useEffect(() => {\n    const f = async () => {\n      const poolLP = await getPoolLPAddress();\n      const poolBonding = await getPoolBondingAddress();\n\n      const [\n        spot,\n        twap,\n        supply,\n        bondedLiquidity,\n        stagedLiquidity,\n        lpBonded,\n        lpStaged,\n        daoBonded,\n        daoStaged,\n        bondingBonded,\n        bondingStaged,\n        expansionAmount,\n        bootstrapping,\n        daoE,\n        treasuryQSD,\n      ] = await Promise.all([\n        getInstantaneousQSDPrice(),\n        getTWAPPrice(),\n        getTokenTotalSupply(QSD.addr),\n        getLPBondedLiquidity(),\n        getLPStagedLiquidity(),\n        getPoolTotalBonded(poolLP),\n        getPoolTotalStaged(poolLP),\n        getTotalBonded(QSDS.addr),\n        getTotalStaged(QSDS.addr),\n        getPoolTotalBonded(poolBonding),\n        getPoolTotalStaged(poolBonding),\n        getExpansionAmount(),\n        getDaoIsBootstrapping(),\n        getEpoch(QSDS.addr),\n        getTokenBalance(QSD.addr, TreasuryAddress),\n      ]);\n\n      setTwapPrice(twap);\n      setTotalSupply(toTokenUnitsBN(supply, 18));\n      setQSDPrice(toTokenUnitsBN(spot, 18));\n      setQSDStagedLiquidity(stagedLiquidity.qsd);\n      setDAIStagedLiquidity(stagedLiquidity.dai);\n      setQSDBondedLiquidity(bondedLiquidity.qsd);\n      setDAIBondedLiquidity(bondedLiquidity.dai);\n      setLPBonded(toTokenUnitsBN(lpBonded, 18));\n      setLPStaged(toTokenUnitsBN(lpStaged, 18));\n      setDaoEpoch(parseInt(daoE, 10));\n      setTreasuryQSDAmount(toTokenUnitsBN(treasuryQSD, QSD.decimals));\n\n      // If is bootstrapping, then bonding will be referencing dao\n      // otherwise it'll be referencing bonding\n      if (bootstrapping) {\n        setDaoBonded(toTokenUnitsBN(daoBonded, 18));\n        setDaoStaged(toTokenUnitsBN(daoStaged, 18));\n      } else {\n        setDaoBonded(toTokenUnitsBN(bondingBonded, 18));\n        setDaoStaged(toTokenUnitsBN(bondingStaged, 18));\n      }\n\n      setExpansionAmount(expansionAmount);\n    };\n\n    const g = async () => {\n      if (!user) return;\n\n      const poolLP = await getPoolLPAddress();\n\n      const [\n        userQSDBal,\n        userUniBal,\n        userLpBonded,\n        userLpStaged,\n        userDaoBonded,\n        userDaoStaged,\n        walletLiquidity,\n        stagedLiquidity,\n        bondedLiquidity,\n      ] = await Promise.all([\n        getTokenBalance(QSD.addr, user),\n        getTokenBalance(UNI.addr, user),\n        getPoolBalanceOfBonded(poolLP, user),\n        getPoolBalanceOfStaged(poolLP, user),\n        getBalanceBonded(QSDS.addr, user),\n        getBalanceOfStaged(QSDS.addr, user),\n        getUserLPWallet(user),\n        getUserLPStaged(user),\n        getUserLPBonded(user),\n      ]);\n\n      setUserQsdBal(toTokenUnitsBN(userQSDBal, 18));\n      setUserUniBal(toTokenUnitsBN(userUniBal, 18));\n      setUserLpBonded(toTokenUnitsBN(userLpBonded, 18));\n      setUserLpStaged(toTokenUnitsBN(userLpStaged, 18));\n      setUserDaoBonded(toTokenUnitsBN(userDaoBonded, 18));\n      setUserDaoStaged(toTokenUnitsBN(userDaoStaged, 18));\n\n      setUserQSDWalletLiquidity(walletLiquidity.qsd);\n      setUserDAIWalletLiquidity(walletLiquidity.dai);\n\n      setUserQSDStagedLiquidity(stagedLiquidity.qsd);\n      setUserDAIStagedLiquidity(stagedLiquidity.dai);\n\n      setUserQSDBondedLiquidity(bondedLiquidity.qsd);\n      setUserDAIBondedLiquidity(bondedLiquidity.dai);\n    };\n\n    async function updateEpoch() {\n      const e = epochformattedRemaining();\n\n      setEstimatedEpoch(parseInt(e.split('-')[0], 10));\n      setNextEpochIn(e.split('-')[1]);\n    }\n\n    setInterval(updateEpoch, 1000);\n\n    f();\n    g();\n  }, [user]);\n\n  const toFloat = (a: BigNumber): number => {\n    return parseFloat(formatBN(a, 2).split(',').join(''));\n  };\n\n  let lpBondedPercentage = '...';\n  let lpStagedPercentage = '...';\n  let daoBondedPercentage = '...';\n  let daoStagedPercentage = '...';\n  let qsdMarketCap = '...';\n  let daoAPR = '...';\n  let daoExpansionYield = '...';\n  let lpExpansionYield = '...';\n  let lpAPR = '...';\n\n  let qsdBondedPrice = '$...';\n  let qsdStagedPrice = '$...';\n  let lpBondedPrice = '$...';\n  let lpStagedPrice = '$...';\n\n  let userQSDWalletPrice = '$0';\n  let userQSDBondedPrice = '$0';\n  let userQSDStagedPrice = '$0';\n\n  let userLPWalletPrice = '$0';\n  let userLPBondedPrice = '$0';\n  let userLPStagedPrice = '$0';\n\n  let treasuryUSDValue = '$0';\n\n  // Calculate prices\n  if (qsdPrice && treasuryQSDAmount) {\n    const totalDAI = toFloat(treasuryQSDAmount) * toFloat(qsdPrice);\n\n    treasuryUSDValue = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && qsdStagedLiquidity && daiStagedLiquidity) {\n    const totalDAI =\n      qsdStagedLiquidity * toFloat(qsdPrice) + daiStagedLiquidity;\n    lpStagedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && qsdBondedLiquidity && daiBondedLiquidity) {\n    const totalDAI =\n      qsdBondedLiquidity * toFloat(qsdPrice) + daiBondedLiquidity;\n    lpBondedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && daoBonded) {\n    const totalDAI = toFloat(daoBonded) * toFloat(qsdPrice);\n    qsdBondedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && daoStaged) {\n    const totalDAI = toFloat(daoStaged) * toFloat(qsdPrice);\n    qsdStagedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userQsdWalletLiquidity && userDaiWalletLiquidity) {\n    const totalDAI =\n      userQsdWalletLiquidity * toFloat(qsdPrice) + userDaiWalletLiquidity;\n\n    userLPWalletPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userQsdStagedLiquidity && userDaiStagedLiquidity) {\n    const totalDAI =\n      userQsdStagedLiquidity * toFloat(qsdPrice) + userDaiStagedLiquidity;\n\n    userLPStagedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userQsdBondedLiquidity && userDaiBondedLiquidity) {\n    const totalDAI =\n      userQsdBondedLiquidity * toFloat(qsdPrice) + userDaiBondedLiquidity;\n\n    userLPBondedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userQsdBal) {\n    const totalDAI = toFloat(userQsdBal) * toFloat(qsdPrice);\n\n    userQSDWalletPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userDaoBonded) {\n    const totalDAI = toFloat(userDaoBonded) * toFloat(qsdPrice);\n\n    userQSDBondedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  if (qsdPrice && userDaoStaged) {\n    const totalDAI = toFloat(userDaoStaged) * toFloat(qsdPrice);\n\n    userQSDStagedPrice = '$' + Intl.NumberFormat().format(totalDAI);\n  }\n\n  // Calculate LP APR (4 hrs)\n  if (qsdPrice && qsdBondedLiquidity && daiBondedLiquidity && expansionAmount) {\n    const totalDAI =\n      qsdBondedLiquidity * toFloat(qsdPrice) + daiBondedLiquidity;\n    const daiToAdd = (expansionAmount / 2) * toFloat(qsdPrice);\n\n    const lpYield = (daiToAdd / totalDAI) * 100;\n\n    lpExpansionYield =\n      Intl.NumberFormat('en', {\n        maximumFractionDigits: 0,\n        minimumFractionDigits: 0,\n      }).format(lpYield) + '%';\n    lpAPR = Intl.NumberFormat('en', {\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    }).format(lpYield * 6 * 365) + '%';\n  }\n\n  // Calculate DAO APR (4 hrs)\n  if (qsdPrice && daoBonded && expansionAmount) {\n    const totalQSD = toFloat(daoBonded);\n    const qsdToAdd = expansionAmount / 2;\n\n    const daoYield = (qsdToAdd / totalQSD) * 100;\n\n    daoExpansionYield = Intl.NumberFormat('en', {\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    }).format(daoYield) + '%';\n    daoAPR = Intl.NumberFormat('en', {\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0,\n    }).format(daoYield * 6 * 365) + '%';\n  }\n\n  if (qsdPrice && qsdBondedLiquidity)\n    if (lpBonded && lpStaged) {\n      const lpBondedF = toFloat(lpBonded);\n      const lpStagedF = toFloat(lpStaged);\n\n      const total = lpBondedF + lpStagedF;\n\n      if (total > 0) {\n        lpBondedPercentage = ((lpBondedF / total) * 100).toFixed(2) + '%';\n        lpStagedPercentage = ((lpStagedF / total) * 100).toFixed(2) + '%';\n      }\n    }\n\n  if (daoBonded && daoStaged) {\n    const daoBondedF = toFloat(daoBonded);\n    const daoStagedF = toFloat(daoStaged);\n\n    const total = daoBondedF + daoStagedF;\n\n    if (total > 0) {\n      daoBondedPercentage = ((daoBondedF / total) * 100).toFixed(2) + '%';\n      daoStagedPercentage = ((daoStagedF / total) * 100).toFixed(2) + '%';\n    }\n  }\n\n  if (qsdPrice && totalSupply) {\n    qsdMarketCap = Intl.NumberFormat().format(\n      toFloat(qsdPrice) * toFloat(totalSupply)\n    );\n  }\n\n  const BorderedSection: React.FC<SectionProps> = (props) => (\n    <Section\n      style={{\n        borderBottom: `1px solid ${theme.border}`,\n        paddingBottom: 56,\n        marginBottom: -24,\n      }}\n      {...props}\n    />\n  );\n\n  return (\n    <Layout>\n      <Section>\n        <Tile\n          line1='Next Epoch:'\n          line2={\n            expansionAmount && expansionAmount > 0\n              ? `Total supply will increase by ${expansionAmount.toFixed(\n                  2\n                )} QSD`\n              : 'No expansion rewards this epoch'\n          }\n          line3={\n            expansionAmount && expansionAmount > 0\n              ? `Yielding ${lpExpansionYield} on LP TVL (${lpAPR} APR) and ${daoExpansionYield} to Bonded QSD (${daoAPR} APR)`\n              : 'QSG will be allocated to QSD stakers'\n          }\n        />\n      </Section>\n      <BorderedSection>\n        <Row>\n          <InfoBox title='Epoch (Real-time)'>{estimatedEpoch}</InfoBox>\n          <InfoBox title='Epoch (Dao)'>{daoEpoch}</InfoBox>\n          <InfoBox title='Next Epoch'>{nextEpochIn}</InfoBox>\n          <InfoBox title='Treasury'>\n            {treasuryQSDAmount\n              ? formatBN(treasuryQSDAmount, 2) + ' QSD'\n              : '... QSD'}{' '}\n            ({treasuryUSDValue})\n          </InfoBox>\n        </Row>\n      </BorderedSection>\n      <BorderedSection>\n        <Row>\n          <InfoBox title='LP Yield'>{lpExpansionYield}</InfoBox>\n          <InfoBox title='LP APR'>{lpAPR}</InfoBox>\n          <InfoBox title='QSD Yield'>{daoExpansionYield}</InfoBox>\n          <InfoBox title='QSD APR'>{daoAPR}</InfoBox>\n        </Row>\n      </BorderedSection>\n      <BorderedSection>\n        <Row>\n          <InfoBox title='Spot Price'>\n            {qsdPrice ? '$' + formatBN(qsdPrice, 2) : '...'}\n          </InfoBox>\n          <InfoBox title='TWAP Price'>\n            {twapPrice ? '$' + twapPrice.toFixed(2) : '...'}\n          </InfoBox>\n          <InfoBox title='Total Supply'>\n            {totalSupply\n              ? Intl.NumberFormat().format(toFloat(totalSupply)) + ' QSD'\n              : '...'}\n          </InfoBox>\n\n          <InfoBox title='Market Cap'>${qsdMarketCap}</InfoBox>\n        </Row>\n      </BorderedSection>\n      <Section>\n        <Row>\n          <InfoBox title='LP Bonded'>\n            {lpBondedPercentage} ({lpBondedPrice})\n          </InfoBox>\n          <InfoBox title='LP Staged'>\n            {lpStagedPercentage} ({lpStagedPrice})\n          </InfoBox>\n          <InfoBox title='QSD Bonded'>\n            {daoBondedPercentage} ({qsdBondedPrice})\n          </InfoBox>\n          <InfoBox title='QSD Staged'>\n            {daoStagedPercentage} ({qsdStagedPrice})\n          </InfoBox>\n        </Row>\n      </Section>\n      <TopBorderSection title='User'>\n        <BorderedSection>\n          <Row>\n            <InfoBox title='QSD Wallet'>\n              {userQsdBal ? formatBN(userQsdBal, 2) + ' QSD' : '0'} (\n              {userQSDWalletPrice})\n            </InfoBox>\n            <InfoBox title='QSD Staged'>\n              {userDaoStaged ? formatBN(userDaoStaged, 2) + ' QSD' : '0'} (\n              {userQSDStagedPrice})\n            </InfoBox>\n            <InfoBox title='QSD Bonded'>\n              {userDaoBonded ? formatBN(userDaoBonded, 2) + ' QSD' : '0'} (\n              {userQSDBondedPrice})\n            </InfoBox>\n          </Row>\n        </BorderedSection>\n        <Section>\n          <Row>\n            <InfoBox title='UNI-V2 Wallet'>\n              {userUniBal ? formatBN(userUniBal, 2) + ' UNI' : '0'} (\n              {userLPWalletPrice})\n            </InfoBox>\n            <InfoBox title='LP Staged'>\n              {userLpStaged ? formatBN(userLpStaged, 2) + ' UNI' : '0'} (\n              {userLPStagedPrice})\n            </InfoBox>\n            <InfoBox title='LP Bonded'>\n              {userLpBonded ? formatBN(userLpBonded, 2) + ' UNI' : '0'} (\n              {userLPBondedPrice})\n            </InfoBox>\n          </Row>\n        </Section>\n        <Section>\n          <Row>\n            <Button\n              onClick={() => {\n                advance(QSDS.addr);\n              }}\n              disabled={!user && daoEpoch < estimatedEpoch}\n            >\n              Advance Epoch\n            </Button>\n          </Row>\n        </Section>\n      </TopBorderSection>\n    </Layout>\n  );\n}\n\nexport default Tools;\n\ninterface InfoBoxProps extends React.ComponentProps<'div'> {\n  title: string;\n}\nconst InfoBox: React.FC<InfoBoxProps> = ({ title, children }) => (\n  <div>\n    <div style={{ fontSize: 24, marginBottom: 8, opacity: 0.4 }}>{title}</div>\n    <div style={{ fontSize: 20 }}>{children}</div>\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}