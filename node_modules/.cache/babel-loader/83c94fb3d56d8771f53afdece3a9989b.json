{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport 'styled-components';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport { GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport './text-styles.js';\nimport { o } from './index-422d37c0.js';\nvar ICON_SIZES = new Map([['large', 6 * GU], ['medium', 3 * GU], ['small', 2 * GU], ['tiny', 1.75 * GU]]); // Mapping of button size => icon size\n\nvar BUTTON_ICON_SIZES = new Map([['medium', 'medium'], ['small', 'medium'], ['mini', 'small']]);\n\nfunction useIconSize(size) {\n  var _useInside = o('Button:icon'),\n      _useInside2 = _slicedToArray(_useInside, 2),\n      insideButtonIcon = _useInside2[0],\n      buttonData = _useInside2[1]; // If no size is set on the icon, and it is inside\n  // a Button icon slot, adapt it to the size of the button.\n\n\n  var sizeName = !size && insideButtonIcon ? BUTTON_ICON_SIZES.get(buttonData.size) : size;\n  return ICON_SIZES.get(sizeName || 'medium');\n}\n\nvar IconPropTypes = {\n  size: PropTypes.oneOf(['large', 'medium', 'small', 'tiny'])\n};\nexport { IconPropTypes as I, useIconSize as u };","map":{"version":3,"sources":["../../src/icons/icon-size.js","../../src/icons/IconPropTypes.js"],"names":["ICON_SIZES","BUTTON_ICON_SIZES","insideButtonIcon","buttonData","useInside","sizeName","size","PropTypes"],"mappings":";;;;;;;;;;;;;AAGA,IAAMA,UAAU,GAAG,IAAA,GAAA,CAAQ,CACzB,CAAA,OAAA,EAAU,IADe,EACzB,CADyB,EAEzB,CAAA,QAAA,EAAW,IAFc,EAEzB,CAFyB,EAGzB,CAAA,OAAA,EAAU,IAHe,EAGzB,CAHyB,EAIzB,CAAA,MAAA,EAAS,OAJX,EAIE,CAJyB,CAAR,CAAnB,C,CAAA;;AAQA,IAAMC,iBAAiB,GAAG,IAAA,GAAA,CAAQ,CAChC,CAAA,QAAA,EADgC,QAChC,CADgC,EAEhC,CAAA,OAAA,EAFgC,QAEhC,CAFgC,EAGhC,CAAA,MAAA,EAHF,OAGE,CAHgC,CAAR,CAA1B;;AAMA,SAAA,WAAA,CAAA,IAAA,EAA2B;AAAA,MAAA,UAAA,GACcG,CAAS,CADvB,aACuB,CADvB;AAAA,MAAA,WAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAA,MAClBF,gBADkB,GAAA,WAAA,CAAA,CAAA,CAAA;AAAA,MACAC,UADA,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAIzB;;;AACA,MAAME,QAAQ,GACZ,CAAA,IAAA,IAAA,gBAAA,GAA4BJ,iBAAiB,CAAjBA,GAAAA,CAAsBE,UAAU,CAA5D,IAA4BF,CAA5B,GADF,IAAA;AAGA,SAAOD,UAAU,CAAVA,GAAAA,CAAeK,QAAQ,IAA9B,QAAOL,CAAP;AACD;;ACxBD,IAAA,aAAA,GAAe;AACbM,EAAAA,IAAI,EAAEC,SAAS,CAATA,KAAAA,CAAgB,CAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAhBA,MAAgB,CAAhBA;AADO,CAAf","sourcesContent":["import { GU } from '../style'\nimport { useInside } from 'use-inside'\n\nconst ICON_SIZES = new Map([\n  ['large', 6 * GU],\n  ['medium', 3 * GU],\n  ['small', 2 * GU],\n  ['tiny', 1.75 * GU],\n])\n\n// Mapping of button size => icon size\nconst BUTTON_ICON_SIZES = new Map([\n  ['medium', 'medium'],\n  ['small', 'medium'],\n  ['mini', 'small'],\n])\n\nfunction useIconSize(size) {\n  const [insideButtonIcon, buttonData] = useInside('Button:icon')\n\n  // If no size is set on the icon, and it is inside\n  // a Button icon slot, adapt it to the size of the button.\n  const sizeName =\n    !size && insideButtonIcon ? BUTTON_ICON_SIZES.get(buttonData.size) : size\n\n  return ICON_SIZES.get(sizeName || 'medium')\n}\n\nexport default useIconSize\n","import PropTypes from 'prop-types'\n\nexport default {\n  size: PropTypes.oneOf(['large', 'medium', 'small', 'tiny']),\n}\n"]},"metadata":{},"sourceType":"module"}