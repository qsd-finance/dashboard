{"ast":null,"code":"import './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React, { useRef, useImperativeHandle, useCallback } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport { noop } from './miscellaneous.js';\nimport { warn } from './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { RADIUS, GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport { textStyle } from './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport './index-422d37c0.js';\nimport './isObject-3c6ec07e.js';\nimport './Viewport-cc7debfb.js';\nimport './Layout.js';\nimport './FocusVisible.js';\nimport './ButtonBase.js';\nimport './IconPropTypes-aab7337d.js';\nimport './IconAddUser.js';\nimport './IconAlert.js';\nimport './IconAlignCenter.js';\nimport './IconAlignJustify.js';\nimport './IconAlignLeft.js';\nimport './IconAlignRight.js';\nimport './IconAragon.js';\nimport './IconArrowDown.js';\nimport './IconArrowLeft.js';\nimport './IconArrowRight.js';\nimport './IconArrowUp.js';\nimport './IconAtSign.js';\nimport './IconBlock.js';\nimport './IconBookmark.js';\nimport './IconCalendar.js';\nimport './IconCanvas.js';\nimport './IconCaution.js';\nimport './IconCenter.js';\nimport './IconChart.js';\nimport './IconChat.js';\nimport './IconCheck.js';\nimport './IconChip.js';\nimport './IconCircleCheck.js';\nimport './IconCircleMinus.js';\nimport './IconCirclePlus.js';\nimport './IconClock.js';\nimport './IconCloudDownload.js';\nimport './IconCloudUpload.js';\nimport './IconCoin.js';\nimport './IconConfiguration.js';\nimport './IconConnect.js';\nimport './IconConnection.js';\nimport './IconConsole.js';\nimport IconCopy from './IconCopy.js';\nimport './IconCross.js';\nimport './IconDashedSquare.js';\nimport './IconDown.js';\nimport './IconDownload.js';\nimport './IconEdit.js';\nimport './IconEllipsis.js';\nimport './IconEnter.js';\nimport './IconEthereum.js';\nimport './IconExternal.js';\nimport './IconFile.js';\nimport './IconFilter.js';\nimport './IconFlag.js';\nimport './IconFolder.js';\nimport './IconGraph2.js';\nimport './IconGraph.js';\nimport './IconGrid.js';\nimport './IconGroup.js';\nimport './IconHash.js';\nimport './IconHeart.js';\nimport './IconHide.js';\nimport './IconHome.js';\nimport './IconImage.js';\nimport './IconInfo.js';\nimport './IconLabel.js';\nimport './IconLayers.js';\nimport './IconLeft.js';\nimport './IconLink.js';\nimport './IconLocation.js';\nimport './IconLock.js';\nimport './IconMail.js';\nimport './IconMaximize.js';\nimport './IconMenu.js';\nimport './IconMinimize.js';\nimport './IconMinus.js';\nimport './IconMove.js';\nimport './IconNoPicture.js';\nimport './IconPicture.js';\nimport './IconPlus.js';\nimport './IconPower.js';\nimport './IconPrint.js';\nimport './IconProhibited.js';\nimport './IconQuestion.js';\nimport './IconRefresh.js';\nimport './IconRemoveUser.js';\nimport './IconRight.js';\nimport './IconRotateLeft.js';\nimport './IconRotateRight.js';\nimport './IconSearch.js';\nimport './IconSettings.js';\nimport './IconShare.js';\nimport './IconSquareMinus.js';\nimport './IconSquarePlus.js';\nimport './IconSquare.js';\nimport './IconStarFilled.js';\nimport './IconStar.js';\nimport './IconSwap.js';\nimport './IconTarget.js';\nimport './IconToken.js';\nimport './IconTrash.js';\nimport './IconUnlock.js';\nimport './IconUp.js';\nimport './IconUpload.js';\nimport './IconUser.js';\nimport './IconView.js';\nimport './IconVote.js';\nimport './IconWallet.js';\nimport './IconWarning.js';\nimport './IconWorld.js';\nimport './IconWrite.js';\nimport './IconZoomIn.js';\nimport './IconZoomOut.js';\nimport './objectWithoutPropertiesLoose-9606ad13.js';\nimport 'react-dom';\nimport './web-a351a0a1.js';\nimport './Button.js';\nimport ButtonIcon from './ButtonIcon.js';\nimport TextInput from './TextInput.js';\nimport { useToast } from './ToastHub.js';\nimport './index-f754c2df.js';\nimport './RootPortal.js';\nvar HEIGHT = 5 * GU;\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"TextCopy___StyledDiv\",\n  componentId: \"sc-1dg1uit-0\"\n})([\"position:relative;display:inline-flex;width:\", \"px;max-width:100%;height:\", \"px;padding-left:\", \";\"], function (p) {\n  return p._css;\n}, HEIGHT, function (p) {\n  return p._css2;\n});\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"TextCopy___StyledDiv2\",\n  componentId: \"sc-1dg1uit-1\"\n})([\"position:absolute;top:0;left:0;overflow:hidden;width:\", \"px;height:\", \"px;background:\", \";border:1px solid \", \";border-right:0;border-radius:\", \"px 0.0001px 0.0001px \", \"px;\"], HEIGHT, HEIGHT, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, RADIUS, RADIUS);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"TextCopy___StyledDiv3\",\n  componentId: \"sc-1dg1uit-2\"\n})([\"display:flex;align-items:center;justify-content:center;width:\", \"px;height:\", \"px;\"], function (p) {\n  return p._css5;\n}, function (p) {\n  return p._css6;\n});\n\nvar _StyledButtonIcon = _styled(ButtonIcon).withConfig({\n  displayName: \"TextCopy___StyledButtonIcon\",\n  componentId: \"sc-1dg1uit-3\"\n})([\"width:\", \"px;height:\", \"px;border-radius:0;color:\", \";\"], function (p) {\n  return p._css7;\n}, function (p) {\n  return p._css8;\n}, function (p) {\n  return p._css9;\n});\n\nvar _StyledTextInput = _styled(TextInput).withConfig({\n  displayName: \"TextCopy___StyledTextInput\",\n  componentId: \"sc-1dg1uit-4\"\n})([\"text-overflow:ellipsis;height:\", \"px;max-width:100%;border:1px solid \", \";\", \";\", \";&:read-only{color:\", \";text-shadow:none;}\"], HEIGHT, function (p) {\n  return p._css10;\n}, function (p) {\n  return p._css11;\n}, function (p) {\n  return p._css12;\n}, function (p) {\n  return p._css13;\n});\n\nvar TextCopy = React.memo(React.forwardRef(function TextCopy(_ref, ref) {\n  var adornment = _ref.adornment,\n      autofocus = _ref.autofocus,\n      message = _ref.message,\n      monospace = _ref.monospace,\n      onCopy = _ref.onCopy,\n      value = _ref.value,\n      props = _objectWithoutProperties(_ref, [\"adornment\", \"autofocus\", \"message\", \"monospace\", \"onCopy\", \"value\"]);\n\n  var theme = useTheme();\n  var toast = useToast();\n  var inputRef = useRef(null); // Allows to focus the component from the outside\n\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      }\n    };\n  }); // Select the content on focus\n\n  var handleFocus = useCallback(function () {\n    inputRef.current && inputRef.current.select();\n  }, []); // If onCopy is set (either to a function or null), Toast is not used.\n\n  var onCopyOrToast = onCopy === undefined ? toast : onCopy || noop;\n  var handleCopy = useCallback(function () {\n    if (inputRef.current) {\n      inputRef.current.focus();\n\n      try {\n        document.execCommand('copy');\n        onCopyOrToast(message);\n      } catch (err) {\n        warn(err);\n      }\n    }\n  }, [message, onCopyOrToast]);\n  return /*#__PURE__*/React.createElement(_StyledDiv, _extends({}, props, {\n    _css: 52.5 * GU,\n    _css2: adornment ? \"\".concat(HEIGHT, \"px\") : '0'\n  }), adornment && /*#__PURE__*/React.createElement(_StyledDiv2, {\n    _css3: theme.surface,\n    _css4: theme.border\n  }, /*#__PURE__*/React.createElement(_StyledDiv3, {\n    _css5: HEIGHT - 2,\n    _css6: HEIGHT - 2\n  }, adornment)), /*#__PURE__*/React.createElement(_StyledTextInput, {\n    ref: inputRef,\n    adornment: /*#__PURE__*/React.createElement(_StyledButtonIcon, {\n      onClick: handleCopy,\n      label: \"Copy\",\n      _css7: HEIGHT - 2,\n      _css8: HEIGHT - 2,\n      _css9: theme.surfaceIcon\n    }, /*#__PURE__*/React.createElement(IconCopy, null)),\n    adornmentPosition: \"end\",\n    adornmentSettings: {\n      // Keep the button square\n      width: HEIGHT - 2,\n      padding: 0\n    },\n    autofocus: autofocus,\n    onFocus: handleFocus,\n    readOnly: true,\n    value: value,\n    wide: true,\n    _css10: theme.border,\n    _css11: adornment ? \"\\n                  border-top-left-radius: 0;\\n                  border-bottom-left-radius: 0;\\n                  border-left: 0;\\n                \" : '',\n    _css12: textStyle(monospace ? 'address2' : 'body3'),\n    _css13: theme.surfaceContent\n  }));\n}));\nTextCopy.propTypes = {\n  adornment: PropTypes.node,\n  autofocus: PropTypes.bool,\n  message: PropTypes.string,\n  monospace: PropTypes.bool,\n  onCopy: PropTypes.func,\n  value: PropTypes.string\n};\nTextCopy.defaultProps = {\n  autofocus: false,\n  message: 'Copied',\n  monospace: true\n};\nexport default TextCopy;","map":{"version":3,"sources":["../../src/components/TextCopy/TextCopy.js"],"names":["HEIGHT","TextCopy","adornment","autofocus","message","monospace","onCopy","value","props","theme","useTheme","toast","useToast","inputRef","useRef","useImperativeHandle","focus","handleFocus","useCallback","onCopyOrToast","handleCopy","document","warn","border","RADIUS","surfaceIcon","width","padding","textStyle","surfaceContent","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { useCallback, useImperativeHandle, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconCopy } from '../../icons/'\nimport { GU, RADIUS, textStyle } from '../../style'\nimport { useTheme } from '../../theme'\nimport { noop, warn } from '../../utils'\nimport TextInput from '../Input/TextInput'\nimport ButtonIcon from '../Button/ButtonIcon'\nimport { useToast } from '../ToastHub/ToastHub'\n\nconst HEIGHT = 5 * GU\n\nconst TextCopy = React.memo(\n  React.forwardRef(function TextCopy(\n    { adornment, autofocus, message, monospace, onCopy, value, ...props },\n    ref\n  ) {\n    const theme = useTheme()\n    const toast = useToast()\n    const inputRef = useRef(null)\n\n    // Allows to focus the component from the outside\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        inputRef.current.focus()\n      },\n    }))\n\n    // Select the content on focus\n    const handleFocus = useCallback(() => {\n      inputRef.current && inputRef.current.select()\n    }, [])\n\n    // If onCopy is set (either to a function or null), Toast is not used.\n    const onCopyOrToast = onCopy === undefined ? toast : onCopy || noop\n\n    const handleCopy = useCallback(() => {\n      if (inputRef.current) {\n        inputRef.current.focus()\n\n        try {\n          document.execCommand('copy')\n          onCopyOrToast(message)\n        } catch (err) {\n          warn(err)\n        }\n      }\n    }, [message, onCopyOrToast])\n\n    return (\n      <div\n        css={`\n          position: relative;\n          display: inline-flex;\n          width: ${52.5 * GU}px;\n          max-width: 100%;\n          height: ${HEIGHT}px;\n          padding-left: ${adornment ? `${HEIGHT}px` : '0'};\n        `}\n        {...props}\n      >\n        {adornment && (\n          <div\n            css={`\n              position: absolute;\n              top: 0;\n              left: 0;\n              overflow: hidden;\n              width: ${HEIGHT}px;\n              height: ${HEIGHT}px;\n              background: ${theme.surface};\n              border: 1px solid ${theme.border};\n              border-right: 0;\n\n              // 0.0001px fixes an issue on Blink browsers, where each\n              // border-radius need to be non 0 for overflow:hidden to work.\n              border-radius: ${RADIUS}px 0.0001px 0.0001px ${RADIUS}px;\n            `}\n          >\n            <div\n              css={`\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                width: ${HEIGHT - 2}px;\n                height: ${HEIGHT - 2}px;\n              `}\n            >\n              {adornment}\n            </div>\n          </div>\n        )}\n        <TextInput\n          ref={inputRef}\n          adornment={\n            <ButtonIcon\n              onClick={handleCopy}\n              label=\"Copy\"\n              css={`\n                width: ${HEIGHT - 2}px;\n                height: ${HEIGHT - 2}px;\n                border-radius: 0;\n                color: ${theme.surfaceIcon};\n              `}\n            >\n              <IconCopy />\n            </ButtonIcon>\n          }\n          adornmentPosition=\"end\"\n          adornmentSettings={{\n            // Keep the button square\n            width: HEIGHT - 2,\n            padding: 0,\n          }}\n          autofocus={autofocus}\n          onFocus={handleFocus}\n          readOnly\n          value={value}\n          wide\n          css={`\n            text-overflow: ellipsis;\n            height: ${HEIGHT}px;\n            max-width: 100%;\n            border: 1px solid ${theme.border};\n            ${adornment\n              ? `\n                  border-top-left-radius: 0;\n                  border-bottom-left-radius: 0;\n                  border-left: 0;\n                `\n              : ''};\n            ${textStyle(monospace ? 'address2' : 'body3')};\n            &:read-only {\n              color: ${theme.surfaceContent};\n              text-shadow: none;\n            }\n          `}\n        />\n      </div>\n    )\n  })\n)\n\nTextCopy.propTypes = {\n  adornment: PropTypes.node,\n  autofocus: PropTypes.bool,\n  message: PropTypes.string,\n  monospace: PropTypes.bool,\n  onCopy: PropTypes.func,\n  value: PropTypes.string,\n}\n\nTextCopy.defaultProps = {\n  autofocus: false,\n  message: 'Copied',\n  monospace: true,\n}\n\nexport default TextCopy\n"]},"metadata":{},"sourceType":"module"}