{"ast":null,"code":"var _jsxFileName = \"/Users/J/crypto/dashboard/src/components/Regulation/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Header, Layout } from '@aragon/ui';\nimport { getDaoIsBootstrapping, getPoolTotalBonded, getTotalClaimable, getTotalRewarded, getPoolTotalStaged, getTokenBalance, getTokenTotalSupply, getTotalBonded, getTotalStaged } from '../../utils/infura';\nimport { QSD, QSDS, UNI } from '../../constants/tokens';\nimport { toTokenUnitsBN } from '../../utils/number';\nimport BigNumber from 'bignumber.js';\nimport RegulationHeader from './Header';\nimport RegulationHistory from './RegulationHistory';\nimport IconHeader from '../common/IconHeader';\nimport { getPoolBondingAddress, getPoolLPAddress } from '../../utils/pool';\n\nfunction Regulation({\n  user,\n  hideHistory\n}) {\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n  const [daoBonded, setTotalBonded] = useState(new BigNumber(0));\n  const [daoStaged, setTotalStaged] = useState(new BigNumber(0));\n  const [poolLPLiquidity, setPoolLiquidity] = useState(new BigNumber(0));\n  const [poolTotalRewarded, setPoolTotalRewarded] = useState(new BigNumber(0));\n  const [poolTotalClaimable, setPoolTotalClaimable] = useState(new BigNumber(0));\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const poolBondingAddress = await getPoolBondingAddress();\n      const poolLpAddress = await getPoolLPAddress();\n      const [totalSupplyStr, totalBondedStr, totalStagedStr, poolLiquidityStr, poolTotalBondedStr, poolTotalStagedStr, poolTotalRewardedStr, poolTotalClaimableStr, bootstrapping] = await Promise.all([getTokenTotalSupply(QSD.addr), getTotalBonded(QSDS.addr), getTotalStaged(QSDS.addr), getTokenBalance(QSD.addr, UNI.addr), getPoolTotalBonded(poolBondingAddress), getPoolTotalStaged(poolBondingAddress), getTotalRewarded(poolLpAddress), getTotalClaimable(poolLpAddress), getDaoIsBootstrapping()]);\n\n      if (!isCancelled) {\n        setTotalSupply(toTokenUnitsBN(totalSupplyStr, QSD.decimals));\n\n        if (bootstrapping) {\n          setTotalBonded(toTokenUnitsBN(totalBondedStr, QSD.decimals));\n          setTotalStaged(toTokenUnitsBN(totalStagedStr, QSD.decimals));\n        } else {\n          setTotalBonded(toTokenUnitsBN(poolTotalBondedStr, QSD.decimals));\n          setTotalStaged(toTokenUnitsBN(poolTotalStagedStr, QSD.decimals));\n        }\n\n        setPoolLiquidity(toTokenUnitsBN(poolLiquidityStr, QSD.decimals));\n        setPoolTotalRewarded(toTokenUnitsBN(poolTotalRewardedStr, QSD.decimals));\n        setPoolTotalClaimable(toTokenUnitsBN(poolTotalClaimableStr, QSD.decimals));\n      }\n    }\n\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000); // eslint-disable-next-line consistent-return\n\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconHeader, {\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-chart-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }),\n    text: \"Supply Regulation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RegulationHeader, {\n    totalSupply: totalSupply,\n    daoBonded: daoBonded,\n    daoStaged: daoStaged,\n    poolLPLiquidity: poolLPLiquidity,\n    poolLPRewarded: poolTotalRewarded,\n    poolLPClaimable: poolTotalClaimable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), !hideHistory && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    primary: \"Regulation History\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RegulationHistory, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default Regulation;","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/Regulation/index.tsx"],"names":["React","useState","useEffect","Header","Layout","getDaoIsBootstrapping","getPoolTotalBonded","getTotalClaimable","getTotalRewarded","getPoolTotalStaged","getTokenBalance","getTokenTotalSupply","getTotalBonded","getTotalStaged","QSD","QSDS","UNI","toTokenUnitsBN","BigNumber","RegulationHeader","RegulationHistory","IconHeader","getPoolBondingAddress","getPoolLPAddress","Regulation","user","hideHistory","totalSupply","setTotalSupply","daoBonded","setTotalBonded","daoStaged","setTotalStaged","poolLPLiquidity","setPoolLiquidity","poolTotalRewarded","setPoolTotalRewarded","poolTotalClaimable","setPoolTotalClaimable","isCancelled","updateUserInfo","poolBondingAddress","poolLpAddress","totalSupplyStr","totalBondedStr","totalStagedStr","poolLiquidityStr","poolTotalBondedStr","poolTotalStagedStr","poolTotalRewardedStr","poolTotalClaimableStr","bootstrapping","Promise","all","addr","decimals","id","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Header, Layout } from '@aragon/ui';\n\nimport {\n  getDaoIsBootstrapping,\n  getPoolTotalBonded,\n  getTotalClaimable,\n  getTotalRewarded,\n  getPoolTotalStaged,\n  getTokenBalance,\n  getTokenTotalSupply,\n  getTotalBonded,\n  getTotalStaged,\n} from '../../utils/infura';\nimport { QSD, QSDS, UNI } from '../../constants/tokens';\nimport { toTokenUnitsBN } from '../../utils/number';\nimport BigNumber from 'bignumber.js';\nimport RegulationHeader from './Header';\nimport RegulationHistory from './RegulationHistory';\nimport IconHeader from '../common/IconHeader';\nimport { getPoolBondingAddress, getPoolLPAddress } from '../../utils/pool';\n\nfunction Regulation({\n  user,\n  hideHistory,\n}: {\n  user: string;\n  hideHistory?: boolean;\n}) {\n  const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n  const [daoBonded, setTotalBonded] = useState(new BigNumber(0));\n  const [daoStaged, setTotalStaged] = useState(new BigNumber(0));\n  const [poolLPLiquidity, setPoolLiquidity] = useState(new BigNumber(0));\n  const [poolTotalRewarded, setPoolTotalRewarded] = useState(new BigNumber(0));\n  const [poolTotalClaimable, setPoolTotalClaimable] = useState(\n    new BigNumber(0)\n  );\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    async function updateUserInfo() {\n      const poolBondingAddress = await getPoolBondingAddress();\n      const poolLpAddress = await getPoolLPAddress()\n\n      const [\n        totalSupplyStr,\n        totalBondedStr,\n        totalStagedStr,\n        poolLiquidityStr,\n        poolTotalBondedStr,\n        poolTotalStagedStr,\n        poolTotalRewardedStr,\n        poolTotalClaimableStr,\n        bootstrapping,\n      ] = await Promise.all([\n        getTokenTotalSupply(QSD.addr),\n\n        getTotalBonded(QSDS.addr),\n        getTotalStaged(QSDS.addr),\n\n        getTokenBalance(QSD.addr, UNI.addr),\n\n        getPoolTotalBonded(poolBondingAddress),\n        getPoolTotalStaged(poolBondingAddress),\n\n        getTotalRewarded(poolLpAddress),\n        getTotalClaimable(poolLpAddress),\n\n        getDaoIsBootstrapping(),\n      ]);\n\n      if (!isCancelled) {\n        setTotalSupply(toTokenUnitsBN(totalSupplyStr, QSD.decimals));\n\n        if (bootstrapping) {\n          setTotalBonded(toTokenUnitsBN(totalBondedStr, QSD.decimals));\n          setTotalStaged(toTokenUnitsBN(totalStagedStr, QSD.decimals));\n        } else {\n          setTotalBonded(toTokenUnitsBN(poolTotalBondedStr, QSD.decimals));\n          setTotalStaged(toTokenUnitsBN(poolTotalStagedStr, QSD.decimals));\n        }\n\n        setPoolLiquidity(toTokenUnitsBN(poolLiquidityStr, QSD.decimals));\n        setPoolTotalRewarded(\n          toTokenUnitsBN(poolTotalRewardedStr, QSD.decimals)\n        );\n        setPoolTotalClaimable(\n          toTokenUnitsBN(poolTotalClaimableStr, QSD.decimals)\n        );\n      }\n    }\n    updateUserInfo();\n    const id = setInterval(updateUserInfo, 15000);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      isCancelled = true;\n      clearInterval(id);\n    };\n  }, [user]);\n\n  return (\n    <Layout>\n      <IconHeader\n        icon={<i className='fas fa-chart-area' />}\n        text='Supply Regulation'\n      />\n\n      <RegulationHeader\n        totalSupply={totalSupply}\n        daoBonded={daoBonded}\n        daoStaged={daoStaged}\n        poolLPLiquidity={poolLPLiquidity}\n        poolLPRewarded={poolTotalRewarded}\n        poolLPClaimable={poolTotalClaimable}\n      />\n\n      {!hideHistory && (\n        <>\n          <Header primary='Regulation History' />\n          <RegulationHistory user={user} />\n        </>\n      )}\n    </Layout>\n  );\n}\n\nexport default Regulation;\n"]},"metadata":{},"sourceType":"module"}