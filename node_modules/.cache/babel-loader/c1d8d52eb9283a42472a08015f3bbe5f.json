{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-4e274c67.js';\nimport './unsupportedIterableToArray-137e449b.js';\nimport React, { useContext, useMemo } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport { _ as _defineProperty } from './defineProperty-a0480c32.js';\nimport './toConsumableArray-127424c2.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-b96da1e1.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport { cssPx } from './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { GU } from './constants.js';\nimport { BREAKPOINTS } from './breakpoints.js';\nimport './springs.js';\nimport './text-styles.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport './isObject-3c6ec07e.js';\nimport { u as useViewport } from './Viewport-cc7debfb.js';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction getSizes(breakpoints) {\n  return Object.entries(breakpoints).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        name = _ref2[0];\n\n    return name !== 'min';\n  }).sort(function (a, b) {\n    return a[1] - b[1];\n  });\n} // Minimum margin around a layouts\n\n\nvar MIN_MARGIN = 3 * GU;\n\nfunction getLayoutSize(parentWidth, breakpoints) {\n  var sizes = getSizes(breakpoints);\n  var index = sizes.length;\n\n  while (index--) {\n    if (parentWidth >= sizes[index][1]) {\n      return [sizes[index][0], sizes[index][1] - (index === 0 ? 0 : MIN_MARGIN * 2)];\n    }\n  }\n\n  return sizes[0];\n}\n\nvar LayoutContext = React.createContext({});\n\nfunction useLayout() {\n  var _useContext = useContext(LayoutContext),\n      layoutWidth = _useContext.layoutWidth,\n      layoutName = _useContext.layoutName;\n\n  return {\n    layoutName: layoutName,\n    layoutWidth: layoutWidth,\n    // deprecated\n    name: layoutName,\n    width: layoutWidth\n  };\n}\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"Layout___StyledDiv\",\n  componentId: \"sc-16bvfls-0\"\n})([\"width:\", \";min-width:\", \"px;margin:0 auto;padding-bottom:\", \";\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n});\n\nfunction Layout(_ref3) {\n  var breakpoints = _ref3.breakpoints,\n      children = _ref3.children,\n      paddingBottom = _ref3.paddingBottom,\n      parentWidth = _ref3.parentWidth,\n      props = _objectWithoutProperties(_ref3, [\"breakpoints\", \"children\", \"paddingBottom\", \"parentWidth\"]);\n\n  var _useViewport = useViewport(),\n      viewportWidth = _useViewport.width;\n\n  var mergedBreakpoints = useMemo(function () {\n    return _objectSpread({}, BREAKPOINTS, {}, breakpoints);\n  }, [breakpoints]); // If the parent width is not passed, use the viewport width.\n\n  var _useMemo = useMemo(function () {\n    return getLayoutSize(parentWidth === undefined ? viewportWidth : parentWidth, mergedBreakpoints);\n  }, [viewportWidth, parentWidth, mergedBreakpoints]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      layoutName = _useMemo2[0],\n      layoutWidth = _useMemo2[1];\n\n  return /*#__PURE__*/React.createElement(LayoutContext.Provider, {\n    value: {\n      layoutWidth: layoutWidth,\n      layoutName: layoutName\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv, _extends({}, props, {\n    _css: layoutName === 'small' ? 'auto' : \"\".concat(layoutWidth, \"px\"),\n    _css2: mergedBreakpoints.min,\n    _css3: cssPx(paddingBottom)\n  }), children));\n}\n\nLayout.propTypes = {\n  breakpoints: PropTypes.shape({\n    min: PropTypes.number,\n    small: PropTypes.number,\n    medium: PropTypes.number,\n    large: PropTypes.number\n  }),\n  children: PropTypes.node,\n  paddingBottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  parentWidth: PropTypes.number\n};\nLayout.defaultProps = {\n  breakpoints: {},\n  paddingBottom: 3 * GU\n}; // Can be used to build an alternative Layout component\n\nLayout.__Context = LayoutContext;\nexport default Layout;\nexport { useLayout };","map":{"version":3,"sources":["../../src/components/Layout/Layout.js"],"names":["name","a","b","MIN_MARGIN","sizes","getSizes","index","parentWidth","LayoutContext","React","layoutWidth","layoutName","useContext","width","breakpoints","children","paddingBottom","props","viewportWidth","useViewport","mergedBreakpoints","useMemo","getLayoutSize","cssPx","Layout","min","PropTypes","small","medium","large","number","GU"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useViewport } from '../../providers/Viewport/Viewport'\nimport { BREAKPOINTS, GU } from '../../style'\nimport { cssPx } from '../../utils'\n\nfunction getSizes(breakpoints) {\n  return Object.entries(breakpoints)\n    .filter(([name]) => name !== 'min')\n    .sort((a, b) => a[1] - b[1])\n}\n\n// Minimum margin around a layouts\nconst MIN_MARGIN = 3 * GU\n\nfunction getLayoutSize(parentWidth, breakpoints) {\n  const sizes = getSizes(breakpoints)\n\n  let index = sizes.length\n  while (index--) {\n    if (parentWidth >= sizes[index][1]) {\n      return [\n        sizes[index][0],\n        sizes[index][1] - (index === 0 ? 0 : MIN_MARGIN * 2),\n      ]\n    }\n  }\n\n  return sizes[0]\n}\n\nconst LayoutContext = React.createContext({})\n\nfunction useLayout() {\n  const { layoutWidth, layoutName } = useContext(LayoutContext)\n  return {\n    layoutName,\n    layoutWidth,\n\n    // deprecated\n    name: layoutName,\n    width: layoutWidth,\n  }\n}\n\nfunction Layout({\n  breakpoints,\n  children,\n  paddingBottom,\n  parentWidth,\n  ...props\n}) {\n  const { width: viewportWidth } = useViewport()\n\n  const mergedBreakpoints = useMemo(\n    () => ({ ...BREAKPOINTS, ...breakpoints }),\n    [breakpoints]\n  )\n\n  // If the parent width is not passed, use the viewport width.\n  const [layoutName, layoutWidth] = useMemo(\n    () =>\n      getLayoutSize(\n        parentWidth === undefined ? viewportWidth : parentWidth,\n        mergedBreakpoints\n      ),\n    [viewportWidth, parentWidth, mergedBreakpoints]\n  )\n\n  return (\n    <LayoutContext.Provider value={{ layoutWidth, layoutName }}>\n      <div\n        {...props}\n        css={`\n          width: ${layoutName === 'small' ? 'auto' : `${layoutWidth}px`};\n          min-width: ${mergedBreakpoints.min}px;\n          margin: 0 auto;\n          padding-bottom: ${cssPx(paddingBottom)};\n        `}\n      >\n        {children}\n      </div>\n    </LayoutContext.Provider>\n  )\n}\n\nLayout.propTypes = {\n  breakpoints: PropTypes.shape({\n    min: PropTypes.number,\n    small: PropTypes.number,\n    medium: PropTypes.number,\n    large: PropTypes.number,\n  }),\n  children: PropTypes.node,\n  paddingBottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  parentWidth: PropTypes.number,\n}\n\nLayout.defaultProps = {\n  breakpoints: {},\n  paddingBottom: 3 * GU,\n}\n\n// Can be used to build an alternative Layout component\nLayout.__Context = LayoutContext\n\nexport default Layout\nexport { useLayout }\n"]},"metadata":{},"sourceType":"module"}