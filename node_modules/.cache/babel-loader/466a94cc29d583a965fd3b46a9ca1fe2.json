{"ast":null,"code":"import React from'react';import BigNumber from'bignumber.js';import{TextInput}from'@aragon/ui';function BigNumberInput(_ref){var value=_ref.value,setter=_ref.setter,adornment=_ref.adornment,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TextInput,{type:\"number\",adornmentPosition:\"end\",adornment:adornment,wide:true,value:value.isNegative()?'':value.toFixed(),onChange:function onChange(event){if(event.target.value){setter(new BigNumber(event.target.value));}else{setter(new BigNumber(-1));}},onBlur:function onBlur(){if(value.isNegative()){setter(new BigNumber(0));}},disabled:disabled}));}export default BigNumberInput;","map":{"version":3,"sources":["/Users/J/crypto/dashboard/src/components/common/BigNumberInput.tsx"],"names":["React","BigNumber","TextInput","BigNumberInput","value","setter","adornment","disabled","isNegative","toFixed","event","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,OACEC,SADF,KAEO,YAFP,CAWA,QAASC,CAAAA,cAAT,MAA2F,IAAjEC,CAAAA,KAAiE,MAAjEA,KAAiE,CAA1DC,MAA0D,MAA1DA,MAA0D,CAAlDC,SAAkD,MAAlDA,SAAkD,oBAAvCC,QAAuC,CAAvCA,QAAuC,wBAA9B,KAA8B,eACzF,mBACE,qDACE,oBAAC,SAAD,EACE,IAAI,CAAC,QADP,CAEE,iBAAiB,CAAC,KAFpB,CAGE,SAAS,CAAED,SAHb,CAIE,IAAI,KAJN,CAKE,KAAK,CAAEF,KAAK,CAACI,UAAN,GAAqB,EAArB,CAA0BJ,KAAK,CAACK,OAAN,EALnC,CAME,QAAQ,CAAE,kBAACC,KAAD,CAAW,CACnB,GAAIA,KAAK,CAACC,MAAN,CAAaP,KAAjB,CAAwB,CACtBC,MAAM,CAAC,GAAIJ,CAAAA,SAAJ,CAAcS,KAAK,CAACC,MAAN,CAAaP,KAA3B,CAAD,CAAN,CACD,CAFD,IAEO,CACLC,MAAM,CAAC,GAAIJ,CAAAA,SAAJ,CAAc,CAAC,CAAf,CAAD,CAAN,CACD,CACF,CAZH,CAaE,MAAM,CAAE,iBAAM,CACZ,GAAIG,KAAK,CAACI,UAAN,EAAJ,CAAwB,CACtBH,MAAM,CAAC,GAAIJ,CAAAA,SAAJ,CAAc,CAAd,CAAD,CAAN,CACD,CACF,CAjBH,CAkBE,QAAQ,CAAEM,QAlBZ,EADF,CADF,CAwBD,CAED,cAAeJ,CAAAA,cAAf","sourcesContent":["import React from 'react';\n\nimport BigNumber from 'bignumber.js';\nimport {\n  TextInput,\n} from '@aragon/ui';\n\ntype BigNumberInputProps = {\n  value: BigNumber,\n  setter: (value: BigNumber) => void\n  adornment?: any,\n  disabled?: boolean\n}\n\nfunction BigNumberInput({ value, setter, adornment, disabled=false }: BigNumberInputProps) {\n  return (\n    <>\n      <TextInput\n        type=\"number\"\n        adornmentPosition=\"end\"\n        adornment={adornment}\n        wide\n        value={value.isNegative() ? '' : value.toFixed()}\n        onChange={(event) => {\n          if (event.target.value) {\n            setter(new BigNumber(event.target.value));\n          } else {\n            setter(new BigNumber(-1));\n          }\n        }}\n        onBlur={() => {\n          if (value.isNegative()) {\n            setter(new BigNumber(0))\n          }\n        }}\n        disabled={disabled}\n      />\n    </>\n  );\n}\n\nexport default BigNumberInput;\n"]},"metadata":{},"sourceType":"module"}